#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input world_ui.glsl --output world_ui.h --slang glsl300es

    Overview:

        Shader program 'txt_quad':
            Get shader desc: txt_quad_shader_desc(sg_query_backend());
            Vertex shader: txt_quad_vs
                Attribute slots:
                    ATTR_txt_quad_vs_Iposition = 0
                    ATTR_txt_quad_vs_Irot = 1
                    ATTR_txt_quad_vs_Isize = 2
                    ATTR_txt_quad_vs_Itext_color = 3
                    ATTR_txt_quad_vs_Ibg_color = 4
                    ATTR_txt_quad_vs_Iuv_min = 5
                    ATTR_txt_quad_vs_Iuv_max = 6
                    ATTR_txt_quad_vs_Iglyph_xy = 7
                    ATTR_txt_quad_vs_bbox = 8
                    ATTR_txt_quad_vs_Iflag = 9
                    ATTR_txt_quad_vs_offset = 10
                Uniform block 'txt_quad_params':
                    C struct: txt_quad_params_t
                    Bind slot: SLOT_txt_quad_params = 0
            Fragment shader: txt_quad_fs
                Uniform block 'txt_quad_params':
                    C struct: txt_quad_params_t
                    Bind slot: SLOT_txt_quad_params = 0
                Image 'font_texture':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_font_texture = 0
                Image 'depth_texture':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_depth_texture = 1


    Shader descriptor structs:

        sg_shader txt_quad = sg_make_shader(txt_quad_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'txt_quad_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_txt_quad_vs_Iposition] = { ... },
                    [ATTR_txt_quad_vs_Irot] = { ... },
                    [ATTR_txt_quad_vs_Isize] = { ... },
                    [ATTR_txt_quad_vs_Itext_color] = { ... },
                    [ATTR_txt_quad_vs_Ibg_color] = { ... },
                    [ATTR_txt_quad_vs_Iuv_min] = { ... },
                    [ATTR_txt_quad_vs_Iuv_max] = { ... },
                    [ATTR_txt_quad_vs_Iglyph_xy] = { ... },
                    [ATTR_txt_quad_vs_bbox] = { ... },
                    [ATTR_txt_quad_vs_Iflag] = { ... },
                    [ATTR_txt_quad_vs_offset] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_font_texture = 0;
        SLOT_depth_texture = 1;

    Bind slot and C-struct for uniform block 'txt_quad_params':

        txt_quad_params_t txt_quad_params = {
            .mvp = ...;
            .dpi = ...;
            .screenW = ...;
            .screenH = ...;
            .behind_opacity = ...;
            .shine_color_intensity = ...;
            .hover_shine_color_intensity = ...;
            .selected_shine_color_intensity = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_txt_quad_params, &SG_RANGE(txt_quad_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_txt_quad_vs_Iposition (0)
#define ATTR_txt_quad_vs_Irot (1)
#define ATTR_txt_quad_vs_Isize (2)
#define ATTR_txt_quad_vs_Itext_color (3)
#define ATTR_txt_quad_vs_Ibg_color (4)
#define ATTR_txt_quad_vs_Iuv_min (5)
#define ATTR_txt_quad_vs_Iuv_max (6)
#define ATTR_txt_quad_vs_Iglyph_xy (7)
#define ATTR_txt_quad_vs_bbox (8)
#define ATTR_txt_quad_vs_Iflag (9)
#define ATTR_txt_quad_vs_offset (10)
#define SLOT_font_texture (0)
#define SLOT_depth_texture (1)
#define SLOT_txt_quad_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct txt_quad_params_t {
    glm::mat4 mvp;
    float dpi;
    float screenW;
    float screenH;
    float behind_opacity;
    glm::vec4 shine_color_intensity;
    glm::vec4 hover_shine_color_intensity;
    glm::vec4 selected_shine_color_intensity;
} txt_quad_params_t;
#pragma pack(pop)
/*
    #version 300 es
    
    uniform vec4 txt_quad_params[8];
    out vec4 text_color;
    layout(location = 3) in vec4 Itext_color;
    out vec4 bg_color;
    layout(location = 4) in vec4 Ibg_color;
    flat out int flag;
    layout(location = 9) in vec2 Iflag;
    flat out vec4 vid;
    flat out vec2 uv_min;
    layout(location = 5) in vec2 Iuv_min;
    flat out vec2 uv_max;
    layout(location = 6) in vec2 Iuv_max;
    layout(location = 0) in vec3 Iposition;
    layout(location = 7) in vec4 Iglyph_xy;
    layout(location = 8) in vec2 bbox;
    out vec2 uv;
    layout(location = 1) in float Irot;
    layout(location = 2) in vec2 Isize;
    layout(location = 10) in vec2 offset;
    
    void main()
    {
        float xf = float(gl_VertexID % 2);
        float yf = float(gl_VertexID / 2);
        text_color = Itext_color;
        bg_color = Ibg_color;
        flag = int(Iflag.x);
        vid = vec4(4.0, float(flag >> 8), Iflag.y, 0.0);
        uv_min = Iuv_min;
        uv_max = Iuv_max;
        vec4 _82 = mat4(txt_quad_params[0], txt_quad_params[1], txt_quad_params[2], txt_quad_params[3]) * vec4(Iposition, 1.0);
        float _113 = (Iuv_max.x - Iuv_min.x) / ((Iglyph_xy.z - Iglyph_xy.x) / bbox.x);
        float _124 = Iuv_min.x - ((_113 * Iglyph_xy.x) / bbox.x);
        float _140 = (Iuv_max.y - Iuv_min.y) / ((Iglyph_xy.w - Iglyph_xy.y) / bbox.y);
        float _151 = Iuv_min.y - ((_140 * Iglyph_xy.y) / bbox.y);
        if ((flag & 64) != 0)
        {
            float yk = yf;
            bool _161 = gl_VertexID == 0;
            if (_161)
            {
                yk = -0.300000011920928955078125;
            }
            uv = vec2(_113, _140) * vec2(xf, 1.0 - yk) + vec2(_124, _151);
            float yy = yf + 0.300000011920928955078125;
            if (_161)
            {
                yy = 0.0;
            }
            float _189 = cos(Irot);
            float _192 = sin(Irot);
            float _196 = xf;
            float _201 = Isize.x * _196 + offset.x;
            xf = _201;
            float _204 = yy;
            float _208 = Isize.y * _204 + offset.y;
            yy = _208;
            gl_Position = _82 + vec4(((vec2(_201 * _189 + (-(_208 * _192)), _201 * _192 + (_208 * _189)) / vec2(txt_quad_params[4].y, txt_quad_params[4].z)) * 2.0) * _82.w, 0.0, 0.0);
        }
        else
        {
            float _259 = xf;
            float _260 = yf;
            uv = vec2(_113, _140) * vec2(_259, 1.0 - _260) + vec2(_124, _151);
            float _267 = cos(Irot);
            float _270 = sin(Irot);
            float _279 = Isize.x * (_259 - 0.5) + offset.x;
            xf = _279;
            float _287 = Isize.y * (_260 - 0.5) + offset.y;
            yf = _287;
            gl_Position = _82 + vec4(((vec2(_279 * _267 + (-(_287 * _270)), _279 * _270 + (_287 * _267)) / vec2(txt_quad_params[4].y, txt_quad_params[4].z)) * 2.0) * _82.w, 0.0, 0.0);
        }
    }
    
*/
static const char txt_quad_vs_source_glsl300es[2627] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x74,0x78,
    0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x74,0x65,0x78,0x74,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x20,0x49,0x74,0x65,0x78,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x62,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,
    0x20,0x49,0x62,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x66,0x6c,0x61,0x74,
    0x20,0x6f,0x75,0x74,0x20,0x69,0x6e,0x74,0x20,0x66,0x6c,0x61,0x67,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x39,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x49,0x66,0x6c,0x61,
    0x67,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,
    0x20,0x76,0x69,0x64,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x32,0x20,0x75,0x76,0x5f,0x6d,0x69,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x49,0x75,0x76,0x5f,0x6d,0x69,0x6e,
    0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,
    0x75,0x76,0x5f,0x6d,0x61,0x78,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x36,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x32,0x20,0x49,0x75,0x76,0x5f,0x6d,0x61,0x78,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x49,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x37,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x34,0x20,0x49,0x67,0x6c,0x79,0x70,0x68,0x5f,0x78,0x79,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x38,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x62,0x62,0x6f,0x78,0x3b,
    0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x49,0x72,0x6f,0x74,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x49,
    0x73,0x69,0x7a,0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x32,0x20,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x78,0x66,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x20,0x25,0x20,0x32,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x79,0x66,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,
    0x49,0x44,0x20,0x2f,0x20,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x65,0x78,
    0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x49,0x74,0x65,0x78,0x74,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x49,0x62,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x61,0x67,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,
    0x49,0x66,0x6c,0x61,0x67,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x69,
    0x64,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x34,0x2e,0x30,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x66,0x6c,0x61,0x67,0x20,0x3e,0x3e,0x20,0x38,0x29,0x2c,0x20,
    0x49,0x66,0x6c,0x61,0x67,0x2e,0x79,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x76,0x5f,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x49,0x75,0x76,0x5f,
    0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x5f,0x6d,0x61,0x78,0x20,
    0x3d,0x20,0x49,0x75,0x76,0x5f,0x6d,0x61,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x74,
    0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,
    0x5d,0x2c,0x20,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x74,0x78,0x74,0x5f,0x71,
    0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x49,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x31,0x33,0x20,0x3d,0x20,0x28,0x49,0x75,0x76,0x5f,0x6d,0x61,0x78,
    0x2e,0x78,0x20,0x2d,0x20,0x49,0x75,0x76,0x5f,0x6d,0x69,0x6e,0x2e,0x78,0x29,0x20,
    0x2f,0x20,0x28,0x28,0x49,0x67,0x6c,0x79,0x70,0x68,0x5f,0x78,0x79,0x2e,0x7a,0x20,
    0x2d,0x20,0x49,0x67,0x6c,0x79,0x70,0x68,0x5f,0x78,0x79,0x2e,0x78,0x29,0x20,0x2f,
    0x20,0x62,0x62,0x6f,0x78,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x34,0x20,0x3d,0x20,0x49,0x75,0x76,0x5f,0x6d,
    0x69,0x6e,0x2e,0x78,0x20,0x2d,0x20,0x28,0x28,0x5f,0x31,0x31,0x33,0x20,0x2a,0x20,
    0x49,0x67,0x6c,0x79,0x70,0x68,0x5f,0x78,0x79,0x2e,0x78,0x29,0x20,0x2f,0x20,0x62,
    0x62,0x6f,0x78,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x34,0x30,0x20,0x3d,0x20,0x28,0x49,0x75,0x76,0x5f,0x6d,0x61,
    0x78,0x2e,0x79,0x20,0x2d,0x20,0x49,0x75,0x76,0x5f,0x6d,0x69,0x6e,0x2e,0x79,0x29,
    0x20,0x2f,0x20,0x28,0x28,0x49,0x67,0x6c,0x79,0x70,0x68,0x5f,0x78,0x79,0x2e,0x77,
    0x20,0x2d,0x20,0x49,0x67,0x6c,0x79,0x70,0x68,0x5f,0x78,0x79,0x2e,0x79,0x29,0x20,
    0x2f,0x20,0x62,0x62,0x6f,0x78,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x35,0x31,0x20,0x3d,0x20,0x49,0x75,0x76,0x5f,
    0x6d,0x69,0x6e,0x2e,0x79,0x20,0x2d,0x20,0x28,0x28,0x5f,0x31,0x34,0x30,0x20,0x2a,
    0x20,0x49,0x67,0x6c,0x79,0x70,0x68,0x5f,0x78,0x79,0x2e,0x79,0x29,0x20,0x2f,0x20,
    0x62,0x62,0x6f,0x78,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x28,0x66,0x6c,0x61,0x67,0x20,0x26,0x20,0x36,0x34,0x29,0x20,0x21,0x3d,0x20,
    0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x79,0x6b,0x20,0x3d,0x20,0x79,0x66,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x36,
    0x31,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x20,
    0x3d,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x31,0x36,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x79,0x6b,
    0x20,0x3d,0x20,0x2d,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,
    0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x31,0x31,0x33,
    0x2c,0x20,0x5f,0x31,0x34,0x30,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x32,0x28,0x78,
    0x66,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x79,0x6b,0x29,0x20,0x2b,0x20,0x76,
    0x65,0x63,0x32,0x28,0x5f,0x31,0x32,0x34,0x2c,0x20,0x5f,0x31,0x35,0x31,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x79,
    0x79,0x20,0x3d,0x20,0x79,0x66,0x20,0x2b,0x20,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,
    0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x31,0x36,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x79,0x79,0x20,
    0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x38,0x39,0x20,0x3d,0x20,0x63,0x6f,0x73,0x28,0x49,0x72,0x6f,0x74,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x39,0x32,0x20,0x3d,0x20,0x73,0x69,0x6e,0x28,0x49,0x72,0x6f,0x74,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x39,0x36,0x20,0x3d,0x20,0x78,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x30,0x31,0x20,0x3d,0x20,0x49,
    0x73,0x69,0x7a,0x65,0x2e,0x78,0x20,0x2a,0x20,0x5f,0x31,0x39,0x36,0x20,0x2b,0x20,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x78,0x66,0x20,0x3d,0x20,0x5f,0x32,0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x30,0x34,0x20,
    0x3d,0x20,0x79,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x30,0x38,0x20,0x3d,0x20,0x49,0x73,0x69,0x7a,0x65,
    0x2e,0x79,0x20,0x2a,0x20,0x5f,0x32,0x30,0x34,0x20,0x2b,0x20,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x79,0x79,
    0x20,0x3d,0x20,0x5f,0x32,0x30,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,
    0x38,0x32,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x28,0x76,0x65,0x63,0x32,
    0x28,0x5f,0x32,0x30,0x31,0x20,0x2a,0x20,0x5f,0x31,0x38,0x39,0x20,0x2b,0x20,0x28,
    0x2d,0x28,0x5f,0x32,0x30,0x38,0x20,0x2a,0x20,0x5f,0x31,0x39,0x32,0x29,0x29,0x2c,
    0x20,0x5f,0x32,0x30,0x31,0x20,0x2a,0x20,0x5f,0x31,0x39,0x32,0x20,0x2b,0x20,0x28,
    0x5f,0x32,0x30,0x38,0x20,0x2a,0x20,0x5f,0x31,0x38,0x39,0x29,0x29,0x20,0x2f,0x20,
    0x76,0x65,0x63,0x32,0x28,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x79,0x2c,0x20,0x74,0x78,0x74,0x5f,0x71,
    0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x7a,0x29,
    0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2a,0x20,0x5f,0x38,0x32,0x2e,0x77,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x32,0x35,0x39,0x20,0x3d,0x20,0x78,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,0x30,0x20,0x3d,0x20,
    0x79,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x31,0x31,0x33,0x2c,0x20,0x5f,0x31,0x34,0x30,
    0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x35,0x39,0x2c,0x20,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x5f,0x32,0x36,0x30,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,
    0x32,0x28,0x5f,0x31,0x32,0x34,0x2c,0x20,0x5f,0x31,0x35,0x31,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,
    0x37,0x20,0x3d,0x20,0x63,0x6f,0x73,0x28,0x49,0x72,0x6f,0x74,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x37,
    0x30,0x20,0x3d,0x20,0x73,0x69,0x6e,0x28,0x49,0x72,0x6f,0x74,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x37,
    0x39,0x20,0x3d,0x20,0x49,0x73,0x69,0x7a,0x65,0x2e,0x78,0x20,0x2a,0x20,0x28,0x5f,
    0x32,0x35,0x39,0x20,0x2d,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x78,
    0x66,0x20,0x3d,0x20,0x5f,0x32,0x37,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x38,0x37,0x20,0x3d,0x20,0x49,
    0x73,0x69,0x7a,0x65,0x2e,0x79,0x20,0x2a,0x20,0x28,0x5f,0x32,0x36,0x30,0x20,0x2d,
    0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x6f,0x66,0x66,0x73,0x65,0x74,0x2e,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x79,0x66,0x20,0x3d,0x20,0x5f,
    0x32,0x38,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x38,0x32,0x20,0x2b,
    0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x37,
    0x39,0x20,0x2a,0x20,0x5f,0x32,0x36,0x37,0x20,0x2b,0x20,0x28,0x2d,0x28,0x5f,0x32,
    0x38,0x37,0x20,0x2a,0x20,0x5f,0x32,0x37,0x30,0x29,0x29,0x2c,0x20,0x5f,0x32,0x37,
    0x39,0x20,0x2a,0x20,0x5f,0x32,0x37,0x30,0x20,0x2b,0x20,0x28,0x5f,0x32,0x38,0x37,
    0x20,0x2a,0x20,0x5f,0x32,0x36,0x37,0x29,0x29,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,
    0x28,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x34,0x5d,0x2e,0x79,0x2c,0x20,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x7a,0x29,0x29,0x20,0x2a,0x20,
    0x32,0x2e,0x30,0x29,0x20,0x2a,0x20,0x5f,0x38,0x32,0x2e,0x77,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 txt_quad_params[8];
    uniform highp sampler2D font_texture;
    uniform highp sampler2D depth_texture;
    
    in highp vec2 uv;
    flat in highp vec2 uv_min;
    flat in highp vec2 uv_max;
    layout(location = 2) out highp vec4 TCIN;
    flat in highp vec4 vid;
    layout(location = 1) out highp float g_depth;
    flat in int flag;
    in highp vec4 bg_color;
    in highp vec4 text_color;
    layout(location = 3) out highp float bordering;
    layout(location = 0) out highp vec4 frag_color;
    layout(location = 4) out highp vec4 bloom;
    
    void main()
    {
        highp vec4 _21 = texture(font_texture, uv);
        highp float font_alpha = _21.w;
        bool _33 = uv.x < uv_min.x;
        bool _43;
        if (!_33)
        {
            _43 = uv.x > uv_max.x;
        }
        else
        {
            _43 = _33;
        }
        bool _53;
        if (!_43)
        {
            _53 = uv.y < uv_min.y;
        }
        else
        {
            _53 = _43;
        }
        bool _62;
        if (!_53)
        {
            _62 = uv.y > uv_max.y;
        }
        else
        {
            _62 = _53;
        }
        if (_62)
        {
            font_alpha = 0.0;
        }
        TCIN = vid;
        g_depth = -gl_FragCoord.z;
        bool _121 = (flag & 8) != 0;
        bool _126 = (flag & 16) != 0;
        highp vec4 base_color;
        if ((flag & 128) != 0)
        {
            base_color = mix(bg_color, _21, vec4(font_alpha));
        }
        else
        {
            base_color = mix(bg_color, text_color, vec4(font_alpha));
        }
        highp float final_alpha = base_color.w;
        if ((gl_FragCoord.z > (texelFetch(depth_texture, ivec2(gl_FragCoord.xy), 0).x + 9.9999997473787516355514526367188e-06)) && (!((flag & 4) != 0)))
        {
            final_alpha *= txt_quad_params[4].w;
        }
        if (final_alpha < 0.00999999977648258209228515625)
        {
            discard;
        }
        if ((flag & 1) != 0)
        {
            bordering = 3.0;
        }
        else
        {
            if (_121)
            {
                bordering = 2.0;
            }
            else
            {
                if (_126)
                {
                    bordering = 1.0;
                }
                else
                {
                    bordering = 0.0;
                }
            }
        }
        bordering *= 0.0625;
        highp vec4 shine = vec4(0.0);
        if ((flag & 2) != 0)
        {
            shine = txt_quad_params[5];
        }
        if (_121)
        {
            shine += txt_quad_params[7];
        }
        if (_126)
        {
            shine += txt_quad_params[6];
        }
        highp vec4 _223 = shine;
        highp vec4 _225 = min(_223, vec4(1.0));
        shine = _225;
        frag_color = vec4(base_color.xyz, final_alpha);
        bloom = vec4((frag_color.xyz + vec3(0.20000000298023223876953125)) * (vec3(1.0) + (_225.xyz * _225.w)) + vec3(-0.89999997615814208984375), 1.0);
    }
    
*/
static const char txt_quad_fs_source_glsl300es[2644] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x66,0x6f,
    0x6e,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x64,0x65,0x70,0x74,0x68,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x75,0x76,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x69,0x6e,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x5f,0x6d,0x69,0x6e,0x3b,
    0x0a,0x66,0x6c,0x61,0x74,0x20,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x32,0x20,0x75,0x76,0x5f,0x6d,0x61,0x78,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x54,0x43,0x49,0x4e,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x69,0x6e,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x69,0x64,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x3b,0x0a,0x66,0x6c,0x61,0x74,
    0x20,0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,0x66,0x6c,0x61,0x67,0x3b,0x0a,0x69,0x6e,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x62,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x74,0x65,0x78,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x33,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,0x6e,0x67,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x34,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x62,0x6c,0x6f,0x6f,0x6d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x66,0x6f,0x6e,0x74,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x6e,0x74,0x5f,0x61,
    0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x33,0x33,0x20,0x3d,0x20,0x75,0x76,0x2e,
    0x78,0x20,0x3c,0x20,0x75,0x76,0x5f,0x6d,0x69,0x6e,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x34,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x21,0x5f,0x33,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x34,0x33,0x20,0x3d,0x20,0x75,0x76,
    0x2e,0x78,0x20,0x3e,0x20,0x75,0x76,0x5f,0x6d,0x61,0x78,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x34,0x33,0x20,
    0x3d,0x20,0x5f,0x33,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x35,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x21,0x5f,0x34,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x35,0x33,0x20,0x3d,0x20,0x75,0x76,0x2e,
    0x79,0x20,0x3c,0x20,0x75,0x76,0x5f,0x6d,0x69,0x6e,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x35,0x33,0x20,0x3d,
    0x20,0x5f,0x34,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x36,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x21,0x5f,0x35,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x32,0x20,0x3d,0x20,0x75,0x76,0x2e,0x79,
    0x20,0x3e,0x20,0x75,0x76,0x5f,0x6d,0x61,0x78,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x32,0x20,0x3d,0x20,
    0x5f,0x35,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x36,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x6e,0x74,0x5f,0x61,0x6c,0x70,0x68,0x61,
    0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x54,0x43,0x49,0x4e,0x20,0x3d,0x20,0x76,0x69,0x64,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x2d,0x67,0x6c,0x5f,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x32,0x31,0x20,0x3d,0x20,0x28,0x66,0x6c,
    0x61,0x67,0x20,0x26,0x20,0x38,0x29,0x20,0x21,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x32,0x36,0x20,0x3d,0x20,0x28,0x66,
    0x6c,0x61,0x67,0x20,0x26,0x20,0x31,0x36,0x29,0x20,0x21,0x3d,0x20,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x62,
    0x61,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x28,0x66,0x6c,0x61,0x67,0x20,0x26,0x20,0x31,0x32,0x38,0x29,0x20,
    0x21,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x62,0x61,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x6d,0x69,0x78,0x28,0x62,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x5f,
    0x32,0x31,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x6f,0x6e,0x74,0x5f,0x61,0x6c,
    0x70,0x68,0x61,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x62,0x61,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x6d,0x69,0x78,0x28,0x62,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x74,
    0x65,0x78,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,
    0x66,0x6f,0x6e,0x74,0x5f,0x61,0x6c,0x70,0x68,0x61,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x66,0x69,0x6e,0x61,0x6c,0x5f,0x61,0x6c,0x70,0x68,0x61,0x20,
    0x3d,0x20,0x62,0x61,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x20,0x3e,0x20,0x28,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x67,0x6c,0x5f,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x29,0x2c,0x20,0x30,0x29,0x2e,
    0x78,0x20,0x2b,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,
    0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,
    0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x36,0x29,0x29,0x20,0x26,0x26,0x20,0x28,
    0x21,0x28,0x28,0x66,0x6c,0x61,0x67,0x20,0x26,0x20,0x34,0x29,0x20,0x21,0x3d,0x20,
    0x30,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x69,0x6e,0x61,0x6c,0x5f,0x61,0x6c,0x70,0x68,0x61,0x20,0x2a,
    0x3d,0x20,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x34,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x66,0x69,0x6e,0x61,0x6c,0x5f,0x61,0x6c,0x70,0x68,
    0x61,0x20,0x3c,0x20,0x30,0x2e,0x30,0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,
    0x37,0x36,0x34,0x38,0x32,0x35,0x38,0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,
    0x36,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x66,0x6c,0x61,0x67,0x20,
    0x26,0x20,0x31,0x29,0x20,0x21,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,
    0x6e,0x67,0x20,0x3d,0x20,0x33,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x31,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,0x6e,0x67,
    0x20,0x3d,0x20,0x32,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x36,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,
    0x64,0x65,0x72,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,0x64,0x65,
    0x72,0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,
    0x72,0x64,0x65,0x72,0x69,0x6e,0x67,0x20,0x2a,0x3d,0x20,0x30,0x2e,0x30,0x36,0x32,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x73,0x68,0x69,0x6e,0x65,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x66,0x6c,
    0x61,0x67,0x20,0x26,0x20,0x32,0x29,0x20,0x21,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x6e,
    0x65,0x20,0x3d,0x20,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x35,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x6e,0x65,0x20,
    0x2b,0x3d,0x20,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x37,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x6e,0x65,0x20,0x2b,
    0x3d,0x20,0x74,0x78,0x74,0x5f,0x71,0x75,0x61,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x36,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x32,0x33,0x20,
    0x3d,0x20,0x73,0x68,0x69,0x6e,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x32,0x35,0x20,0x3d,0x20,0x6d,
    0x69,0x6e,0x28,0x5f,0x32,0x32,0x33,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,
    0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x6e,0x65,0x20,0x3d,
    0x20,0x5f,0x32,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x62,0x61,0x73,
    0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x69,0x6e,
    0x61,0x6c,0x5f,0x61,0x6c,0x70,0x68,0x61,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,
    0x6c,0x6f,0x6f,0x6d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,
    0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x29,
    0x29,0x20,0x2a,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2b,
    0x20,0x28,0x5f,0x32,0x32,0x35,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,0x32,0x32,
    0x35,0x2e,0x77,0x29,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,
    0x38,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x36,0x31,0x35,0x38,0x31,0x34,0x32,0x30,
    0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before world_ui.h"
#endif
static inline const sg_shader_desc* txt_quad_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "Iposition";
      desc.attrs[1].name = "Irot";
      desc.attrs[2].name = "Isize";
      desc.attrs[3].name = "Itext_color";
      desc.attrs[4].name = "Ibg_color";
      desc.attrs[5].name = "Iuv_min";
      desc.attrs[6].name = "Iuv_max";
      desc.attrs[7].name = "Iglyph_xy";
      desc.attrs[8].name = "bbox";
      desc.attrs[9].name = "Iflag";
      desc.attrs[10].name = "offset";
      desc.vs.source = txt_quad_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "txt_quad_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = txt_quad_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 128;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "txt_quad_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.images[0].name = "font_texture";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "depth_texture";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "txt_quad_shader";
    }
    return &desc;
  }
  return 0;
}
