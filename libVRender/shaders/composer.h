#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input composer.glsl --output composer.h --slang glsl300es

    Overview:

        Shader program 'bloomDilateX':
            Get shader desc: bloomDilateX_shader_desc(sg_query_backend());
            Vertex shader: edl_composer_vs
                Attribute slots:
                    ATTR_edl_composer_vs_position = 0
            Fragment shader: bloom_dilateX
                Image 'shine':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_shine = 0

        Shader program 'bloomDilateY':
            Get shader desc: bloomDilateY_shader_desc(sg_query_backend());
            Vertex shader: edl_composer_vs
                Attribute slots:
                    ATTR_edl_composer_vs_position = 0
            Fragment shader: bloom_dilateY
                Image 'shine':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_shine = 0

        Shader program 'bloomblurX':
            Get shader desc: bloomblurX_shader_desc(sg_query_backend());
            Vertex shader: edl_composer_vs
                Attribute slots:
                    ATTR_edl_composer_vs_position = 0
            Fragment shader: bloom_blurX
                Image 'shine':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_shine = 0

        Shader program 'bloomblurYFin':
            Get shader desc: bloomblurYFin_shader_desc(sg_query_backend());
            Vertex shader: edl_composer_vs
                Attribute slots:
                    ATTR_edl_composer_vs_position = 0
            Fragment shader: bloom_blurY
                Image 'shine':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_shine = 0

        Shader program 'border_composer':
            Get shader desc: border_composer_shader_desc(sg_query_backend());
            Vertex shader: edl_composer_vs
                Attribute slots:
                    ATTR_edl_composer_vs_position = 0
            Fragment shader: ui_composer_fs
                Uniform block 'ui_composing':
                    C struct: ui_composing_t
                    Bind slot: SLOT_ui_composing = 0
                Image 'bordering':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_bordering = 0
                Image 'ui_selection':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_ui_selection = 1

        Shader program 'edl_composer':
            Get shader desc: edl_composer_shader_desc(sg_query_backend());
            Vertex shader: edl_composer_vs
                Attribute slots:
                    ATTR_edl_composer_vs_position = 0
            Fragment shader: edl_composer_fs
                Uniform block 'window':
                    C struct: window_t
                    Bind slot: SLOT_window = 0
                Image 'color_hi_res':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_color_hi_res = 0
                Image 'depth_hi_res':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_depth_hi_res = 1
                Image 'depth_lo_res':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_depth_lo_res = 2
                Image 'uDepth':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_uDepth = 3
                Image 'ssao':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_ssao = 4


    Shader descriptor structs:

        sg_shader bloomDilateX = sg_make_shader(bloomDilateX_shader_desc(sg_query_backend()));
        sg_shader bloomDilateY = sg_make_shader(bloomDilateY_shader_desc(sg_query_backend()));
        sg_shader bloomblurX = sg_make_shader(bloomblurX_shader_desc(sg_query_backend()));
        sg_shader bloomblurYFin = sg_make_shader(bloomblurYFin_shader_desc(sg_query_backend()));
        sg_shader border_composer = sg_make_shader(border_composer_shader_desc(sg_query_backend()));
        sg_shader edl_composer = sg_make_shader(edl_composer_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'edl_composer_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_edl_composer_vs_position] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_shine = 0;
        SLOT_bordering = 0;
        SLOT_ui_selection = 1;
        SLOT_color_hi_res = 0;
        SLOT_depth_hi_res = 1;
        SLOT_depth_lo_res = 2;
        SLOT_uDepth = 3;
        SLOT_ssao = 4;

    Bind slot and C-struct for uniform block 'ui_composing':

        ui_composing_t ui_composing = {
            .draw_sel = ...;
            .border_colors = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_ui_composing, &SG_RANGE(ui_composing));

    Bind slot and C-struct for uniform block 'window':

        window_t window = {
            .w = ...;
            .h = ...;
            .pnear = ...;
            .pfar = ...;
            .ipmat = ...;
            .ivmat = ...;
            .pmat = ...;
            .pv = ...;
            .campos = ...;
            .lookdir = ...;
            .debugU = ...;
            .facFac = ...;
            .fac2Fac = ...;
            .fac2WFac = ...;
            .colorFac = ...;
            .reverse1 = ...;
            .reverse2 = ...;
            .edrefl = ...;
            .edlthres = ...;
            .useFlag = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_window, &SG_RANGE(window));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_edl_composer_vs_position (0)
#define SLOT_shine (0)
#define SLOT_bordering (0)
#define SLOT_ui_selection (1)
#define SLOT_color_hi_res (0)
#define SLOT_depth_hi_res (1)
#define SLOT_depth_lo_res (2)
#define SLOT_uDepth (3)
#define SLOT_ssao (4)
#define SLOT_ui_composing (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct ui_composing_t {
    float draw_sel;
    uint8_t _pad_4[12];
    float border_colors[3][4];
} ui_composing_t;
#pragma pack(pop)
#define SLOT_window (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct window_t {
    float w;
    float h;
    float pnear;
    float pfar;
    glm::mat4 ipmat;
    glm::mat4 ivmat;
    glm::mat4 pmat;
    glm::mat4 pv;
    glm::vec3 campos;
    uint8_t _pad_284[4];
    glm::vec3 lookdir;
    float debugU;
    float facFac;
    float fac2Fac;
    float fac2WFac;
    float colorFac;
    float reverse1;
    float reverse2;
    float edrefl;
    float edlthres;
    float useFlag;
    uint8_t _pad_340[12];
} window_t;
#pragma pack(pop)
/*
    #version 300 es
    
    layout(location = 0) in vec2 position;
    
    void main()
    {
        gl_Position = vec4(position, 0.5, 1.0);
    }
    
*/
static const char edl_composer_vs_source_glsl300es[119] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp sampler2D shine;
    
    layout(location = 0) out highp vec4 frag_color;
    
    void main()
    {
        highp vec4 bloom = vec4(0.0);
        for (int i = -9; i <= 9; i++)
        {
            bloom = max(bloom, texelFetch(shine, ivec2(ivec4(gl_FragCoord).xy) + ivec2(i, 0), 0) - vec4(0.125 * float(abs(i))));
        }
        frag_color = bloom;
    }
    
*/
static const char bloom_dilateX_source_glsl300es[391] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x73,0x68,0x69,0x6e,0x65,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x62,0x6c,0x6f,
    0x6f,0x6d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,
    0x20,0x2d,0x39,0x3b,0x20,0x69,0x20,0x3c,0x3d,0x20,0x39,0x3b,0x20,0x69,0x2b,0x2b,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x62,0x6c,0x6f,0x6f,0x6d,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x62,0x6c,0x6f,0x6f,
    0x6d,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x73,0x68,
    0x69,0x6e,0x65,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x69,0x76,0x65,0x63,0x34,
    0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,
    0x79,0x29,0x20,0x2b,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x69,0x2c,0x20,0x30,0x29,
    0x2c,0x20,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x31,0x32,
    0x35,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x61,0x62,0x73,0x28,0x69,0x29,
    0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x62,0x6c,0x6f,0x6f,
    0x6d,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp sampler2D shine;
    
    layout(location = 0) out highp vec4 frag_color;
    
    void main()
    {
        highp vec4 bloom = vec4(0.0);
        for (int i = -9; i <= 9; i++)
        {
            bloom = max(bloom, texelFetch(shine, ivec2(ivec4(gl_FragCoord).xy) + ivec2(0, i), 0) - vec4(0.125 * float(abs(i))));
        }
        frag_color = bloom;
        frag_color = vec4(bloom.xyz, 0.5);
    }
    
*/
static const char bloom_dilateY_source_glsl300es[430] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x73,0x68,0x69,0x6e,0x65,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x62,0x6c,0x6f,
    0x6f,0x6d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,
    0x20,0x2d,0x39,0x3b,0x20,0x69,0x20,0x3c,0x3d,0x20,0x39,0x3b,0x20,0x69,0x2b,0x2b,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x62,0x6c,0x6f,0x6f,0x6d,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x62,0x6c,0x6f,0x6f,
    0x6d,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x73,0x68,
    0x69,0x6e,0x65,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x69,0x76,0x65,0x63,0x34,
    0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,
    0x79,0x29,0x20,0x2b,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x30,0x2c,0x20,0x69,0x29,
    0x2c,0x20,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x31,0x32,
    0x35,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x61,0x62,0x73,0x28,0x69,0x29,
    0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x62,0x6c,0x6f,0x6f,
    0x6d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x62,0x6c,0x6f,0x6f,0x6d,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp sampler2D shine;
    
    layout(location = 0) out highp vec4 frag_color;
    
    void main()
    {
        highp vec4 bloom = vec4(0.0);
        for (int i = -11; i <= 11; i++)
        {
            bloom += texelFetch(shine, ivec2(ivec4(gl_FragCoord).xy) + ivec2(i, 0), 0);
        }
        frag_color = bloom * vec4(0.0434782616794109344482421875);
    }
    
*/
static const char bloom_blurX_source_glsl300es[391] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x73,0x68,0x69,0x6e,0x65,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x62,0x6c,0x6f,
    0x6f,0x6d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,
    0x20,0x2d,0x31,0x31,0x3b,0x20,0x69,0x20,0x3c,0x3d,0x20,0x31,0x31,0x3b,0x20,0x69,
    0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x62,0x6c,0x6f,0x6f,0x6d,0x20,0x2b,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x73,0x68,0x69,0x6e,0x65,0x2c,0x20,0x69,0x76,0x65,
    0x63,0x32,0x28,0x69,0x76,0x65,0x63,0x34,0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,0x79,0x29,0x20,0x2b,0x20,0x69,0x76,0x65,
    0x63,0x32,0x28,0x69,0x2c,0x20,0x30,0x29,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x62,0x6c,0x6f,0x6f,0x6d,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x30,0x2e,0x30,0x34,0x33,0x34,0x37,0x38,0x32,0x36,0x31,0x36,0x37,0x39,
    0x34,0x31,0x30,0x39,0x33,0x34,0x34,0x34,0x38,0x32,0x34,0x32,0x31,0x38,0x37,0x35,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp sampler2D shine;
    
    layout(location = 0) out highp vec4 frag_color;
    
    void main()
    {
        highp vec4 bloom = vec4(0.0);
        for (int i = -11; i <= 11; i++)
        {
            bloom += texelFetch(shine, ivec2(ivec4(gl_FragCoord).xy) + ivec2(0, i), 0);
        }
        frag_color = bloom * vec4(0.0434782616794109344482421875);
    }
    
*/
static const char bloom_blurY_source_glsl300es[391] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x73,0x68,0x69,0x6e,0x65,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x62,0x6c,0x6f,
    0x6f,0x6d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,
    0x20,0x2d,0x31,0x31,0x3b,0x20,0x69,0x20,0x3c,0x3d,0x20,0x31,0x31,0x3b,0x20,0x69,
    0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x62,0x6c,0x6f,0x6f,0x6d,0x20,0x2b,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x73,0x68,0x69,0x6e,0x65,0x2c,0x20,0x69,0x76,0x65,
    0x63,0x32,0x28,0x69,0x76,0x65,0x63,0x34,0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,0x79,0x29,0x20,0x2b,0x20,0x69,0x76,0x65,
    0x63,0x32,0x28,0x30,0x2c,0x20,0x69,0x29,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x62,0x6c,0x6f,0x6f,0x6d,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x30,0x2e,0x30,0x34,0x33,0x34,0x37,0x38,0x32,0x36,0x31,0x36,0x37,0x39,
    0x34,0x31,0x30,0x39,0x33,0x34,0x34,0x34,0x38,0x32,0x34,0x32,0x31,0x38,0x37,0x35,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    const vec2 _26[8] = vec2[](vec2(-1.0), vec2(0.0, -1.0), vec2(1.0, -1.0), vec2(-1.0, 0.0), vec2(1.0, 0.0), vec2(-1.0, 1.0), vec2(0.0, 1.0), vec2(1.0));
    
    uniform highp vec4 ui_composing[4];
    uniform highp sampler2D bordering;
    uniform highp sampler2D ui_selection;
    
    layout(location = 0) out highp vec4 frag_color;
    
    void main()
    {
        highp float border = 0.0;
        highp float center = texelFetch(bordering, ivec2(gl_FragCoord.xy), 0).x;
        highp vec3 border_color = vec3(0.0);
        for (int i = 0; i < 8; i++)
        {
            highp vec4 _76 = texelFetch(bordering, ivec2(gl_FragCoord.xy + _26[i]), 0);
            highp float _77 = _76.x;
            if (_77 > center)
            {
                border = 1.0;
                center = _77;
                border_color = ui_composing[(int(_77 * 16.0) - 1) * 1 + 1].xyz;
            }
        }
        frag_color = vec4(border_color, 0.660000026226043701171875) * border;
        highp vec2 _118 = gl_FragCoord.xy / vec2(textureSize(bordering, 0));
        _118.y = 1.0 - _118.y;
        if (ui_composing[0].x > 0.0)
        {
            frag_color += vec4(1.0, 0.300000011920928955078125, 0.0, 0.5 * texture(ui_selection, _118).x);
        }
    }
    
*/
static const char ui_composer_fs_source_glsl300es[1197] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x36,0x5b,0x38,0x5d,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,0x28,0x2d,
    0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x2c,0x20,
    0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x2c,
    0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,0x31,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,0x31,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,
    0x2e,0x30,0x29,0x29,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x75,0x69,0x5f,0x63,0x6f,0x6d,
    0x70,0x6f,0x73,0x69,0x6e,0x67,0x5b,0x34,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,0x6e,0x67,0x3b,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x69,0x5f,0x73,0x65,0x6c,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x63,0x65,0x6e,0x74,0x65,0x72,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,0x6e,0x67,0x2c,
    0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6f,0x72,0x64,0x2e,0x78,0x79,0x29,0x2c,0x20,0x30,0x29,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x62,0x6f,
    0x72,0x64,0x65,0x72,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,
    0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,
    0x38,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x37,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,
    0x68,0x28,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,0x6e,0x67,0x2c,0x20,0x69,0x76,0x65,
    0x63,0x32,0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x79,0x20,0x2b,0x20,0x5f,0x32,0x36,0x5b,0x69,0x5d,0x29,0x2c,0x20,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x5f,0x37,0x36,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x37,0x37,0x20,0x3e,0x20,0x63,0x65,0x6e,0x74,0x65,0x72,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x65,0x6e,
    0x74,0x65,0x72,0x20,0x3d,0x20,0x5f,0x37,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x75,0x69,0x5f,0x63,0x6f,0x6d,0x70,0x6f,0x73,0x69,
    0x6e,0x67,0x5b,0x28,0x69,0x6e,0x74,0x28,0x5f,0x37,0x37,0x20,0x2a,0x20,0x31,0x36,
    0x2e,0x30,0x29,0x20,0x2d,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,
    0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x62,0x6f,0x72,
    0x64,0x65,0x72,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x30,0x2e,0x36,0x36,0x30,
    0x30,0x30,0x30,0x30,0x32,0x36,0x32,0x32,0x36,0x30,0x34,0x33,0x37,0x30,0x31,0x31,
    0x37,0x31,0x38,0x37,0x35,0x29,0x20,0x2a,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x31,0x31,0x38,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6f,0x72,0x64,0x2e,0x78,0x79,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,0x62,0x6f,0x72,0x64,0x65,0x72,
    0x69,0x6e,0x67,0x2c,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x31,
    0x31,0x38,0x2e,0x79,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x31,0x31,
    0x38,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x75,0x69,0x5f,
    0x63,0x6f,0x6d,0x70,0x6f,0x73,0x69,0x6e,0x67,0x5b,0x30,0x5d,0x2e,0x78,0x20,0x3e,
    0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2b,
    0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x33,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x35,
    0x20,0x2a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x75,0x69,0x5f,0x73,0x65,
    0x6c,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x5f,0x31,0x31,0x38,0x29,0x2e,0x78,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    const vec2 _296[8] = vec2[](vec2(-1.0), vec2(0.0, -1.0), vec2(1.0, -1.0), vec2(-1.0, 0.0), vec2(1.0, 0.0), vec2(-1.0, 1.0), vec2(0.0, 1.0), vec2(1.0));
    
    uniform highp vec4 window[22];
    uniform highp sampler2D color_hi_res;
    uniform highp sampler2D depth_hi_res;
    uniform highp sampler2D depth_lo_res;
    uniform highp sampler2D uDepth;
    uniform highp sampler2D ssao;
    
    layout(location = 0) out highp vec4 frag_color;
    highp mat2 m;
    
    highp float getld(highp float d)
    {
        return ((2.0 * window[0].z) * window[0].w) / ((-(d * 2.0 + (-1.0))) * (window[0].w - window[0].z) + (window[0].w + window[0].z));
    }
    
    highp float hash(highp float n)
    {
        return fract(sin(n) * 93942.234375);
    }
    
    highp float _noise(highp vec2 p)
    {
        highp vec2 _90 = floor(p);
        highp vec2 _93 = fract(p);
        highp vec2 _102 = (_93 * _93) * (vec2(3.0) - (_93 * 2.0));
        highp float _113 = _90.y * 57.0 + _90.x;
        highp float param = _113;
        highp float param_1 = _113 + 1.0;
        highp float param_2 = _113 + 57.0;
        highp float param_3 = _113 + 58.0;
        highp float _137 = _102.x;
        return mix(mix(hash(param), hash(param_1), _137), mix(hash(param_2), hash(param_3), _137), _102.y);
    }
    
    highp float fbm(inout highp vec2 p)
    {
        highp float f = 0.0;
        highp vec2 param = p;
        f = 0.5 * _noise(param) + f;
        p *= (m * 2.019999980926513671875);
        highp vec2 param_1 = p;
        f = 0.25 * _noise(param_1) + f;
        p *= (m * 2.0099999904632568359375);
        highp vec2 param_2 = p;
        f = 0.125 * _noise(param_2) + f;
        p *= (m * 2.0299999713897705078125);
        highp vec2 param_3 = p;
        highp float _192 = f;
        highp float _196 = (0.0625 * _noise(param_3) + _192) * 1.06666672229766845703125;
        f = _196;
        return _196;
    }
    
    highp float random1(highp vec2 uv)
    {
        return fract(sin(dot(uv, vec2(12.9876003265380859375, 78.51200103759765625))) * 12345.6787109375);
    }
    
    highp float random2(highp vec2 uv)
    {
        return fract(cos(dot(uv, vec2(432.12298583984375, 123.67800140380859375))) * 54321.125);
    }
    
    void main()
    {
        m = mat2(vec2(0.60000002384185791015625, 0.800000011920928955078125), vec2(-0.800000011920928955078125, 0.60000002384185791015625));
        highp vec2 _233 = vec2(window[0].x, window[0].y);
        highp vec2 _234 = gl_FragCoord.xy / _233;
        highp vec4 _243 = texture(color_hi_res, _234);
        frag_color = _243;
        int _252 = int(window[21].x);
        highp vec2 _276 = vec2(1.0) / vec2(textureSize(depth_hi_res, 0));
        highp vec2 _283 = vec2(1.0) / vec2(textureSize(depth_lo_res, 0));
        highp vec4 _300 = texture(depth_lo_res, _234);
        highp float _301 = _300.x;
        highp float dmax = _301;
        highp float dmin = _301;
        highp float param = _301;
        highp float _309 = getld(param);
        for (int i = 0; i < 8; i++)
        {
            highp vec4 _330 = texture(depth_lo_res, _296[i] * _283 + _234);
            highp float _331 = _330.x;
            bool _333 = _331 < 1.0;
            bool _344;
            if (_333)
            {
                highp float param_1 = _331;
                _344 = abs(getld(param_1) - _309) < 0.100000001490116119384765625;
            }
            else
            {
                _344 = _333;
            }
            if (_344)
            {
                dmax = max(_331, dmax);
                dmin = min(_331, dmin);
            }
        }
        highp float param_2 = dmax;
        dmax = getld(param_2);
        highp float param_3 = dmin;
        highp float _360 = getld(param_3);
        dmin = _360;
        highp float fac = max(0.0, 0.4000000059604644775390625 / (pow(abs(dmax - _360), 0.800000011920928955078125) + 0.4000000059604644775390625));
        highp float dhmin = 1.0;
        for (int i_1 = 0; i_1 < 8; i_1++)
        {
            highp vec4 _394 = texture(depth_hi_res, _296[i_1] * _276 + _234);
            highp float _395 = _394.x;
            if ((_395 > 0.0) && (_395 < 1.0))
            {
                dhmin = min(_395, dhmin);
            }
        }
        highp vec4 _411 = texture(depth_hi_res, _234);
        highp float _412 = _411.x;
        highp float param_4 = _412;
        highp float _416 = getld(param_4);
        highp float param_5 = dhmin;
        highp float _419 = getld(param_5);
        dhmin = _419;
        highp float facb = 1.0;
        if (_419 < _416)
        {
            facb = 1.0 - min((_416 - dhmin) * 2.2000000476837158203125, 1.0);
        }
        highp float _436 = min(fac, facb);
        highp float _442 = _436 - window[20].x;
        fac = window[20].z * exp((-(_442 * _442)) / (window[20].y + 9.9999997473787516355514526367188e-06)) + _436;
        highp vec4 _464 = texture(uDepth, _234);
        highp float _465 = _464.x;
        if ((_465 < _412) || (!((_252 & 1) != int(0u))))
        {
            fac = 1.0;
        }
        highp float _483 = max(_243.x, max(_243.y, _243.z));
        highp vec3 _494 = _243.xyz;
        highp float _517 = _243.w;
        frag_color = vec4((((_494 * fac) * window[19].x) + vec3(((pow(fac, window[19].y) - 1.0) * _483) * window[19].z)) + (_494 * window[19].w), _517);
        highp float darken = (texelFetch(ssao, ivec2(gl_FragCoord.xy), 0).x * _483) * 0.89999997615814208984375;
        if (_465 == _412)
        {
            darken *= 0.5;
        }
        if (!((_252 & 2) != int(0u)))
        {
            darken = 0.0;
        }
        frag_color = vec4(frag_color.xyz - vec3(darken), _517);
        if (!((_252 & 4) != int(0u)))
        {
            return;
        }
        highp vec3 _598 = normalize((mat4(window[5], window[6], window[7], window[8]) * vec4((mat4(window[1], window[2], window[3], window[4]) * vec4(((gl_FragCoord.xy * 2.0) / _233) - vec2(1.0), -1.0, 1.0)).xyz, 0.0)).xyz);
        highp float _600 = _598.z;
        highp float t;
        bool doesIntersect;
        if (_600 != 0.0)
        {
            highp float _610 = (-window[17].z) / _600;
            t = _610;
            doesIntersect = _610 >= 0.0;
        }
        else
        {
            doesIntersect = false;
        }
        highp float ssrweight = 0.0;
        highp vec4 ssrcolor = vec4(0.0);
        highp float below_ground_darken = 1.0;
        highp float shadowfac = 0.0;
        bool _627;
        if (doesIntersect)
        {
            _627 = window[17].z > 0.0;
        }
        else
        {
            _627 = doesIntersect;
        }
        if (_627)
        {
            highp vec3 _637 = window[17].xyz + (_598 * t);
            highp vec3 _642 = _637 - window[17].xyz;
            highp vec3 _643 = normalize(_642);
            highp mat4 _647 = mat4(window[13], window[14], window[15], window[16]);
            highp vec4 _653 = _647 * vec4(_637, 1.0);
            if (((_653 / vec4(_653.w)).z * 0.5 + 0.5) < _465)
            {
                highp float _671 = _643.z;
                below_ground_darken = (-exp(((-60.0) * _671) * _671)) * 0.20000000298023223876953125 + 0.800000011920928955078125;
                ssrweight = exp(((-120.0) * _671) * _671) * 0.4000000059604644775390625 + 0.60000002384185791015625;
                highp vec3 _698 = vec3(_643.xy, -_671);
                int state = 0;
                highp vec2 _718 = (_234 * 5.0) / vec2(length(_642));
                highp vec2 param_6 = _718;
                highp float _727 = fbm(param_6);
                highp vec2 param_7 = _718 + vec2(8.1000003814697265625);
                highp float _737 = fbm(param_7);
                highp vec2 _749 = _718 + (vec2(_727, _737) * 7.0);
                highp vec2 param_8 = _749 + vec2(3.099999904632568359375);
                highp float _754 = fbm(param_8);
                highp vec2 param_9 = _749 + vec2(91.09999847412109375);
                highp float _767 = fbm(param_9);
                highp vec2 param_10 = vec2(_754, _767) * 9.0;
                highp float _779 = fbm(param_10);
                for (highp float rayint = 1.0, s = 0.0500000007450580596923828125; s < 8.0; s *= 1.39999997615814208984375, rayint *= 0.9900000095367431640625)
                {
                    highp vec3 _795 = _637 + (_698 * s);
                    highp vec4 _804 = _647 * vec4(_795, 1.0);
                    highp vec4 _809 = _804 / vec4(_804.w);
                    highp vec2 _827 = ((_809.xy * 0.5) + vec2(0.5)) + vec2((_779 - 0.5) * 0.02999999932944774627685546875);
                    highp float _829 = _827.x;
                    bool _830 = _829 >= 1.0;
                    bool _837;
                    if (!_830)
                    {
                        _837 = _827.y >= 1.0;
                    }
                    else
                    {
                        _837 = _830;
                    }
                    bool _844;
                    if (!_837)
                    {
                        _844 = _829 <= 0.0;
                    }
                    else
                    {
                        _844 = _837;
                    }
                    bool _851;
                    if (!_844)
                    {
                        _851 = _827.y <= 0.0;
                    }
                    else
                    {
                        _851 = _844;
                    }
                    if (_851)
                    {
                        break;
                    }
                    if (texture(uDepth, _827).x > (_809.z * 0.5 + 0.5))
                    {
                        ssrcolor = (texture(color_hi_res, _827) * rayint) * (3.0 / (3.0 + _795.z));
                        state = 1;
                    }
                    else
                    {
                        if (state == 1)
                        {
                            state = 2;
                        }
                        break;
                    }
                }
                if (state != 2)
                {
                    ssrcolor = vec4(0.0);
                }
                highp vec2 param_11 = gl_FragCoord.xy;
                ssrweight = (ssrweight + (random1(param_11) * 0.4000000059604644775390625 + (-0.20000000298023223876953125))) * 0.660000026226043701171875;
                for (highp float s_1 = 0.00999999977648258209228515625; s_1 < 0.5; s_1 *= 1.2999999523162841796875)
                {
                    highp vec4 _950 = _647 * vec4(_637 + (vec3(0.0, 0.0, 1.0) * s_1), 1.0);
                    highp vec4 _955 = _950 / vec4(_950.w);
                    highp vec2 _972 = ((_955.xy * 0.5) + vec2(0.5)) + vec2((_779 - 0.5) * 0.00999999977648258209228515625);
                    highp vec2 param_12 = gl_FragCoord.xy;
                    highp vec2 param_13 = gl_FragCoord.xy;
                    highp vec4 _996 = texture(uDepth, vec2(_972.x + ((random1(param_12) * 5.0) / window[0].x), _972.y));
                    highp float _997 = _996.x;
                    if (_997 < 1.0)
                    {
                        highp float param_14 = _955.z * 0.5 + 0.5;
                        highp float param_15 = _997;
                        highp float _1011 = length(abs(getld(param_14) - getld(param_15)));
                        shadowfac = (((1.0 / (s_1 - 2.0)) + 2.0) * exp(((-(30.0 * random2(param_13) + 30.0)) * _1011) * _1011)) * 0.0500000007450580596923828125 + shadowfac;
                    }
                }
                shadowfac = clamp(shadowfac, 0.0, 0.300000011920928955078125);
            }
        }
        frag_color = ((((frag_color * below_ground_darken) * (1.0 - ssrweight)) + (ssrcolor * ssrweight)) * (1.0 - shadowfac)) + (vec4(0.0, 0.0, 0.0, 1.0) * shadowfac);
    }
    
*/
static const char edl_composer_fs_source_glsl300es[10775] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x39,0x36,0x5b,0x38,
    0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,0x28,
    0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x2c,
    0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,
    0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,0x31,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,
    0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x77,0x69,0x6e,0x64,0x6f,
    0x77,0x5b,0x32,0x32,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x20,0x64,0x65,0x70,0x74,0x68,0x5f,0x68,0x69,0x5f,0x72,0x65,
    0x73,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x64,0x65,0x70,0x74,0x68,
    0x5f,0x6c,0x6f,0x5f,0x72,0x65,0x73,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x20,0x75,0x44,0x65,0x70,0x74,0x68,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x20,0x73,0x73,0x61,0x6f,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,
    0x74,0x32,0x20,0x6d,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x32,0x2e,0x30,0x20,0x2a,0x20,0x77,0x69,0x6e,
    0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x77,0x69,0x6e,0x64,
    0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x77,0x29,0x20,0x2f,0x20,0x28,0x28,0x2d,0x28,0x64,
    0x20,0x2a,0x20,0x32,0x2e,0x30,0x20,0x2b,0x20,0x28,0x2d,0x31,0x2e,0x30,0x29,0x29,
    0x29,0x20,0x2a,0x20,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x77,
    0x20,0x2d,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x20,
    0x2b,0x20,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x77,0x20,0x2b,
    0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x68,
    0x61,0x73,0x68,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x6e,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x66,0x72,0x61,0x63,0x74,0x28,0x73,0x69,0x6e,0x28,0x6e,0x29,0x20,0x2a,0x20,0x39,
    0x33,0x39,0x34,0x32,0x2e,0x32,0x33,0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x6e,0x6f,
    0x69,0x73,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x5f,0x39,0x30,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x70,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x66,0x72,0x61,0x63,0x74,0x28,0x70,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,
    0x20,0x5f,0x31,0x30,0x32,0x20,0x3d,0x20,0x28,0x5f,0x39,0x33,0x20,0x2a,0x20,0x5f,
    0x39,0x33,0x29,0x20,0x2a,0x20,0x28,0x76,0x65,0x63,0x32,0x28,0x33,0x2e,0x30,0x29,
    0x20,0x2d,0x20,0x28,0x5f,0x39,0x33,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x31,0x33,0x20,0x3d,0x20,0x5f,0x39,0x30,0x2e,0x79,0x20,0x2a,0x20,
    0x35,0x37,0x2e,0x30,0x20,0x2b,0x20,0x5f,0x39,0x30,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x31,0x31,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x31,0x31,0x33,0x20,0x2b,0x20,0x31,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x31,0x31,0x33,
    0x20,0x2b,0x20,0x35,0x37,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,
    0x20,0x3d,0x20,0x5f,0x31,0x31,0x33,0x20,0x2b,0x20,0x35,0x38,0x2e,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x31,0x33,0x37,0x20,0x3d,0x20,0x5f,0x31,0x30,0x32,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x69,0x78,0x28,0x6d,0x69,
    0x78,0x28,0x68,0x61,0x73,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x2c,0x20,0x68,
    0x61,0x73,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x2c,0x20,0x5f,0x31,
    0x33,0x37,0x29,0x2c,0x20,0x6d,0x69,0x78,0x28,0x68,0x61,0x73,0x68,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x29,0x2c,0x20,0x68,0x61,0x73,0x68,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x33,0x29,0x2c,0x20,0x5f,0x31,0x33,0x37,0x29,0x2c,0x20,0x5f,0x31,
    0x30,0x32,0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x62,0x6d,0x28,0x69,0x6e,0x6f,0x75,0x74,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x66,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,
    0x70,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x20,0x3d,0x20,0x30,0x2e,0x35,0x20,0x2a,
    0x20,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,0x2b,
    0x20,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x20,0x2a,0x3d,0x20,0x28,0x6d,0x20,
    0x2a,0x20,0x32,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,0x39,0x38,0x30,0x39,0x32,0x36,
    0x35,0x31,0x33,0x36,0x37,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x20,0x3d,0x20,0x70,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x20,0x3d,0x20,
    0x30,0x2e,0x32,0x35,0x20,0x2a,0x20,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,0x2b,0x20,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x70,0x20,0x2a,0x3d,0x20,0x28,0x6d,0x20,0x2a,0x20,0x32,0x2e,0x30,0x30,0x39,0x39,
    0x39,0x39,0x39,0x39,0x30,0x34,0x36,0x33,0x32,0x35,0x36,0x38,0x33,0x35,0x39,0x33,
    0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x70,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x20,0x3d,0x20,0x30,0x2e,0x31,0x32,0x35,0x20,0x2a,
    0x20,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,
    0x20,0x2b,0x20,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x20,0x2a,0x3d,0x20,0x28,
    0x6d,0x20,0x2a,0x20,0x32,0x2e,0x30,0x32,0x39,0x39,0x39,0x39,0x39,0x37,0x31,0x33,
    0x38,0x39,0x37,0x37,0x30,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x70,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x39,0x32,0x20,
    0x3d,0x20,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x39,0x36,0x20,0x3d,0x20,0x28,0x30,0x2e,0x30,
    0x36,0x32,0x35,0x20,0x2a,0x20,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x33,0x29,0x20,0x2b,0x20,0x5f,0x31,0x39,0x32,0x29,0x20,0x2a,0x20,
    0x31,0x2e,0x30,0x36,0x36,0x36,0x36,0x36,0x37,0x32,0x32,0x32,0x39,0x37,0x36,0x36,
    0x38,0x34,0x35,0x37,0x30,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x20,0x3d,0x20,0x5f,0x31,0x39,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x5f,0x31,0x39,0x36,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x31,
    0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x72,0x61,
    0x63,0x74,0x28,0x73,0x69,0x6e,0x28,0x64,0x6f,0x74,0x28,0x75,0x76,0x2c,0x20,0x76,
    0x65,0x63,0x32,0x28,0x31,0x32,0x2e,0x39,0x38,0x37,0x36,0x30,0x30,0x33,0x32,0x36,
    0x35,0x33,0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,0x2c,0x20,0x37,0x38,0x2e,0x35,
    0x31,0x32,0x30,0x30,0x31,0x30,0x33,0x37,0x35,0x39,0x37,0x36,0x35,0x36,0x32,0x35,
    0x29,0x29,0x29,0x20,0x2a,0x20,0x31,0x32,0x33,0x34,0x35,0x2e,0x36,0x37,0x38,0x37,
    0x31,0x30,0x39,0x33,0x37,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x32,0x28,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x72,0x61,0x63,
    0x74,0x28,0x63,0x6f,0x73,0x28,0x64,0x6f,0x74,0x28,0x75,0x76,0x2c,0x20,0x76,0x65,
    0x63,0x32,0x28,0x34,0x33,0x32,0x2e,0x31,0x32,0x32,0x39,0x38,0x35,0x38,0x33,0x39,
    0x38,0x34,0x33,0x37,0x35,0x2c,0x20,0x31,0x32,0x33,0x2e,0x36,0x37,0x38,0x30,0x30,
    0x31,0x34,0x30,0x33,0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,0x29,0x29,0x29,0x20,
    0x2a,0x20,0x35,0x34,0x33,0x32,0x31,0x2e,0x31,0x32,0x35,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x20,0x3d,0x20,0x6d,0x61,0x74,0x32,0x28,0x76,0x65,0x63,0x32,
    0x28,0x30,0x2e,0x36,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,
    0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x38,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,0x30,
    0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,
    0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x36,0x30,0x30,
    0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,
    0x35,0x36,0x32,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x33,0x33,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x32,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x78,0x2c,0x20,
    0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x33,
    0x34,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,
    0x2e,0x78,0x79,0x20,0x2f,0x20,0x5f,0x32,0x33,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,0x33,0x20,
    0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x68,0x69,0x5f,0x72,0x65,0x73,0x2c,0x20,0x5f,0x32,0x33,0x34,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x5f,0x32,0x34,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,
    0x35,0x32,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,
    0x32,0x31,0x5d,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x37,0x36,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,0x64,0x65,0x70,0x74,0x68,
    0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,0x2c,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x38,
    0x33,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x20,0x2f,0x20,
    0x76,0x65,0x63,0x32,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,
    0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x6c,0x6f,0x5f,0x72,0x65,0x73,0x2c,0x20,0x30,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x33,0x30,0x30,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x6c,0x6f,0x5f,0x72,0x65,0x73,0x2c,0x20,
    0x5f,0x32,0x33,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x30,0x31,0x20,0x3d,0x20,0x5f,0x33,
    0x30,0x30,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x6d,0x61,0x78,0x20,0x3d,0x20,0x5f,0x33,0x30,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x64,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x5f,0x33,0x30,0x31,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x33,0x30,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,
    0x30,0x39,0x20,0x3d,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x38,0x3b,0x20,0x69,0x2b,
    0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x33,0x30,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x64,0x65,0x70,0x74,0x68,
    0x5f,0x6c,0x6f,0x5f,0x72,0x65,0x73,0x2c,0x20,0x5f,0x32,0x39,0x36,0x5b,0x69,0x5d,
    0x20,0x2a,0x20,0x5f,0x32,0x38,0x33,0x20,0x2b,0x20,0x5f,0x32,0x33,0x34,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,0x31,0x20,0x3d,0x20,0x5f,0x33,0x33,0x30,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,
    0x20,0x5f,0x33,0x33,0x33,0x20,0x3d,0x20,0x5f,0x33,0x33,0x31,0x20,0x3c,0x20,0x31,
    0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,
    0x20,0x5f,0x33,0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x33,0x33,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x20,0x3d,0x20,0x5f,0x33,0x33,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x34,0x34,0x20,0x3d,0x20,0x61,0x62,
    0x73,0x28,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,
    0x20,0x2d,0x20,0x5f,0x33,0x30,0x39,0x29,0x20,0x3c,0x20,0x30,0x2e,0x31,0x30,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,
    0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x34,0x34,0x20,0x3d,0x20,0x5f,0x33,
    0x33,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x34,0x34,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x6d,0x61,0x78,0x20,0x3d,0x20,0x6d,0x61,0x78,
    0x28,0x5f,0x33,0x33,0x31,0x2c,0x20,0x64,0x6d,0x61,0x78,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x6d,0x69,0x6e,0x20,0x3d,
    0x20,0x6d,0x69,0x6e,0x28,0x5f,0x33,0x33,0x31,0x2c,0x20,0x64,0x6d,0x69,0x6e,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x64,0x6d,0x61,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x6d,0x61,0x78,0x20,0x3d,0x20,0x67,0x65,0x74,
    0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x64,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x36,
    0x30,0x20,0x3d,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x5f,
    0x33,0x36,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x66,0x61,0x63,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,
    0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x20,
    0x2f,0x20,0x28,0x70,0x6f,0x77,0x28,0x61,0x62,0x73,0x28,0x64,0x6d,0x61,0x78,0x20,
    0x2d,0x20,0x5f,0x33,0x36,0x30,0x29,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,
    0x31,0x32,0x35,0x29,0x20,0x2b,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,
    0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,
    0x32,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x68,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x31,0x2e,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x69,0x5f,0x31,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x5f,0x31,0x20,0x3c,0x20,0x38,
    0x3b,0x20,0x69,0x5f,0x31,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x33,0x39,0x34,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,0x2c,0x20,0x5f,
    0x32,0x39,0x36,0x5b,0x69,0x5f,0x31,0x5d,0x20,0x2a,0x20,0x5f,0x32,0x37,0x36,0x20,
    0x2b,0x20,0x5f,0x32,0x33,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x39,
    0x35,0x20,0x3d,0x20,0x5f,0x33,0x39,0x34,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x33,0x39,0x35,0x20,0x3e,0x20,
    0x30,0x2e,0x30,0x29,0x20,0x26,0x26,0x20,0x28,0x5f,0x33,0x39,0x35,0x20,0x3c,0x20,
    0x31,0x2e,0x30,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x68,0x6d,0x69,
    0x6e,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x33,0x39,0x35,0x2c,0x20,0x64,0x68,
    0x6d,0x69,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x34,0x31,0x31,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,
    0x2c,0x20,0x5f,0x32,0x33,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x31,0x32,0x20,0x3d,0x20,
    0x5f,0x34,0x31,0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,
    0x3d,0x20,0x5f,0x34,0x31,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x31,0x36,0x20,0x3d,0x20,0x67,
    0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x64,0x68,0x6d,0x69,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x34,0x31,0x39,0x20,0x3d,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x68,0x6d,0x69,0x6e,
    0x20,0x3d,0x20,0x5f,0x34,0x31,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x61,0x63,0x62,0x20,0x3d,0x20,
    0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x31,
    0x39,0x20,0x3c,0x20,0x5f,0x34,0x31,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x61,0x63,0x62,0x20,0x3d,0x20,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x6d,0x69,0x6e,0x28,0x28,0x5f,0x34,0x31,0x36,0x20,0x2d,
    0x20,0x64,0x68,0x6d,0x69,0x6e,0x29,0x20,0x2a,0x20,0x32,0x2e,0x32,0x30,0x30,0x30,
    0x30,0x30,0x30,0x34,0x37,0x36,0x38,0x33,0x37,0x31,0x35,0x38,0x32,0x30,0x33,0x31,
    0x32,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x34,0x33,0x36,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x66,0x61,0x63,0x2c,0x20,
    0x66,0x61,0x63,0x62,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x32,0x20,0x3d,0x20,0x5f,0x34,
    0x33,0x36,0x20,0x2d,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x32,0x30,0x5d,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x61,0x63,0x20,0x3d,0x20,0x77,0x69,0x6e,
    0x64,0x6f,0x77,0x5b,0x32,0x30,0x5d,0x2e,0x7a,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,
    0x28,0x2d,0x28,0x5f,0x34,0x34,0x32,0x20,0x2a,0x20,0x5f,0x34,0x34,0x32,0x29,0x29,
    0x20,0x2f,0x20,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x32,0x30,0x5d,0x2e,0x79,
    0x20,0x2b,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,
    0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,
    0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x36,0x29,0x29,0x20,0x2b,0x20,0x5f,0x34,0x33,
    0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x34,0x36,0x34,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x5f,0x32,0x33,0x34,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x34,0x36,0x35,0x20,0x3d,0x20,0x5f,0x34,0x36,0x34,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x34,0x36,0x35,0x20,0x3c,0x20,0x5f,
    0x34,0x31,0x32,0x29,0x20,0x7c,0x7c,0x20,0x28,0x21,0x28,0x28,0x5f,0x32,0x35,0x32,
    0x20,0x26,0x20,0x31,0x29,0x20,0x21,0x3d,0x20,0x69,0x6e,0x74,0x28,0x30,0x75,0x29,
    0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x61,0x63,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x34,0x38,0x33,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x5f,0x32,
    0x34,0x33,0x2e,0x78,0x2c,0x20,0x6d,0x61,0x78,0x28,0x5f,0x32,0x34,0x33,0x2e,0x79,
    0x2c,0x20,0x5f,0x32,0x34,0x33,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x39,0x34,0x20,
    0x3d,0x20,0x5f,0x32,0x34,0x33,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x31,0x37,
    0x20,0x3d,0x20,0x5f,0x32,0x34,0x33,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x28,0x28,0x28,0x5f,0x34,0x39,0x34,0x20,0x2a,0x20,0x66,0x61,0x63,0x29,0x20,
    0x2a,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x39,0x5d,0x2e,0x78,0x29,0x20,
    0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x28,0x28,0x70,0x6f,0x77,0x28,0x66,0x61,0x63,
    0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x39,0x5d,0x2e,0x79,0x29,0x20,
    0x2d,0x20,0x31,0x2e,0x30,0x29,0x20,0x2a,0x20,0x5f,0x34,0x38,0x33,0x29,0x20,0x2a,
    0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x39,0x5d,0x2e,0x7a,0x29,0x29,0x20,
    0x2b,0x20,0x28,0x5f,0x34,0x39,0x34,0x20,0x2a,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,
    0x5b,0x31,0x39,0x5d,0x2e,0x77,0x29,0x2c,0x20,0x5f,0x35,0x31,0x37,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x64,0x61,0x72,0x6b,0x65,0x6e,0x20,0x3d,0x20,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,
    0x65,0x74,0x63,0x68,0x28,0x73,0x73,0x61,0x6f,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,
    0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,
    0x29,0x2c,0x20,0x30,0x29,0x2e,0x78,0x20,0x2a,0x20,0x5f,0x34,0x38,0x33,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x38,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x36,0x31,0x35,0x38,
    0x31,0x34,0x32,0x30,0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x36,0x35,0x20,0x3d,0x3d,0x20,0x5f,0x34,0x31,
    0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x64,0x61,0x72,0x6b,0x65,0x6e,0x20,0x2a,0x3d,0x20,0x30,0x2e,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x28,
    0x28,0x5f,0x32,0x35,0x32,0x20,0x26,0x20,0x32,0x29,0x20,0x21,0x3d,0x20,0x69,0x6e,
    0x74,0x28,0x30,0x75,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x61,0x72,0x6b,0x65,0x6e,0x20,0x3d,0x20,0x30,
    0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,0x2d,
    0x20,0x76,0x65,0x63,0x33,0x28,0x64,0x61,0x72,0x6b,0x65,0x6e,0x29,0x2c,0x20,0x5f,
    0x35,0x31,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x28,
    0x28,0x5f,0x32,0x35,0x32,0x20,0x26,0x20,0x34,0x29,0x20,0x21,0x3d,0x20,0x69,0x6e,
    0x74,0x28,0x30,0x75,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x35,0x39,0x38,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,
    0x5b,0x35,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x36,0x5d,0x2c,0x20,
    0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x37,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,
    0x77,0x5b,0x38,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x6d,0x61,
    0x74,0x34,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x5d,0x2c,0x20,0x77,0x69,
    0x6e,0x64,0x6f,0x77,0x5b,0x32,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,
    0x33,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x34,0x5d,0x29,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,
    0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2f,
    0x20,0x5f,0x32,0x33,0x33,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,
    0x30,0x29,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,
    0x78,0x79,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x36,0x30,0x30,0x20,0x3d,0x20,0x5f,0x35,0x39,0x38,0x2e,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x64,0x6f,0x65,0x73,
    0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x36,0x30,0x30,0x20,0x21,0x3d,0x20,0x30,0x2e,0x30,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x31,0x30,0x20,0x3d,
    0x20,0x28,0x2d,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x37,0x5d,0x2e,0x7a,0x29,
    0x20,0x2f,0x20,0x5f,0x36,0x30,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x74,0x20,0x3d,0x20,0x5f,0x36,0x31,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x64,0x6f,0x65,0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,
    0x20,0x3d,0x20,0x5f,0x36,0x31,0x30,0x20,0x3e,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x6f,0x65,
    0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x20,0x3d,0x20,0x66,0x61,0x6c,
    0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x73,0x72,0x77,0x65,0x69,
    0x67,0x68,0x74,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x73,0x72,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x62,0x65,0x6c,0x6f,0x77,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x64,0x61,0x72,
    0x6b,0x65,0x6e,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x68,0x61,0x64,0x6f,
    0x77,0x66,0x61,0x63,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x36,0x32,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x64,0x6f,0x65,0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x36,0x32,0x37,0x20,0x3d,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x37,
    0x5d,0x2e,0x7a,0x20,0x3e,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x32,0x37,0x20,0x3d,0x20,0x64,
    0x6f,0x65,0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x36,0x32,0x37,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x33,0x37,0x20,
    0x3d,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x37,0x5d,0x2e,0x78,0x79,0x7a,
    0x20,0x2b,0x20,0x28,0x5f,0x35,0x39,0x38,0x20,0x2a,0x20,0x74,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x36,0x34,0x32,0x20,0x3d,0x20,0x5f,0x36,0x33,0x37,0x20,0x2d,0x20,
    0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x37,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x36,0x34,0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x5f,0x36,0x34,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x36,
    0x34,0x37,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,
    0x5b,0x31,0x33,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x34,0x5d,
    0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x35,0x5d,0x2c,0x20,0x77,0x69,
    0x6e,0x64,0x6f,0x77,0x5b,0x31,0x36,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x36,
    0x35,0x33,0x20,0x3d,0x20,0x5f,0x36,0x34,0x37,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x28,0x5f,0x36,0x33,0x37,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x28,0x5f,0x36,0x35,0x33,0x20,
    0x2f,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x36,0x35,0x33,0x2e,0x77,0x29,0x29,0x2e,
    0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,0x35,0x29,0x20,0x3c,
    0x20,0x5f,0x34,0x36,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x37,0x31,0x20,0x3d,0x20,
    0x5f,0x36,0x34,0x33,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x62,0x65,0x6c,0x6f,0x77,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,
    0x5f,0x64,0x61,0x72,0x6b,0x65,0x6e,0x20,0x3d,0x20,0x28,0x2d,0x65,0x78,0x70,0x28,
    0x28,0x28,0x2d,0x36,0x30,0x2e,0x30,0x29,0x20,0x2a,0x20,0x5f,0x36,0x37,0x31,0x29,
    0x20,0x2a,0x20,0x5f,0x36,0x37,0x31,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x32,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,
    0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x20,0x2b,0x20,0x30,0x2e,0x38,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x73,0x73,0x72,0x77,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x65,
    0x78,0x70,0x28,0x28,0x28,0x2d,0x31,0x32,0x30,0x2e,0x30,0x29,0x20,0x2a,0x20,0x5f,
    0x36,0x37,0x31,0x29,0x20,0x2a,0x20,0x5f,0x36,0x37,0x31,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,
    0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x20,0x2b,0x20,0x30,0x2e,0x36,
    0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,
    0x30,0x31,0x35,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x36,0x39,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x36,0x34,0x33,0x2e,
    0x78,0x79,0x2c,0x20,0x2d,0x5f,0x36,0x37,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x73,0x74,0x61,0x74,
    0x65,0x20,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x37,
    0x31,0x38,0x20,0x3d,0x20,0x28,0x5f,0x32,0x33,0x34,0x20,0x2a,0x20,0x35,0x2e,0x30,
    0x29,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,
    0x5f,0x36,0x34,0x32,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x37,0x31,0x38,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x32,0x37,0x20,0x3d,0x20,0x66,0x62,
    0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x37,0x31,
    0x38,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x38,0x2e,0x31,0x30,0x30,0x30,0x30,
    0x30,0x33,0x38,0x31,0x34,0x36,0x39,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x33,0x37,0x20,0x3d,0x20,
    0x66,0x62,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x37,0x34,0x39,0x20,0x3d,0x20,0x5f,0x37,0x31,0x38,
    0x20,0x2b,0x20,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x37,0x32,0x37,0x2c,0x20,0x5f,
    0x37,0x33,0x37,0x29,0x20,0x2a,0x20,0x37,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,0x37,
    0x34,0x39,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x33,0x2e,0x30,0x39,0x39,0x39,
    0x39,0x39,0x39,0x30,0x34,0x36,0x33,0x32,0x35,0x36,0x38,0x33,0x35,0x39,0x33,0x37,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x35,0x34,
    0x20,0x3d,0x20,0x66,0x62,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,
    0x3d,0x20,0x5f,0x37,0x34,0x39,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x39,0x31,
    0x2e,0x30,0x39,0x39,0x39,0x39,0x38,0x34,0x37,0x34,0x31,0x32,0x31,0x30,0x39,0x33,
    0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x36,
    0x37,0x20,0x3d,0x20,0x66,0x62,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x30,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x37,0x35,0x34,0x2c,0x20,0x5f,
    0x37,0x36,0x37,0x29,0x20,0x2a,0x20,0x39,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x37,0x37,0x39,0x20,0x3d,0x20,0x66,0x62,0x6d,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,0x79,0x69,0x6e,0x74,0x20,0x3d,0x20,
    0x31,0x2e,0x30,0x2c,0x20,0x73,0x20,0x3d,0x20,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,
    0x30,0x30,0x30,0x30,0x37,0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,
    0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x3b,0x20,0x73,0x20,0x3c,0x20,0x38,0x2e,0x30,
    0x3b,0x20,0x73,0x20,0x2a,0x3d,0x20,0x31,0x2e,0x33,0x39,0x39,0x39,0x39,0x39,0x39,
    0x37,0x36,0x31,0x35,0x38,0x31,0x34,0x32,0x30,0x38,0x39,0x38,0x34,0x33,0x37,0x35,
    0x2c,0x20,0x72,0x61,0x79,0x69,0x6e,0x74,0x20,0x2a,0x3d,0x20,0x30,0x2e,0x39,0x39,
    0x30,0x30,0x30,0x30,0x30,0x30,0x39,0x35,0x33,0x36,0x37,0x34,0x33,0x31,0x36,0x34,
    0x30,0x36,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x37,0x39,0x35,0x20,0x3d,0x20,0x5f,0x36,0x33,0x37,0x20,0x2b,0x20,0x28,0x5f,0x36,
    0x39,0x38,0x20,0x2a,0x20,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x38,0x30,0x34,0x20,0x3d,0x20,0x5f,0x36,0x34,0x37,0x20,
    0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x37,0x39,0x35,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x38,
    0x30,0x39,0x20,0x3d,0x20,0x5f,0x38,0x30,0x34,0x20,0x2f,0x20,0x76,0x65,0x63,0x34,
    0x28,0x5f,0x38,0x30,0x34,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x38,0x32,0x37,0x20,0x3d,0x20,0x28,0x28,0x5f,0x38,
    0x30,0x39,0x2e,0x78,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,
    0x65,0x63,0x32,0x28,0x30,0x2e,0x35,0x29,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,
    0x28,0x28,0x5f,0x37,0x37,0x39,0x20,0x2d,0x20,0x30,0x2e,0x35,0x29,0x20,0x2a,0x20,
    0x30,0x2e,0x30,0x32,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x33,0x32,0x39,0x34,0x34,
    0x37,0x37,0x34,0x36,0x32,0x37,0x36,0x38,0x35,0x35,0x34,0x36,0x38,0x37,0x35,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,
    0x32,0x39,0x20,0x3d,0x20,0x5f,0x38,0x32,0x37,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,
    0x6c,0x20,0x5f,0x38,0x33,0x30,0x20,0x3d,0x20,0x5f,0x38,0x32,0x39,0x20,0x3e,0x3d,
    0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x33,0x37,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x38,0x33,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x38,0x33,0x37,0x20,0x3d,0x20,0x5f,0x38,0x32,0x37,0x2e,0x79,0x20,
    0x3e,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x38,0x33,0x37,0x20,0x3d,0x20,0x5f,0x38,0x33,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x34,0x34,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x21,0x5f,0x38,0x33,0x37,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x38,0x34,0x34,0x20,0x3d,0x20,0x5f,0x38,0x32,0x39,0x20,0x3c,0x3d,0x20,0x30,
    0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x38,0x34,0x34,0x20,0x3d,0x20,0x5f,0x38,0x33,0x37,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x35,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,
    0x5f,0x38,0x34,0x34,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x38,0x35,0x31,
    0x20,0x3d,0x20,0x5f,0x38,0x32,0x37,0x2e,0x79,0x20,0x3c,0x3d,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x38,0x35,0x31,0x20,0x3d,0x20,0x5f,0x38,0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x38,0x35,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x72,
    0x65,0x61,0x6b,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x5f,0x38,0x32,0x37,0x29,
    0x2e,0x78,0x20,0x3e,0x20,0x28,0x5f,0x38,0x30,0x39,0x2e,0x7a,0x20,0x2a,0x20,0x30,
    0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,0x35,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x73,0x73,0x72,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x68,0x69,0x5f,0x72,0x65,
    0x73,0x2c,0x20,0x5f,0x38,0x32,0x37,0x29,0x20,0x2a,0x20,0x72,0x61,0x79,0x69,0x6e,
    0x74,0x29,0x20,0x2a,0x20,0x28,0x33,0x2e,0x30,0x20,0x2f,0x20,0x28,0x33,0x2e,0x30,
    0x20,0x2b,0x20,0x5f,0x37,0x39,0x35,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x3d,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,
    0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x73,0x74,0x61,
    0x74,0x65,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x3d,0x20,0x32,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x72,0x65,0x61,
    0x6b,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x73,0x74,0x61,0x74,0x65,0x20,0x21,0x3d,0x20,0x32,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x73,0x72,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,
    0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x73,0x73,0x72,0x77,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x28,0x73,0x73,0x72,
    0x77,0x65,0x69,0x67,0x68,0x74,0x20,0x2b,0x20,0x28,0x72,0x61,0x6e,0x64,0x6f,0x6d,
    0x31,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x20,0x2a,0x20,0x30,0x2e,
    0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,
    0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x20,0x2b,0x20,0x28,0x2d,0x30,0x2e,
    0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,
    0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x29,0x29,0x29,0x20,0x2a,0x20,
    0x30,0x2e,0x36,0x36,0x30,0x30,0x30,0x30,0x30,0x32,0x36,0x32,0x32,0x36,0x30,0x34,
    0x33,0x37,0x30,0x31,0x31,0x37,0x31,0x38,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x5f,0x31,0x20,0x3d,0x20,0x30,
    0x2e,0x30,0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,0x32,
    0x35,0x38,0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x3b,0x20,
    0x73,0x5f,0x31,0x20,0x3c,0x20,0x30,0x2e,0x35,0x3b,0x20,0x73,0x5f,0x31,0x20,0x2a,
    0x3d,0x20,0x31,0x2e,0x32,0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x32,0x33,0x31,0x36,
    0x32,0x38,0x34,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x39,0x35,0x30,0x20,0x3d,0x20,0x5f,0x36,0x34,0x37,
    0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x36,0x33,0x37,0x20,0x2b,0x20,0x28,
    0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x20,0x2a,0x20,0x73,0x5f,0x31,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x39,0x35,
    0x35,0x20,0x3d,0x20,0x5f,0x39,0x35,0x30,0x20,0x2f,0x20,0x76,0x65,0x63,0x34,0x28,
    0x5f,0x39,0x35,0x30,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x32,0x20,0x5f,0x39,0x37,0x32,0x20,0x3d,0x20,0x28,0x28,0x5f,0x39,0x35,
    0x35,0x2e,0x78,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,
    0x63,0x32,0x28,0x30,0x2e,0x35,0x29,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,
    0x28,0x5f,0x37,0x37,0x39,0x20,0x2d,0x20,0x30,0x2e,0x35,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x30,0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,0x32,
    0x35,0x38,0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x32,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6f,0x72,0x64,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x33,0x20,0x3d,0x20,0x67,0x6c,
    0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x39,0x39,0x36,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,
    0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x39,0x37,0x32,0x2e,0x78,0x20,0x2b,0x20,0x28,
    0x28,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x31,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x32,0x29,0x20,0x2a,0x20,0x35,0x2e,0x30,0x29,0x20,0x2f,0x20,0x77,0x69,0x6e,0x64,
    0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x2c,0x20,0x5f,0x39,0x37,0x32,0x2e,0x79,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x39,0x39,0x37,0x20,0x3d,0x20,0x5f,0x39,0x39,0x36,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x39,0x39,0x37,0x20,0x3c,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x34,0x20,0x3d,0x20,0x5f,0x39,0x35,0x35,
    0x2e,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x35,0x20,0x3d,0x20,0x5f,0x39,0x39,0x37,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x30,0x31,0x31,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,
    0x61,0x62,0x73,0x28,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x34,0x29,0x20,0x2d,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x35,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x66,0x61,0x63,0x20,0x3d,0x20,0x28,0x28,0x28,0x31,0x2e,0x30,0x20,
    0x2f,0x20,0x28,0x73,0x5f,0x31,0x20,0x2d,0x20,0x32,0x2e,0x30,0x29,0x29,0x20,0x2b,
    0x20,0x32,0x2e,0x30,0x29,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x28,0x28,0x2d,0x28,
    0x33,0x30,0x2e,0x30,0x20,0x2a,0x20,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x32,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x33,0x29,0x20,0x2b,0x20,0x33,0x30,0x2e,0x30,0x29,
    0x29,0x20,0x2a,0x20,0x5f,0x31,0x30,0x31,0x31,0x29,0x20,0x2a,0x20,0x5f,0x31,0x30,
    0x31,0x31,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x37,0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,0x38,
    0x32,0x38,0x31,0x32,0x35,0x20,0x2b,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x66,0x61,
    0x63,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,
    0x68,0x61,0x64,0x6f,0x77,0x66,0x61,0x63,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,
    0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x66,0x61,0x63,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,
    0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,
    0x28,0x28,0x28,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,
    0x62,0x65,0x6c,0x6f,0x77,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x64,0x61,0x72,
    0x6b,0x65,0x6e,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x73,
    0x72,0x77,0x65,0x69,0x67,0x68,0x74,0x29,0x29,0x20,0x2b,0x20,0x28,0x73,0x73,0x72,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x73,0x73,0x72,0x77,0x65,0x69,0x67,0x68,
    0x74,0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x66,0x61,0x63,0x29,0x29,0x20,0x2b,0x20,0x28,0x76,0x65,0x63,0x34,
    0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x20,0x2a,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x66,0x61,0x63,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before composer.h"
#endif
static inline const sg_shader_desc* bloomDilateX_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.vs.source = edl_composer_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = bloom_dilateX_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.images[0].name = "shine";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "bloomDilateX_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* bloomDilateY_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.vs.source = edl_composer_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = bloom_dilateY_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.images[0].name = "shine";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "bloomDilateY_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* bloomblurX_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.vs.source = edl_composer_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = bloom_blurX_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.images[0].name = "shine";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "bloomblurX_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* bloomblurYFin_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.vs.source = edl_composer_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = bloom_blurY_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.images[0].name = "shine";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "bloomblurYFin_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* border_composer_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.vs.source = edl_composer_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = ui_composer_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 64;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "ui_composing";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.images[0].name = "bordering";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "ui_selection";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "border_composer_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* edl_composer_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.vs.source = edl_composer_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = edl_composer_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 352;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "window";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 22;
      desc.fs.images[0].name = "color_hi_res";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "depth_hi_res";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[2].name = "depth_lo_res";
      desc.fs.images[2].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[2].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[3].name = "uDepth";
      desc.fs.images[3].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[3].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[4].name = "ssao";
      desc.fs.images[4].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[4].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "edl_composer_shader";
    }
    return &desc;
  }
  return 0;
}
