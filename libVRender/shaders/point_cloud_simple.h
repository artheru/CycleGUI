#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input point_cloud_simple.glsl --output point_cloud_simple.h --slang glsl300es

    Overview:

        Shader program 'point_cloud_simple':
            Get shader desc: point_cloud_simple_shader_desc(sg_query_backend());
            Vertex shader: point_cloud_vs
                Attribute slots:
                    ATTR_point_cloud_vs_position = 0
                    ATTR_point_cloud_vs_size = 1
                    ATTR_point_cloud_vs_color = 2
                Uniform block 'vs_params':
                    C struct: vs_params_t
                    Bind slot: SLOT_vs_params = 0
            Fragment shader: point_cloud_fs
                Uniform block 'vs_params':
                    C struct: vs_params_t
                    Bind slot: SLOT_vs_params = 0
                Image 'selected':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_UINT
                    Bind slot: SLOT_selected = 0


    Shader descriptor structs:

        sg_shader point_cloud_simple = sg_make_shader(point_cloud_simple_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'point_cloud_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_point_cloud_vs_position] = { ... },
                    [ATTR_point_cloud_vs_size] = { ... },
                    [ATTR_point_cloud_vs_color] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_selected = 0;

    Bind slot and C-struct for uniform block 'vs_params':

        vs_params_t vs_params = {
            .mvp = ...;
            .dpi = ...;
            .pc_id = ...;
            .displaying = ...;
            .hovering_pcid = ...;
            .shine_color_intensity = ...;
            .hover_shine_color_intensity = ...;
            .selected_shine_color_intensity = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_vs_params, &SG_RANGE(vs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_point_cloud_vs_position (0)
#define ATTR_point_cloud_vs_size (1)
#define ATTR_point_cloud_vs_color (2)
#define SLOT_selected (0)
#define SLOT_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    glm::mat4 mvp;
    float dpi;
    int pc_id;
    int displaying;
    int hovering_pcid;
    glm::vec4 shine_color_intensity;
    glm::vec4 hover_shine_color_intensity;
    glm::vec4 selected_shine_color_intensity;
} vs_params_t;
#pragma pack(pop)
/*
    #version 300 es
    
    struct vs_params
    {
        mat4 mvp;
        float dpi;
        int pc_id;
        int displaying;
        int hovering_pcid;
        vec4 shine_color_intensity;
        vec4 hover_shine_color_intensity;
        vec4 selected_shine_color_intensity;
    };
    
    uniform vs_params _16;
    
    layout(location = 0) in vec3 position;
    layout(location = 1) in float size;
    out vec4 v_Color;
    layout(location = 2) in vec4 color;
    flat out vec4 vid;
    flat out int vertex;
    flat out int selc;
    
    void main()
    {
        vec4 _30 = _16.mvp * vec4(position, 1.0);
        gl_Position = _30;
        gl_PointSize = clamp(((size / sqrt(_30.z)) * 3.0) * _16.dpi + 2.0, 2.0, 32.0 * _16.dpi);
        v_Color = color;
        vid = vec4(1.0, float(_16.pc_id), float(gl_VertexID / 16777216), float(gl_VertexID % 16777216));
        if ((_16.displaying & 4) != 0)
        {
            gl_Position.z -= gl_Position.w;
        }
        vertex = gl_VertexID;
    }
    
*/
static const char point_cloud_vs_source_glsl300es[866] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x6d,0x76,0x70,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x70,0x69,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x63,0x5f,0x69,0x64,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x64,0x69,0x73,0x70,0x6c,0x61,0x79,0x69,
    0x6e,0x67,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x68,0x6f,0x76,0x65,
    0x72,0x69,0x6e,0x67,0x5f,0x70,0x63,0x69,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x73,0x68,0x69,0x6e,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x69,0x6e,0x74,0x65,0x6e,0x73,0x69,0x74,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x68,0x6f,0x76,0x65,0x72,0x5f,0x73,0x68,0x69,0x6e,0x65,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x69,0x6e,0x74,0x65,0x6e,0x73,0x69,0x74,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x65,0x6c,0x65,0x63,0x74,
    0x65,0x64,0x5f,0x73,0x68,0x69,0x6e,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x69,
    0x6e,0x74,0x65,0x6e,0x73,0x69,0x74,0x79,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,
    0x5f,0x31,0x36,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,
    0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x69,0x7a,0x65,0x3b,
    0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x43,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x34,0x20,0x76,0x69,0x64,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x6f,
    0x75,0x74,0x20,0x69,0x6e,0x74,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,0x0a,0x66,
    0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,0x69,0x6e,0x74,0x20,0x73,0x65,0x6c,0x63,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x20,0x3d,0x20,
    0x5f,0x31,0x36,0x2e,0x6d,0x76,0x70,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x5f,0x33,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x69,
    0x6e,0x74,0x53,0x69,0x7a,0x65,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,
    0x28,0x73,0x69,0x7a,0x65,0x20,0x2f,0x20,0x73,0x71,0x72,0x74,0x28,0x5f,0x33,0x30,
    0x2e,0x7a,0x29,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x29,0x20,0x2a,0x20,0x5f,0x31,
    0x36,0x2e,0x64,0x70,0x69,0x20,0x2b,0x20,0x32,0x2e,0x30,0x2c,0x20,0x32,0x2e,0x30,
    0x2c,0x20,0x33,0x32,0x2e,0x30,0x20,0x2a,0x20,0x5f,0x31,0x36,0x2e,0x64,0x70,0x69,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x69,0x64,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x5f,0x31,0x36,0x2e,0x70,0x63,0x5f,0x69,0x64,0x29,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x20,
    0x2f,0x20,0x31,0x36,0x37,0x37,0x37,0x32,0x31,0x36,0x29,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x20,0x25,
    0x20,0x31,0x36,0x37,0x37,0x37,0x32,0x31,0x36,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,0x36,0x2e,0x64,0x69,0x73,0x70,0x6c,0x61,
    0x79,0x69,0x6e,0x67,0x20,0x26,0x20,0x34,0x29,0x20,0x21,0x3d,0x20,0x30,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x20,0x2d,0x3d,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x77,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x3d,
    0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    struct vs_params
    {
        highp mat4 mvp;
        highp float dpi;
        int pc_id;
        int displaying;
        int hovering_pcid;
        highp vec4 shine_color_intensity;
        highp vec4 hover_shine_color_intensity;
        highp vec4 selected_shine_color_intensity;
    };
    
    uniform vs_params _67;
    
    uniform highp usampler2D selected;
    
    layout(location = 1) out highp float g_depth;
    layout(location = 2) out highp float pc_depth;
    layout(location = 3) out highp vec4 screen_id;
    flat in highp vec4 vid;
    flat in int vertex;
    layout(location = 4) out highp float bordering;
    layout(location = 0) out highp vec4 frag_color;
    in highp vec4 v_Color;
    layout(location = 5) out highp vec4 bloom;
    flat in int selc;
    
    void main()
    {
        pc_depth = gl_FragCoord.z;
        g_depth = gl_FragCoord.z;
        screen_id = vid;
        ivec2 _35 = textureSize(selected, 0);
        int _37 = _35.x;
        int _43 = vertex / 8;
        bool _73 = (_67.displaying & 8) != 0;
        bool _91;
        if (!_73)
        {
            bool _81 = (_67.displaying & 32) != 0;
            bool _90;
            if (_81)
            {
                _90 = (int(texelFetch(selected, ivec2(_43 % _37, _43 / _37), 0).x) & (1 << (vertex % 8))) != 0;
            }
            else
            {
                _90 = _81;
            }
            _91 = _90;
        }
        else
        {
            _91 = _73;
        }
        bool _97 = (_67.displaying & 16) != 0;
        bool _113;
        if (!_97)
        {
            bool _104 = (_67.displaying & 32) != 0;
            bool _112;
            if (_104)
            {
                _112 = _67.hovering_pcid == vertex;
            }
            else
            {
                _112 = _104;
            }
            _113 = _112;
        }
        else
        {
            _113 = _97;
        }
        if ((_67.displaying & 1) != 0)
        {
            bordering = 3.0;
        }
        else
        {
            if (_91)
            {
                bordering = 2.0;
            }
            else
            {
                if (_113)
                {
                    bordering = 1.0;
                }
                else
                {
                    bordering = 0.0;
                }
            }
        }
        bordering *= 0.0625;
        highp vec4 shine = vec4(0.0);
        if ((_67.displaying & 2) != 0)
        {
            shine = _67.shine_color_intensity;
        }
        if (_91)
        {
            shine += _67.selected_shine_color_intensity;
        }
        if (_113)
        {
            shine += _67.hover_shine_color_intensity;
        }
        highp vec4 _167 = shine;
        highp vec4 _169 = min(_167, vec4(1.0));
        shine = _169;
        highp float _178 = _169.w;
        highp vec3 _187 = _169.xyz * _178;
        frag_color = vec4((v_Color.xyz * ((-_178) * 0.300000011920928955078125 + 1.0)) + (_187 * 0.5), v_Color.w);
        bloom = vec4((frag_color.xyz + vec3(0.20000000298023223876953125)) * (vec3(1.0) + _187) + vec3(-0.89999997615814208984375), 1.0);
    }
    
*/
static const char point_cloud_fs_source_glsl300es[2754] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,
    0x20,0x6d,0x76,0x70,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x70,0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x20,0x70,0x63,0x5f,0x69,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x64,0x69,0x73,0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x6e,0x74,0x20,0x68,0x6f,0x76,0x65,0x72,0x69,0x6e,0x67,0x5f,0x70,
    0x63,0x69,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x73,0x68,0x69,0x6e,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x69,0x6e,0x74,0x65,0x6e,0x73,0x69,0x74,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x68,0x6f,0x76,0x65,0x72,0x5f,
    0x73,0x68,0x69,0x6e,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x69,0x6e,0x74,0x65,
    0x6e,0x73,0x69,0x74,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x65,0x6c,0x65,0x63,0x74,0x65,0x64,0x5f,0x73,
    0x68,0x69,0x6e,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x69,0x6e,0x74,0x65,0x6e,
    0x73,0x69,0x74,0x79,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x36,0x37,0x3b,
    0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x75,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x73,0x65,0x6c,0x65,0x63,
    0x74,0x65,0x64,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,0x5f,0x64,0x65,0x70,
    0x74,0x68,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x63,0x5f,0x64,0x65,0x70,0x74,
    0x68,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x63,0x72,0x65,0x65,0x6e,0x5f,0x69,0x64,
    0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x76,0x69,0x64,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x69,
    0x6e,0x20,0x69,0x6e,0x74,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x34,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,0x6e,0x67,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x43,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x62,0x6c,0x6f,0x6f,0x6d,0x3b,0x0a,
    0x66,0x6c,0x61,0x74,0x20,0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,0x73,0x65,0x6c,0x63,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x70,0x63,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,
    0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x67,0x6c,
    0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x63,0x72,0x65,0x65,0x6e,0x5f,0x69,0x64,0x20,0x3d,0x20,0x76,0x69,
    0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x35,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,0x73,
    0x65,0x6c,0x65,0x63,0x74,0x65,0x64,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x37,0x20,0x3d,0x20,0x5f,0x33,0x35,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x34,0x33,0x20,0x3d,0x20,
    0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x2f,0x20,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x28,0x5f,0x36,0x37,0x2e,
    0x64,0x69,0x73,0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0x20,0x26,0x20,0x38,0x29,0x20,
    0x21,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,
    0x39,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x37,0x33,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x31,0x20,0x3d,0x20,0x28,0x5f,0x36,0x37,0x2e,
    0x64,0x69,0x73,0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0x20,0x26,0x20,0x33,0x32,0x29,
    0x20,0x21,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,
    0x6f,0x6f,0x6c,0x20,0x5f,0x39,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x39,0x30,0x20,0x3d,0x20,0x28,0x69,0x6e,0x74,0x28,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x73,0x65,0x6c,0x65,0x63,0x74,0x65,0x64,0x2c,0x20,
    0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x34,0x33,0x20,0x25,0x20,0x5f,0x33,0x37,0x2c,
    0x20,0x5f,0x34,0x33,0x20,0x2f,0x20,0x5f,0x33,0x37,0x29,0x2c,0x20,0x30,0x29,0x2e,
    0x78,0x29,0x20,0x26,0x20,0x28,0x31,0x20,0x3c,0x3c,0x20,0x28,0x76,0x65,0x72,0x74,
    0x65,0x78,0x20,0x25,0x20,0x38,0x29,0x29,0x29,0x20,0x21,0x3d,0x20,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x30,
    0x20,0x3d,0x20,0x5f,0x38,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x31,0x20,0x3d,0x20,
    0x5f,0x39,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,
    0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x39,0x31,0x20,0x3d,0x20,0x5f,0x37,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x39,0x37,0x20,
    0x3d,0x20,0x28,0x5f,0x36,0x37,0x2e,0x64,0x69,0x73,0x70,0x6c,0x61,0x79,0x69,0x6e,
    0x67,0x20,0x26,0x20,0x31,0x36,0x29,0x20,0x21,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x31,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x39,0x37,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,
    0x30,0x34,0x20,0x3d,0x20,0x28,0x5f,0x36,0x37,0x2e,0x64,0x69,0x73,0x70,0x6c,0x61,
    0x79,0x69,0x6e,0x67,0x20,0x26,0x20,0x33,0x32,0x29,0x20,0x21,0x3d,0x20,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,
    0x31,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x31,0x30,0x34,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x31,0x32,
    0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x68,0x6f,0x76,0x65,0x72,0x69,0x6e,0x67,0x5f,
    0x70,0x63,0x69,0x64,0x20,0x3d,0x3d,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x31,
    0x32,0x20,0x3d,0x20,0x5f,0x31,0x30,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x31,0x33,
    0x20,0x3d,0x20,0x5f,0x31,0x31,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x31,0x33,0x20,0x3d,0x20,0x5f,0x39,0x37,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x28,0x5f,0x36,0x37,0x2e,0x64,0x69,0x73,0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0x20,
    0x26,0x20,0x31,0x29,0x20,0x21,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,
    0x6e,0x67,0x20,0x3d,0x20,0x33,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x39,0x31,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,0x69,0x6e,0x67,0x20,
    0x3d,0x20,0x32,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x31,0x33,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,0x64,
    0x65,0x72,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,0x64,0x65,0x72,
    0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x72,
    0x64,0x65,0x72,0x69,0x6e,0x67,0x20,0x2a,0x3d,0x20,0x30,0x2e,0x30,0x36,0x32,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x73,0x68,0x69,0x6e,0x65,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x36,0x37,
    0x2e,0x64,0x69,0x73,0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0x20,0x26,0x20,0x32,0x29,
    0x20,0x21,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x6e,0x65,0x20,0x3d,0x20,0x5f,0x36,0x37,
    0x2e,0x73,0x68,0x69,0x6e,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x69,0x6e,0x74,
    0x65,0x6e,0x73,0x69,0x74,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x39,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x6e,0x65,0x20,0x2b,
    0x3d,0x20,0x5f,0x36,0x37,0x2e,0x73,0x65,0x6c,0x65,0x63,0x74,0x65,0x64,0x5f,0x73,
    0x68,0x69,0x6e,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x69,0x6e,0x74,0x65,0x6e,
    0x73,0x69,0x74,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x5f,0x31,0x31,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x6e,0x65,0x20,0x2b,0x3d,
    0x20,0x5f,0x36,0x37,0x2e,0x68,0x6f,0x76,0x65,0x72,0x5f,0x73,0x68,0x69,0x6e,0x65,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x69,0x6e,0x74,0x65,0x6e,0x73,0x69,0x74,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x36,0x37,0x20,0x3d,0x20,0x73,0x68,
    0x69,0x6e,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x31,0x36,0x39,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,
    0x31,0x36,0x37,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x6e,0x65,0x20,0x3d,0x20,0x5f,0x31,0x36,
    0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x37,0x38,0x20,0x3d,0x20,0x5f,0x31,0x36,0x39,0x2e,0x77,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x31,0x38,0x37,0x20,0x3d,0x20,0x5f,0x31,0x36,0x39,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x5f,0x31,0x37,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,
    0x76,0x5f,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x28,
    0x2d,0x5f,0x31,0x37,0x38,0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,
    0x31,0x32,0x35,0x20,0x2b,0x20,0x31,0x2e,0x30,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,
    0x31,0x38,0x37,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x2c,0x20,0x76,0x5f,0x43,0x6f,
    0x6c,0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6c,0x6f,0x6f,
    0x6d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,
    0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x29,0x29,0x20,0x2a,
    0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2b,0x20,0x5f,0x31,
    0x38,0x37,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x38,0x39,
    0x39,0x39,0x39,0x39,0x39,0x37,0x36,0x31,0x35,0x38,0x31,0x34,0x32,0x30,0x38,0x39,
    0x38,0x34,0x33,0x37,0x35,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before point_cloud_simple.h"
#endif
static inline const sg_shader_desc* point_cloud_simple_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "size";
      desc.attrs[2].name = "color";
      desc.vs.source = point_cloud_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "_16.mvp";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_MAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[1].name = "_16.dpi";
      desc.vs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_FLOAT;
      desc.vs.uniform_blocks[0].uniforms[1].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[2].name = "_16.pc_id";
      desc.vs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[2].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[3].name = "_16.displaying";
      desc.vs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[3].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[4].name = "_16.hovering_pcid";
      desc.vs.uniform_blocks[0].uniforms[4].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[4].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[5].name = "_16.shine_color_intensity";
      desc.vs.uniform_blocks[0].uniforms[5].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[5].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[6].name = "_16.hover_shine_color_intensity";
      desc.vs.uniform_blocks[0].uniforms[6].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[6].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[7].name = "_16.selected_shine_color_intensity";
      desc.vs.uniform_blocks[0].uniforms[7].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[7].array_count = 1;
      desc.fs.source = point_cloud_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 128;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "_67.mvp";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_MAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[1].name = "_67.dpi";
      desc.fs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_FLOAT;
      desc.fs.uniform_blocks[0].uniforms[1].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[2].name = "_67.pc_id";
      desc.fs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_INT;
      desc.fs.uniform_blocks[0].uniforms[2].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[3].name = "_67.displaying";
      desc.fs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_INT;
      desc.fs.uniform_blocks[0].uniforms[3].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[4].name = "_67.hovering_pcid";
      desc.fs.uniform_blocks[0].uniforms[4].type = SG_UNIFORMTYPE_INT;
      desc.fs.uniform_blocks[0].uniforms[4].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[5].name = "_67.shine_color_intensity";
      desc.fs.uniform_blocks[0].uniforms[5].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[5].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[6].name = "_67.hover_shine_color_intensity";
      desc.fs.uniform_blocks[0].uniforms[6].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[6].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[7].name = "_67.selected_shine_color_intensity";
      desc.fs.uniform_blocks[0].uniforms[7].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[7].array_count = 1;
      desc.fs.images[0].name = "selected";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_UINT;
      desc.label = "point_cloud_simple_shader";
    }
    return &desc;
  }
  return 0;
}
