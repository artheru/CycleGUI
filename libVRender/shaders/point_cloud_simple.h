#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input point_cloud_simple.glsl --output point_cloud_simple.h --slang glsl300es

    Overview:

        Shader program 'edl_composer':
            Get shader desc: edl_composer_shader_desc(sg_query_backend());
            Vertex shader: edl_composer_vs
                Attribute slots:
                    ATTR_edl_composer_vs_position = 0
            Fragment shader: edl_composer_fs
                Uniform block 'window':
                    C struct: window_t
                    Bind slot: SLOT_window = 0
                Image 'color_hi_res':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_color_hi_res = 0
                Image 'depth_hi_res':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_depth_hi_res = 1
                Image 'depth_lo_res':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_depth_lo_res = 2
                Image 'uDepth':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_uDepth = 3
                Image 'ssao':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_ssao = 4

        Shader program 'pc_depth_only':
            Get shader desc: pc_depth_only_shader_desc(sg_query_backend());
            Vertex shader: point_cloud_vs_shadow
                Attribute slots:
                    ATTR_point_cloud_vs_shadow_position = 0
                    ATTR_point_cloud_vs_shadow_size = 1
                Uniform block 'vs_params':
                    C struct: vs_params_t
                    Bind slot: SLOT_vs_params = 0
            Fragment shader: point_cloud_fs_onlyDepth

        Shader program 'point_cloud_simple':
            Get shader desc: point_cloud_simple_shader_desc(sg_query_backend());
            Vertex shader: point_cloud_vs
                Attribute slots:
                    ATTR_point_cloud_vs_position = 0
                    ATTR_point_cloud_vs_size = 1
                    ATTR_point_cloud_vs_color = 2
                Uniform block 'vs_params':
                    C struct: vs_params_t
                    Bind slot: SLOT_vs_params = 0
            Fragment shader: point_cloud_fs


    Shader descriptor structs:

        sg_shader edl_composer = sg_make_shader(edl_composer_shader_desc(sg_query_backend()));
        sg_shader pc_depth_only = sg_make_shader(pc_depth_only_shader_desc(sg_query_backend()));
        sg_shader point_cloud_simple = sg_make_shader(point_cloud_simple_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'point_cloud_vs_shadow':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_point_cloud_vs_shadow_position] = { ... },
                    [ATTR_point_cloud_vs_shadow_size] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'point_cloud_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_point_cloud_vs_position] = { ... },
                    [ATTR_point_cloud_vs_size] = { ... },
                    [ATTR_point_cloud_vs_color] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'edl_composer_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_edl_composer_vs_position] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_color_hi_res = 0;
        SLOT_depth_hi_res = 1;
        SLOT_depth_lo_res = 2;
        SLOT_uDepth = 3;
        SLOT_ssao = 4;

    Bind slot and C-struct for uniform block 'vs_params':

        vs_params_t vs_params = {
            .mvp = ...;
            .dpi = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_vs_params, &SG_RANGE(vs_params));

    Bind slot and C-struct for uniform block 'window':

        window_t window = {
            .w = ...;
            .h = ...;
            .pnear = ...;
            .pfar = ...;
            .ipmat = ...;
            .ivmat = ...;
            .pmat = ...;
            .pv = ...;
            .campos = ...;
            .lookdir = ...;
            .debugU = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_window, &SG_RANGE(window));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_point_cloud_vs_shadow_position (0)
#define ATTR_point_cloud_vs_shadow_size (1)
#define ATTR_point_cloud_vs_position (0)
#define ATTR_point_cloud_vs_size (1)
#define ATTR_point_cloud_vs_color (2)
#define ATTR_edl_composer_vs_position (0)
#define SLOT_color_hi_res (0)
#define SLOT_depth_hi_res (1)
#define SLOT_depth_lo_res (2)
#define SLOT_uDepth (3)
#define SLOT_ssao (4)
#define SLOT_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    glm::mat4 mvp;
    float dpi;
    uint8_t _pad_68[12];
} vs_params_t;
#pragma pack(pop)
#define SLOT_window (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct window_t {
    float w;
    float h;
    float pnear;
    float pfar;
    glm::mat4 ipmat;
    glm::mat4 ivmat;
    glm::mat4 pmat;
    glm::mat4 pv;
    glm::vec3 campos;
    uint8_t _pad_284[4];
    glm::vec3 lookdir;
    float debugU;
} window_t;
#pragma pack(pop)
/*
    #version 300 es
    
    uniform vec4 vs_params[5];
    layout(location = 0) in vec3 position;
    layout(location = 1) in float size;
    
    void main()
    {
        vec4 _30 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * vec4(position, 1.0);
        gl_Position = _30;
        gl_PointSize = clamp(((size / sqrt(_30.z)) * 3.0) * vs_params[4].x + 2.0, 2.0, 32.0 * vs_params[4].x);
    }
    
*/
static const char point_cloud_vs_shadow_source_glsl300es[367] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x33,0x30,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,
    0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x33,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x69,0x6e,0x74,0x53,0x69,0x7a,0x65,
    0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x28,0x73,0x69,0x7a,0x65,0x20,
    0x2f,0x20,0x73,0x71,0x72,0x74,0x28,0x5f,0x33,0x30,0x2e,0x7a,0x29,0x29,0x20,0x2a,
    0x20,0x33,0x2e,0x30,0x29,0x20,0x2a,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x34,0x5d,0x2e,0x78,0x20,0x2b,0x20,0x32,0x2e,0x30,0x2c,0x20,0x32,0x2e,
    0x30,0x2c,0x20,0x33,0x32,0x2e,0x30,0x20,0x2a,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x78,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    layout(location = 0) out highp float g_depth;
    
    void main()
    {
        g_depth = gl_FragCoord.z;
    }
    
*/
static const char point_cloud_fs_onlyDepth_source_glsl300es[158] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 vs_params[5];
    layout(location = 0) in vec3 position;
    layout(location = 1) in float size;
    out vec4 v_Color;
    layout(location = 2) in vec4 color;
    
    void main()
    {
        vec4 _30 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * vec4(position, 1.0);
        gl_Position = _30;
        gl_PointSize = clamp(((size / sqrt(_30.z)) * 3.0) * vs_params[4].x + 2.0, 2.0, 32.0 * vs_params[4].x);
        v_Color = color;
    }
    
*/
static const char point_cloud_vs_source_glsl300es[442] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,
    0x76,0x5f,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x5f,0x33,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x69,
    0x6e,0x74,0x53,0x69,0x7a,0x65,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,
    0x28,0x73,0x69,0x7a,0x65,0x20,0x2f,0x20,0x73,0x71,0x72,0x74,0x28,0x5f,0x33,0x30,
    0x2e,0x7a,0x29,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x29,0x20,0x2a,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x78,0x20,0x2b,0x20,0x32,
    0x2e,0x30,0x2c,0x20,0x32,0x2e,0x30,0x2c,0x20,0x33,0x32,0x2e,0x30,0x20,0x2a,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x78,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    layout(location = 0) out highp vec4 frag_color;
    in highp vec4 v_Color;
    layout(location = 1) out highp float g_depth;
    layout(location = 2) out highp float pc_depth;
    
    void main()
    {
        frag_color = v_Color;
        pc_depth = gl_FragCoord.z;
        g_depth = gl_FragCoord.z;
    }
    
*/
static const char point_cloud_fs_source_glsl300es[333] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,
    0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x43,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,0x5f,0x64,0x65,0x70,
    0x74,0x68,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x63,0x5f,0x64,0x65,0x70,0x74,
    0x68,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x76,0x5f,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x70,0x63,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    layout(location = 0) in vec2 position;
    out vec2 f_pos;
    
    void main()
    {
        gl_Position = vec4(position, 0.5, 1.0);
        f_pos = position + vec2(0.5);
    }
    
*/
static const char edl_composer_vs_source_glsl300es[169] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,
    0x20,0x66,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x30,
    0x2e,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    const vec2 _273[8] = vec2[](vec2(-1.0), vec2(0.0, -1.0), vec2(1.0, -1.0), vec2(-1.0, 0.0), vec2(1.0, 0.0), vec2(-1.0, 1.0), vec2(0.0, 1.0), vec2(1.0));
    
    uniform highp vec4 window[19];
    uniform highp sampler2D color_hi_res;
    uniform highp sampler2D depth_hi_res;
    uniform highp sampler2D depth_lo_res;
    uniform highp sampler2D uDepth;
    uniform highp sampler2D ssao;
    
    layout(location = 0) out highp vec4 frag_color;
    in highp vec2 f_pos;
    highp mat2 m;
    
    highp float getld(highp float d)
    {
        return ((2.0 * window[0].z) * window[0].w) / ((-(d * 2.0 + (-1.0))) * (window[0].w - window[0].z) + (window[0].w + window[0].z));
    }
    
    highp float hash(highp float n)
    {
        return fract(sin(n) * 93942.234375);
    }
    
    highp float _noise(highp vec2 p)
    {
        highp vec2 _88 = floor(p);
        highp vec2 _91 = fract(p);
        highp vec2 _100 = (_91 * _91) * (vec2(3.0) - (_91 * 2.0));
        highp float _111 = _88.y * 57.0 + _88.x;
        highp float param = _111;
        highp float param_1 = _111 + 1.0;
        highp float param_2 = _111 + 57.0;
        highp float param_3 = _111 + 58.0;
        highp float _135 = _100.x;
        return mix(mix(hash(param), hash(param_1), _135), mix(hash(param_2), hash(param_3), _135), _100.y);
    }
    
    highp float fbm(inout highp vec2 p)
    {
        highp float f = 0.0;
        highp vec2 param = p;
        f = 0.5 * _noise(param) + f;
        p *= (m * 2.019999980926513671875);
        highp vec2 param_1 = p;
        f = 0.25 * _noise(param_1) + f;
        p *= (m * 2.0099999904632568359375);
        highp vec2 param_2 = p;
        f = 0.125 * _noise(param_2) + f;
        p *= (m * 2.0299999713897705078125);
        highp vec2 param_3 = p;
        highp float _190 = f;
        highp float _194 = (0.0625 * _noise(param_3) + _190) * 1.06666672229766845703125;
        f = _194;
        return _194;
    }
    
    highp float random1(highp vec2 uv)
    {
        return fract(sin(dot(uv, vec2(12.9876003265380859375, 78.51200103759765625))) * 12345.6787109375);
    }
    
    highp float random2(highp vec2 uv)
    {
        return fract(cos(dot(uv, vec2(432.12298583984375, 123.67800140380859375))) * 54321.125);
    }
    
    void main()
    {
        m = mat2(vec2(0.60000002384185791015625, 0.800000011920928955078125), vec2(-0.800000011920928955078125, 0.60000002384185791015625));
        highp vec2 _231 = vec2(window[0].x, window[0].y);
        highp vec2 _232 = gl_FragCoord.xy / _231;
        highp vec4 _241 = texture(color_hi_res, _232);
        frag_color = _241;
        highp vec2 _253 = vec2(1.0) / vec2(textureSize(depth_hi_res, 0));
        highp vec2 _260 = vec2(1.0) / vec2(textureSize(depth_lo_res, 0));
        highp vec4 _277 = texture(depth_lo_res, _232);
        highp float _278 = _277.x;
        highp float dmax = _278;
        highp float dmin = _278;
        highp float param = _278;
        highp float _286 = getld(param);
        for (int i = 0; i < 8; i++)
        {
            highp vec4 _309 = texture(depth_lo_res, _273[i] * _260 + _232);
            highp float _310 = _309.x;
            bool _312 = _310 < 1.0;
            bool _323;
            if (_312)
            {
                highp float param_1 = _310;
                _323 = abs(getld(param_1) - _286) < 0.300000011920928955078125;
            }
            else
            {
                _323 = _312;
            }
            if (_323)
            {
                dmax = max(_310, dmax);
                dmin = min(_310, dmin);
            }
        }
        highp float param_2 = dmax;
        dmax = getld(param_2);
        highp float param_3 = dmin;
        highp float _339 = getld(param_3);
        dmin = _339;
        highp float fac = max(0.0, 0.4000000059604644775390625 / (pow(abs(dmax - _339), 0.800000011920928955078125) + 0.4000000059604644775390625));
        highp float dhmin = 1.0;
        for (int i_1 = 0; i_1 < 8; i_1++)
        {
            highp vec4 _373 = texture(depth_hi_res, _273[i_1] * _253 + _232);
            highp float _374 = _373.x;
            if ((_374 > 0.0) && (_374 < 1.0))
            {
                dhmin = min(_374, dhmin);
            }
        }
        highp vec4 _390 = texture(depth_hi_res, _232);
        highp float _391 = _390.x;
        highp float param_4 = _391;
        highp float _395 = getld(param_4);
        highp float param_5 = dhmin;
        highp float _398 = getld(param_5);
        dhmin = _398;
        if (_398 < _395)
        {
            fac *= (1.0 - min((_395 - dhmin) * 2.2000000476837158203125, 1.0));
        }
        highp vec4 _417 = texture(uDepth, _232);
        highp float _418 = _417.x;
        if (_418 < _391)
        {
            fac = 1.0;
        }
        highp float _424 = fac;
        highp float _425 = pow(_424, 0.800000011920928955078125);
        fac = _425;
        frag_color = vec4(_241.xyz * _425, _241.w);
        highp vec4 _441 = texture(ssao, _232);
        highp float _442 = _441.x;
        frag_color = (frag_color * ((-_442) * _425 + 1.0)) + vec4(0.0, 0.0, 0.0, _442 * _425);
        highp vec3 _493 = normalize((mat4(window[5], window[6], window[7], window[8]) * vec4((mat4(window[1], window[2], window[3], window[4]) * vec4(((gl_FragCoord.xy * 2.0) / _231) - vec2(1.0), -1.0, 1.0)).xyz, 0.0)).xyz);
        highp float _496 = _493.z;
        highp float t;
        bool doesIntersect;
        if (_496 != 0.0)
        {
            highp float _506 = (-window[17].z) / _496;
            t = _506;
            doesIntersect = _506 >= 0.0;
        }
        else
        {
            doesIntersect = false;
        }
        highp float ssrweight = 0.0;
        highp vec4 ssrcolor = vec4(0.0);
        highp float below_ground_darken = 1.0;
        highp float shadowfac = 0.0;
        bool _524;
        if (doesIntersect)
        {
            _524 = window[17].z > 0.0;
        }
        else
        {
            _524 = doesIntersect;
        }
        if (_524)
        {
            highp vec3 _534 = window[17].xyz + (_493 * t);
            highp vec3 _539 = _534 - window[17].xyz;
            highp vec3 _540 = normalize(_539);
            highp mat4 _544 = mat4(window[13], window[14], window[15], window[16]);
            highp vec4 _550 = _544 * vec4(_534, 1.0);
            if (((_550 / vec4(_550.w)).z * 0.5 + 0.5) < _418)
            {
                highp float _568 = _540.z;
                below_ground_darken = (-exp(((-60.0) * _568) * _568)) * 0.20000000298023223876953125 + 0.800000011920928955078125;
                ssrweight = exp(((-120.0) * _568) * _568) * 0.4000000059604644775390625 + 0.60000002384185791015625;
                highp vec3 _595 = vec3(_540.xy, -_568);
                int state = 0;
                highp vec2 _615 = (_232 * 5.0) / vec2(length(_539));
                highp vec2 param_6 = _615;
                highp float _624 = fbm(param_6);
                highp vec2 param_7 = _615 + vec2(8.1000003814697265625);
                highp float _634 = fbm(param_7);
                highp vec2 _646 = _615 + (vec2(_624, _634) * 7.0);
                highp vec2 param_8 = _646 + vec2(3.099999904632568359375);
                highp float _651 = fbm(param_8);
                highp vec2 param_9 = _646 + vec2(91.09999847412109375);
                highp float _664 = fbm(param_9);
                highp vec2 param_10 = vec2(_651, _664) * 9.0;
                highp float _676 = fbm(param_10);
                for (highp float rayint = 1.0, s = 0.0500000007450580596923828125; s < 8.0; s *= 1.39999997615814208984375, rayint *= 0.9900000095367431640625)
                {
                    highp vec4 _701 = _544 * vec4(_534 + (_595 * s), 1.0);
                    highp vec4 _706 = _701 / vec4(_701.w);
                    highp vec2 _724 = ((_706.xy * 0.5) + vec2(0.5)) + vec2((_676 - 0.5) * 0.02999999932944774627685546875);
                    highp float _726 = _724.x;
                    bool _727 = _726 >= 1.0;
                    bool _734;
                    if (!_727)
                    {
                        _734 = _724.y >= 1.0;
                    }
                    else
                    {
                        _734 = _727;
                    }
                    bool _741;
                    if (!_734)
                    {
                        _741 = _726 <= 0.0;
                    }
                    else
                    {
                        _741 = _734;
                    }
                    bool _748;
                    if (!_741)
                    {
                        _748 = _724.y <= 0.0;
                    }
                    else
                    {
                        _748 = _741;
                    }
                    if (_748)
                    {
                        break;
                    }
                    if (texture(uDepth, _724).x > (_706.z * 0.5 + 0.5))
                    {
                        ssrcolor = texture(color_hi_res, _724) * rayint;
                        state = 1;
                    }
                    else
                    {
                        if (state == 1)
                        {
                            state = 2;
                        }
                        break;
                    }
                }
                if (state != 2)
                {
                    ssrcolor = vec4(0.0);
                }
                highp vec2 param_11 = gl_FragCoord.xy;
                ssrweight = (ssrweight + (random1(param_11) * 0.4000000059604644775390625 + (-0.20000000298023223876953125))) * 0.660000026226043701171875;
                for (highp float s_1 = 0.00999999977648258209228515625; s_1 < 0.5; s_1 *= 1.2999999523162841796875)
                {
                    highp vec4 _842 = _544 * vec4(_534 + (vec3(0.0, 0.0, 1.0) * s_1), 1.0);
                    highp vec4 _847 = _842 / vec4(_842.w);
                    highp vec2 _864 = ((_847.xy * 0.5) + vec2(0.5)) + vec2((_676 - 0.5) * 0.00999999977648258209228515625);
                    highp vec2 param_12 = gl_FragCoord.xy;
                    highp vec2 param_13 = gl_FragCoord.xy;
                    highp vec4 _888 = texture(uDepth, vec2(_864.x + ((random1(param_12) * 5.0) / window[0].x), _864.y));
                    highp float _889 = _888.x;
                    if (_889 < 1.0)
                    {
                        highp float param_14 = _847.z * 0.5 + 0.5;
                        highp float param_15 = _889;
                        highp float _903 = length(abs(getld(param_14) - getld(param_15)));
                        shadowfac = (((1.0 / (s_1 - 2.0)) + 2.0) * exp(((-(30.0 * random2(param_13) + 30.0)) * _903) * _903)) * 0.0500000007450580596923828125 + shadowfac;
                    }
                }
                shadowfac = clamp(shadowfac, 0.0, 0.300000011920928955078125);
            }
        }
        frag_color = ((((frag_color * below_ground_darken) * (1.0 - ssrweight)) + (ssrcolor * ssrweight)) * (1.0 - shadowfac)) + (vec4(0.0, 0.0, 0.0, 1.0) * shadowfac);
    }
    
*/
static const char edl_composer_fs_source_glsl300es[10130] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x37,0x33,0x5b,0x38,
    0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,0x28,
    0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x2c,
    0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,
    0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,0x31,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,
    0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x77,0x69,0x6e,0x64,0x6f,
    0x77,0x5b,0x31,0x39,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x20,0x64,0x65,0x70,0x74,0x68,0x5f,0x68,0x69,0x5f,0x72,0x65,
    0x73,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x64,0x65,0x70,0x74,0x68,
    0x5f,0x6c,0x6f,0x5f,0x72,0x65,0x73,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x20,0x75,0x44,0x65,0x70,0x74,0x68,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x20,0x73,0x73,0x61,0x6f,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x68,0x69,0x67,
    0x68,0x70,0x20,0x6d,0x61,0x74,0x32,0x20,0x6d,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x20,0x2a,
    0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x77,0x29,0x20,0x2f,0x20,
    0x28,0x28,0x2d,0x28,0x64,0x20,0x2a,0x20,0x32,0x2e,0x30,0x20,0x2b,0x20,0x28,0x2d,
    0x31,0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,
    0x5b,0x30,0x5d,0x2e,0x77,0x20,0x2d,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,
    0x5d,0x2e,0x7a,0x29,0x20,0x2b,0x20,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,
    0x5d,0x2e,0x77,0x20,0x2b,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,
    0x7a,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x68,0x61,0x73,0x68,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x6e,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x66,0x72,0x61,0x63,0x74,0x28,0x73,0x69,0x6e,0x28,0x6e,
    0x29,0x20,0x2a,0x20,0x39,0x33,0x39,0x34,0x32,0x2e,0x32,0x33,0x34,0x33,0x37,0x35,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x32,0x20,0x70,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x38,0x38,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x6f,0x72,0x28,0x70,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x39,0x31,0x20,0x3d,0x20,0x66,0x72,0x61,
    0x63,0x74,0x28,0x70,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x30,0x30,0x20,0x3d,0x20,0x28,0x5f,0x39,
    0x31,0x20,0x2a,0x20,0x5f,0x39,0x31,0x29,0x20,0x2a,0x20,0x28,0x76,0x65,0x63,0x32,
    0x28,0x33,0x2e,0x30,0x29,0x20,0x2d,0x20,0x28,0x5f,0x39,0x31,0x20,0x2a,0x20,0x32,
    0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,0x3d,0x20,0x5f,0x38,0x38,
    0x2e,0x79,0x20,0x2a,0x20,0x35,0x37,0x2e,0x30,0x20,0x2b,0x20,0x5f,0x38,0x38,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x20,
    0x2b,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x35,0x37,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x35,
    0x38,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x33,0x35,0x20,0x3d,0x20,0x5f,0x31,0x30,0x30,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,
    0x69,0x78,0x28,0x6d,0x69,0x78,0x28,0x68,0x61,0x73,0x68,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x29,0x2c,0x20,0x68,0x61,0x73,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x29,0x2c,0x20,0x5f,0x31,0x33,0x35,0x29,0x2c,0x20,0x6d,0x69,0x78,0x28,0x68,0x61,
    0x73,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x2c,0x20,0x68,0x61,0x73,
    0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x2c,0x20,0x5f,0x31,0x33,0x35,
    0x29,0x2c,0x20,0x5f,0x31,0x30,0x30,0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x62,0x6d,0x28,0x69,
    0x6e,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x70,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x66,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x70,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x20,0x3d,0x20,
    0x30,0x2e,0x35,0x20,0x2a,0x20,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x20,0x2b,0x20,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x20,0x2a,
    0x3d,0x20,0x28,0x6d,0x20,0x2a,0x20,0x32,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,0x39,
    0x38,0x30,0x39,0x32,0x36,0x35,0x31,0x33,0x36,0x37,0x31,0x38,0x37,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x70,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x20,0x3d,0x20,0x30,0x2e,0x32,0x35,0x20,0x2a,0x20,0x5f,0x6e,0x6f,0x69,
    0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,0x2b,0x20,0x66,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x70,0x20,0x2a,0x3d,0x20,0x28,0x6d,0x20,0x2a,0x20,0x32,
    0x2e,0x30,0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x30,0x34,0x36,0x33,0x32,0x35,0x36,
    0x38,0x33,0x35,0x39,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x20,0x3d,0x20,0x70,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x20,0x3d,0x20,0x30,0x2e,
    0x31,0x32,0x35,0x20,0x2a,0x20,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x29,0x20,0x2b,0x20,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,
    0x20,0x2a,0x3d,0x20,0x28,0x6d,0x20,0x2a,0x20,0x32,0x2e,0x30,0x32,0x39,0x39,0x39,
    0x39,0x39,0x37,0x31,0x33,0x38,0x39,0x37,0x37,0x30,0x35,0x30,0x37,0x38,0x31,0x32,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x70,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x31,0x39,0x30,0x20,0x3d,0x20,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x39,0x34,0x20,0x3d,
    0x20,0x28,0x30,0x2e,0x30,0x36,0x32,0x35,0x20,0x2a,0x20,0x5f,0x6e,0x6f,0x69,0x73,
    0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x20,0x2b,0x20,0x5f,0x31,0x39,
    0x30,0x29,0x20,0x2a,0x20,0x31,0x2e,0x30,0x36,0x36,0x36,0x36,0x36,0x37,0x32,0x32,
    0x32,0x39,0x37,0x36,0x36,0x38,0x34,0x35,0x37,0x30,0x33,0x31,0x32,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x20,0x3d,0x20,0x5f,0x31,0x39,0x34,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x31,0x39,0x34,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,
    0x6e,0x64,0x6f,0x6d,0x31,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,
    0x20,0x75,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x66,0x72,0x61,0x63,0x74,0x28,0x73,0x69,0x6e,0x28,0x64,0x6f,0x74,0x28,
    0x75,0x76,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x32,0x2e,0x39,0x38,0x37,0x36,
    0x30,0x30,0x33,0x32,0x36,0x35,0x33,0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,0x2c,
    0x20,0x37,0x38,0x2e,0x35,0x31,0x32,0x30,0x30,0x31,0x30,0x33,0x37,0x35,0x39,0x37,
    0x36,0x35,0x36,0x32,0x35,0x29,0x29,0x29,0x20,0x2a,0x20,0x31,0x32,0x33,0x34,0x35,
    0x2e,0x36,0x37,0x38,0x37,0x31,0x30,0x39,0x33,0x37,0x35,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,0x6e,
    0x64,0x6f,0x6d,0x32,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x75,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x66,0x72,0x61,0x63,0x74,0x28,0x63,0x6f,0x73,0x28,0x64,0x6f,0x74,0x28,0x75,
    0x76,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x34,0x33,0x32,0x2e,0x31,0x32,0x32,0x39,
    0x38,0x35,0x38,0x33,0x39,0x38,0x34,0x33,0x37,0x35,0x2c,0x20,0x31,0x32,0x33,0x2e,
    0x36,0x37,0x38,0x30,0x30,0x31,0x34,0x30,0x33,0x38,0x30,0x38,0x35,0x39,0x33,0x37,
    0x35,0x29,0x29,0x29,0x20,0x2a,0x20,0x35,0x34,0x33,0x32,0x31,0x2e,0x31,0x32,0x35,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x20,0x3d,0x20,0x6d,0x61,0x74,0x32,
    0x28,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x36,0x30,0x30,0x30,0x30,0x30,0x30,0x32,
    0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x2c,
    0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,
    0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x2c,0x20,0x76,0x65,
    0x63,0x32,0x28,0x2d,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,
    0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,
    0x30,0x2e,0x36,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,
    0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x33,0x31,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,
    0x5d,0x2e,0x78,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x30,0x5d,0x2e,0x79,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x5f,0x32,0x33,0x32,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x20,0x2f,0x20,0x5f,0x32,0x33,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x32,0x34,0x31,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,0x2c,0x20,0x5f,0x32,0x33,
    0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x34,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x35,0x33,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x20,0x2f,0x20,0x76,0x65,0x63,
    0x32,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,0x64,0x65,
    0x70,0x74,0x68,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,0x2c,0x20,0x30,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x32,0x36,0x30,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,
    0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x53,
    0x69,0x7a,0x65,0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x6c,0x6f,0x5f,0x72,0x65,0x73,
    0x2c,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x37,0x37,0x20,0x3d,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x6c,0x6f,0x5f,0x72,0x65,
    0x73,0x2c,0x20,0x5f,0x32,0x33,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x37,0x38,0x20,0x3d,
    0x20,0x5f,0x32,0x37,0x37,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x6d,0x61,0x78,0x20,0x3d,0x20,
    0x5f,0x32,0x37,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x5f,0x32,0x37,
    0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x32,0x37,0x38,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x32,0x38,0x36,0x20,0x3d,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,
    0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x38,0x3b,
    0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x33,0x30,0x39,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x64,0x65,
    0x70,0x74,0x68,0x5f,0x6c,0x6f,0x5f,0x72,0x65,0x73,0x2c,0x20,0x5f,0x32,0x37,0x33,
    0x5b,0x69,0x5d,0x20,0x2a,0x20,0x5f,0x32,0x36,0x30,0x20,0x2b,0x20,0x5f,0x32,0x33,
    0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x31,0x30,0x20,0x3d,0x20,0x5f,
    0x33,0x30,0x39,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,
    0x6f,0x6f,0x6c,0x20,0x5f,0x33,0x31,0x32,0x20,0x3d,0x20,0x5f,0x33,0x31,0x30,0x20,
    0x3c,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,
    0x6f,0x6f,0x6c,0x20,0x5f,0x33,0x32,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x31,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x33,0x31,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x32,0x33,0x20,0x3d,
    0x20,0x61,0x62,0x73,0x28,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x29,0x20,0x2d,0x20,0x5f,0x32,0x38,0x36,0x29,0x20,0x3c,0x20,0x30,0x2e,
    0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,
    0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x32,0x33,0x20,0x3d,0x20,0x5f,0x33,
    0x31,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x32,0x33,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x6d,0x61,0x78,0x20,0x3d,0x20,0x6d,0x61,0x78,
    0x28,0x5f,0x33,0x31,0x30,0x2c,0x20,0x64,0x6d,0x61,0x78,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x6d,0x69,0x6e,0x20,0x3d,
    0x20,0x6d,0x69,0x6e,0x28,0x5f,0x33,0x31,0x30,0x2c,0x20,0x64,0x6d,0x69,0x6e,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x64,0x6d,0x61,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x6d,0x61,0x78,0x20,0x3d,0x20,0x67,0x65,0x74,
    0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x64,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,
    0x39,0x20,0x3d,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x5f,
    0x33,0x33,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x66,0x61,0x63,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,
    0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x20,
    0x2f,0x20,0x28,0x70,0x6f,0x77,0x28,0x61,0x62,0x73,0x28,0x64,0x6d,0x61,0x78,0x20,
    0x2d,0x20,0x5f,0x33,0x33,0x39,0x29,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,
    0x31,0x32,0x35,0x29,0x20,0x2b,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,
    0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,
    0x32,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x68,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x31,0x2e,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x69,0x5f,0x31,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x5f,0x31,0x20,0x3c,0x20,0x38,
    0x3b,0x20,0x69,0x5f,0x31,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x33,0x37,0x33,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,0x2c,0x20,0x5f,
    0x32,0x37,0x33,0x5b,0x69,0x5f,0x31,0x5d,0x20,0x2a,0x20,0x5f,0x32,0x35,0x33,0x20,
    0x2b,0x20,0x5f,0x32,0x33,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x37,
    0x34,0x20,0x3d,0x20,0x5f,0x33,0x37,0x33,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x33,0x37,0x34,0x20,0x3e,0x20,
    0x30,0x2e,0x30,0x29,0x20,0x26,0x26,0x20,0x28,0x5f,0x33,0x37,0x34,0x20,0x3c,0x20,
    0x31,0x2e,0x30,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x68,0x6d,0x69,
    0x6e,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x33,0x37,0x34,0x2c,0x20,0x64,0x68,
    0x6d,0x69,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x39,0x30,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x64,0x65,0x70,0x74,0x68,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,
    0x2c,0x20,0x5f,0x32,0x33,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x39,0x31,0x20,0x3d,0x20,
    0x5f,0x33,0x39,0x30,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,
    0x3d,0x20,0x5f,0x33,0x39,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x39,0x35,0x20,0x3d,0x20,0x67,
    0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x64,0x68,0x6d,0x69,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x33,0x39,0x38,0x20,0x3d,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x68,0x6d,0x69,0x6e,
    0x20,0x3d,0x20,0x5f,0x33,0x39,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x33,0x39,0x38,0x20,0x3c,0x20,0x5f,0x33,0x39,0x35,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x61,0x63,0x20,
    0x2a,0x3d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x6d,0x69,0x6e,0x28,0x28,0x5f,
    0x33,0x39,0x35,0x20,0x2d,0x20,0x64,0x68,0x6d,0x69,0x6e,0x29,0x20,0x2a,0x20,0x32,
    0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x34,0x37,0x36,0x38,0x33,0x37,0x31,0x35,
    0x38,0x32,0x30,0x33,0x31,0x32,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x34,0x31,0x37,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x5f,0x32,0x33,0x32,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x34,0x31,0x38,0x20,0x3d,0x20,0x5f,0x34,0x31,0x37,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x31,0x38,0x20,0x3c,
    0x20,0x5f,0x33,0x39,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x61,0x63,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x32,0x34,0x20,0x3d,0x20,0x66,0x61,0x63,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x34,0x32,0x35,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x5f,0x34,0x32,
    0x34,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,
    0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x61,0x63,0x20,0x3d,0x20,0x5f,0x34,0x32,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x32,0x34,0x31,0x2e,0x78,0x79,0x7a,0x20,0x2a,
    0x20,0x5f,0x34,0x32,0x35,0x2c,0x20,0x5f,0x32,0x34,0x31,0x2e,0x77,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x34,0x34,0x31,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x73,0x73,
    0x61,0x6f,0x2c,0x20,0x5f,0x32,0x33,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x32,0x20,
    0x3d,0x20,0x5f,0x34,0x34,0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x28,0x28,0x2d,0x5f,0x34,0x34,0x32,
    0x29,0x20,0x2a,0x20,0x5f,0x34,0x32,0x35,0x20,0x2b,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x5f,0x34,0x34,0x32,0x20,0x2a,0x20,0x5f,0x34,
    0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x34,0x39,0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x77,0x69,0x6e,0x64,0x6f,
    0x77,0x5b,0x35,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x36,0x5d,0x2c,
    0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x37,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,
    0x6f,0x77,0x5b,0x38,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x6d,
    0x61,0x74,0x34,0x28,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x5d,0x2c,0x20,0x77,
    0x69,0x6e,0x64,0x6f,0x77,0x5b,0x32,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,
    0x5b,0x33,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x34,0x5d,0x29,0x20,
    0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,
    0x2f,0x20,0x5f,0x32,0x33,0x31,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,
    0x2e,0x30,0x29,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x34,0x39,0x36,0x20,0x3d,0x20,0x5f,0x34,0x39,0x33,0x2e,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x64,0x6f,0x65,
    0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x5f,0x34,0x39,0x36,0x20,0x21,0x3d,0x20,0x30,0x2e,0x30,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x30,0x36,0x20,
    0x3d,0x20,0x28,0x2d,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x37,0x5d,0x2e,0x7a,
    0x29,0x20,0x2f,0x20,0x5f,0x34,0x39,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x74,0x20,0x3d,0x20,0x5f,0x35,0x30,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x64,0x6f,0x65,0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,
    0x74,0x20,0x3d,0x20,0x5f,0x35,0x30,0x36,0x20,0x3e,0x3d,0x20,0x30,0x2e,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x6f,
    0x65,0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x20,0x3d,0x20,0x66,0x61,
    0x6c,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x73,0x72,0x77,0x65,
    0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x73,0x72,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x62,0x65,0x6c,0x6f,0x77,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x64,0x61,
    0x72,0x6b,0x65,0x6e,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x68,0x61,0x64,
    0x6f,0x77,0x66,0x61,0x63,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x35,0x32,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x64,0x6f,0x65,0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,
    0x74,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x35,0x32,0x34,0x20,0x3d,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,
    0x37,0x5d,0x2e,0x7a,0x20,0x3e,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x35,0x32,0x34,0x20,0x3d,0x20,
    0x64,0x6f,0x65,0x73,0x49,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x32,
    0x34,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x33,0x34,
    0x20,0x3d,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x37,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2b,0x20,0x28,0x5f,0x34,0x39,0x33,0x20,0x2a,0x20,0x74,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x35,0x33,0x39,0x20,0x3d,0x20,0x5f,0x35,0x33,0x34,0x20,0x2d,
    0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x37,0x5d,0x2e,0x78,0x79,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x35,0x34,0x30,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x5f,0x35,0x33,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,
    0x35,0x34,0x34,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x77,0x69,0x6e,0x64,0x6f,
    0x77,0x5b,0x31,0x33,0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x34,
    0x5d,0x2c,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x35,0x5d,0x2c,0x20,0x77,
    0x69,0x6e,0x64,0x6f,0x77,0x5b,0x31,0x36,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x35,0x35,0x30,0x20,0x3d,0x20,0x5f,0x35,0x34,0x34,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x5f,0x35,0x33,0x34,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x28,0x5f,0x35,0x35,0x30,
    0x20,0x2f,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x35,0x35,0x30,0x2e,0x77,0x29,0x29,
    0x2e,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,0x35,0x29,0x20,
    0x3c,0x20,0x5f,0x34,0x31,0x38,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x36,0x38,0x20,0x3d,
    0x20,0x5f,0x35,0x34,0x30,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x62,0x65,0x6c,0x6f,0x77,0x5f,0x67,0x72,0x6f,0x75,0x6e,
    0x64,0x5f,0x64,0x61,0x72,0x6b,0x65,0x6e,0x20,0x3d,0x20,0x28,0x2d,0x65,0x78,0x70,
    0x28,0x28,0x28,0x2d,0x36,0x30,0x2e,0x30,0x29,0x20,0x2a,0x20,0x5f,0x35,0x36,0x38,
    0x29,0x20,0x2a,0x20,0x5f,0x35,0x36,0x38,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x32,
    0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,
    0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x20,0x2b,0x20,0x30,0x2e,0x38,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x73,0x73,0x72,0x77,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,
    0x65,0x78,0x70,0x28,0x28,0x28,0x2d,0x31,0x32,0x30,0x2e,0x30,0x29,0x20,0x2a,0x20,
    0x5f,0x35,0x36,0x38,0x29,0x20,0x2a,0x20,0x5f,0x35,0x36,0x38,0x29,0x20,0x2a,0x20,
    0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,
    0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x20,0x2b,0x20,0x30,0x2e,
    0x36,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,
    0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x35,0x39,0x35,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x35,0x34,0x30,
    0x2e,0x78,0x79,0x2c,0x20,0x2d,0x5f,0x35,0x36,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x73,0x74,0x61,
    0x74,0x65,0x20,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,
    0x36,0x31,0x35,0x20,0x3d,0x20,0x28,0x5f,0x32,0x33,0x32,0x20,0x2a,0x20,0x35,0x2e,
    0x30,0x29,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,
    0x28,0x5f,0x35,0x33,0x39,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x36,0x31,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x32,0x34,0x20,0x3d,0x20,0x66,
    0x62,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x36,
    0x31,0x35,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x38,0x2e,0x31,0x30,0x30,0x30,
    0x30,0x30,0x33,0x38,0x31,0x34,0x36,0x39,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x33,0x34,0x20,0x3d,
    0x20,0x66,0x62,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x36,0x34,0x36,0x20,0x3d,0x20,0x5f,0x36,0x31,
    0x35,0x20,0x2b,0x20,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x36,0x32,0x34,0x2c,0x20,
    0x5f,0x36,0x33,0x34,0x29,0x20,0x2a,0x20,0x37,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,
    0x36,0x34,0x36,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x33,0x2e,0x30,0x39,0x39,
    0x39,0x39,0x39,0x39,0x30,0x34,0x36,0x33,0x32,0x35,0x36,0x38,0x33,0x35,0x39,0x33,
    0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x35,
    0x31,0x20,0x3d,0x20,0x66,0x62,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,
    0x20,0x3d,0x20,0x5f,0x36,0x34,0x36,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x39,
    0x31,0x2e,0x30,0x39,0x39,0x39,0x39,0x38,0x34,0x37,0x34,0x31,0x32,0x31,0x30,0x39,
    0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,
    0x36,0x34,0x20,0x3d,0x20,0x66,0x62,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x30,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x36,0x35,0x31,0x2c,0x20,
    0x5f,0x36,0x36,0x34,0x29,0x20,0x2a,0x20,0x39,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x37,0x36,0x20,0x3d,0x20,0x66,0x62,0x6d,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,0x79,0x69,0x6e,0x74,0x20,0x3d,
    0x20,0x31,0x2e,0x30,0x2c,0x20,0x73,0x20,0x3d,0x20,0x30,0x2e,0x30,0x35,0x30,0x30,
    0x30,0x30,0x30,0x30,0x30,0x37,0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,
    0x32,0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x3b,0x20,0x73,0x20,0x3c,0x20,0x38,0x2e,
    0x30,0x3b,0x20,0x73,0x20,0x2a,0x3d,0x20,0x31,0x2e,0x33,0x39,0x39,0x39,0x39,0x39,
    0x39,0x37,0x36,0x31,0x35,0x38,0x31,0x34,0x32,0x30,0x38,0x39,0x38,0x34,0x33,0x37,
    0x35,0x2c,0x20,0x72,0x61,0x79,0x69,0x6e,0x74,0x20,0x2a,0x3d,0x20,0x30,0x2e,0x39,
    0x39,0x30,0x30,0x30,0x30,0x30,0x30,0x39,0x35,0x33,0x36,0x37,0x34,0x33,0x31,0x36,
    0x34,0x30,0x36,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x37,0x30,0x31,0x20,0x3d,0x20,0x5f,0x35,0x34,0x34,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x5f,0x35,0x33,0x34,0x20,0x2b,0x20,0x28,0x5f,0x35,0x39,0x35,0x20,
    0x2a,0x20,0x73,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x37,0x30,0x36,0x20,0x3d,0x20,0x5f,0x37,
    0x30,0x31,0x20,0x2f,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x37,0x30,0x31,0x2e,0x77,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x37,
    0x32,0x34,0x20,0x3d,0x20,0x28,0x28,0x5f,0x37,0x30,0x36,0x2e,0x78,0x79,0x20,0x2a,
    0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x35,
    0x29,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x28,0x5f,0x36,0x37,0x36,0x20,
    0x2d,0x20,0x30,0x2e,0x35,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x32,0x39,0x39,0x39,
    0x39,0x39,0x39,0x39,0x33,0x32,0x39,0x34,0x34,0x37,0x37,0x34,0x36,0x32,0x37,0x36,
    0x38,0x35,0x35,0x34,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x32,0x36,0x20,0x3d,0x20,0x5f,0x37,
    0x32,0x34,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x37,0x32,0x37,0x20,
    0x3d,0x20,0x5f,0x37,0x32,0x36,0x20,0x3e,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,
    0x6f,0x6f,0x6c,0x20,0x5f,0x37,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,
    0x37,0x32,0x37,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x33,0x34,0x20,
    0x3d,0x20,0x5f,0x37,0x32,0x34,0x2e,0x79,0x20,0x3e,0x3d,0x20,0x31,0x2e,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,
    0x33,0x34,0x20,0x3d,0x20,0x5f,0x37,0x32,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,
    0x6c,0x20,0x5f,0x37,0x34,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x37,0x33,
    0x34,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x34,0x31,0x20,0x3d,0x20,
    0x5f,0x37,0x32,0x36,0x20,0x3c,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,
    0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x34,0x31,0x20,0x3d,
    0x20,0x5f,0x37,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x37,
    0x34,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x5f,0x37,0x34,0x31,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x34,0x38,0x20,0x3d,0x20,0x5f,0x37,0x32,0x34,
    0x2e,0x79,0x20,0x3c,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,
    0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x34,0x38,0x20,0x3d,0x20,0x5f,
    0x37,0x34,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x37,0x34,0x38,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x72,0x65,0x61,0x6b,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x75,0x44,0x65,0x70,
    0x74,0x68,0x2c,0x20,0x5f,0x37,0x32,0x34,0x29,0x2e,0x78,0x20,0x3e,0x20,0x28,0x5f,
    0x37,0x30,0x36,0x2e,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,
    0x35,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x73,0x72,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x68,0x69,0x5f,0x72,0x65,0x73,0x2c,0x20,0x5f,0x37,0x32,0x34,0x29,
    0x20,0x2a,0x20,0x72,0x61,0x79,0x69,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,
    0x74,0x61,0x74,0x65,0x20,0x3d,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x73,0x74,0x61,0x74,0x65,
    0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x3d,0x20,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x72,0x65,0x61,0x6b,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x73,0x74,0x61,0x74,0x65,0x20,0x21,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x73,0x72,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,
    0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x73,
    0x72,0x77,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x28,0x73,0x73,0x72,0x77,0x65,
    0x69,0x67,0x68,0x74,0x20,0x2b,0x20,0x28,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x31,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x20,0x2a,0x20,0x30,0x2e,0x34,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,
    0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x20,0x2b,0x20,0x28,0x2d,0x30,0x2e,0x32,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,
    0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x29,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,
    0x36,0x36,0x30,0x30,0x30,0x30,0x30,0x32,0x36,0x32,0x32,0x36,0x30,0x34,0x33,0x37,
    0x30,0x31,0x31,0x37,0x31,0x38,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x5f,0x31,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,0x32,0x35,0x38,
    0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x3b,0x20,0x73,0x5f,
    0x31,0x20,0x3c,0x20,0x30,0x2e,0x35,0x3b,0x20,0x73,0x5f,0x31,0x20,0x2a,0x3d,0x20,
    0x31,0x2e,0x32,0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x32,0x33,0x31,0x36,0x32,0x38,
    0x34,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x38,0x34,0x32,0x20,0x3d,0x20,0x5f,0x35,0x34,0x34,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x35,0x33,0x34,0x20,0x2b,0x20,0x28,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x20,0x2a,0x20,0x73,0x5f,0x31,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x38,0x34,0x37,0x20,
    0x3d,0x20,0x5f,0x38,0x34,0x32,0x20,0x2f,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x38,
    0x34,0x32,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x5f,0x38,0x36,0x34,0x20,0x3d,0x20,0x28,0x28,0x5f,0x38,0x34,0x37,0x2e,
    0x78,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,
    0x28,0x30,0x2e,0x35,0x29,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x28,0x5f,
    0x36,0x37,0x36,0x20,0x2d,0x20,0x30,0x2e,0x35,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,
    0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,0x32,0x35,0x38,
    0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x32,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,
    0x64,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x33,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,
    0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x38,0x38,0x38,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x76,
    0x65,0x63,0x32,0x28,0x5f,0x38,0x36,0x34,0x2e,0x78,0x20,0x2b,0x20,0x28,0x28,0x72,
    0x61,0x6e,0x64,0x6f,0x6d,0x31,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x32,0x29,
    0x20,0x2a,0x20,0x35,0x2e,0x30,0x29,0x20,0x2f,0x20,0x77,0x69,0x6e,0x64,0x6f,0x77,
    0x5b,0x30,0x5d,0x2e,0x78,0x29,0x2c,0x20,0x5f,0x38,0x36,0x34,0x2e,0x79,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,
    0x38,0x39,0x20,0x3d,0x20,0x5f,0x38,0x38,0x38,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x38,0x38,0x39,0x20,0x3c,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x34,0x20,0x3d,0x20,0x5f,0x38,0x34,0x37,0x2e,0x7a,
    0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x35,0x20,0x3d,0x20,0x5f,0x38,0x38,0x39,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x39,0x30,0x33,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x61,0x62,0x73,
    0x28,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x34,0x29,
    0x20,0x2d,0x20,0x67,0x65,0x74,0x6c,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x35,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x66,0x61,0x63,0x20,0x3d,0x20,0x28,0x28,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,
    0x73,0x5f,0x31,0x20,0x2d,0x20,0x32,0x2e,0x30,0x29,0x29,0x20,0x2b,0x20,0x32,0x2e,
    0x30,0x29,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x28,0x28,0x2d,0x28,0x33,0x30,0x2e,
    0x30,0x20,0x2a,0x20,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x32,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x33,0x29,0x20,0x2b,0x20,0x33,0x30,0x2e,0x30,0x29,0x29,0x20,0x2a,
    0x20,0x5f,0x39,0x30,0x33,0x29,0x20,0x2a,0x20,0x5f,0x39,0x30,0x33,0x29,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x37,0x34,0x35,
    0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,0x38,0x32,0x38,0x31,0x32,0x35,
    0x20,0x2b,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x66,0x61,0x63,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x66,0x61,0x63,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x73,0x68,0x61,0x64,
    0x6f,0x77,0x66,0x61,0x63,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x33,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x28,0x28,0x28,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x62,0x65,0x6c,0x6f,0x77,
    0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x64,0x61,0x72,0x6b,0x65,0x6e,0x29,0x20,
    0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x73,0x72,0x77,0x65,0x69,0x67,
    0x68,0x74,0x29,0x29,0x20,0x2b,0x20,0x28,0x73,0x73,0x72,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x2a,0x20,0x73,0x73,0x72,0x77,0x65,0x69,0x67,0x68,0x74,0x29,0x29,0x20,0x2a,
    0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x66,0x61,
    0x63,0x29,0x29,0x20,0x2b,0x20,0x28,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x20,
    0x2a,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x66,0x61,0x63,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before point_cloud_simple.h"
#endif
static inline const sg_shader_desc* edl_composer_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.vs.source = edl_composer_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = edl_composer_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 304;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "window";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 19;
      desc.fs.images[0].name = "color_hi_res";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "depth_hi_res";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[2].name = "depth_lo_res";
      desc.fs.images[2].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[2].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[3].name = "uDepth";
      desc.fs.images[3].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[3].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[4].name = "ssao";
      desc.fs.images[4].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[4].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "edl_composer_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* pc_depth_only_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "size";
      desc.vs.source = point_cloud_vs_shadow_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 80;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 5;
      desc.fs.source = point_cloud_fs_onlyDepth_source_glsl300es;
      desc.fs.entry = "main";
      desc.label = "pc_depth_only_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* point_cloud_simple_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "size";
      desc.attrs[2].name = "color";
      desc.vs.source = point_cloud_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 80;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 5;
      desc.fs.source = point_cloud_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.label = "point_cloud_simple_shader";
    }
    return &desc;
  }
  return 0;
}
