#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input gltf.glsl --output gltf.h --slang glsl300es

    Overview:

        Shader program 'gltf':
            Get shader desc: gltf_shader_desc(sg_query_backend());
            Vertex shader: gltf_vs
                Attribute slots:
                    ATTR_gltf_vs_instance_id = 0
                    ATTR_gltf_vs_position = 1
                    ATTR_gltf_vs_normal = 2
                    ATTR_gltf_vs_color0 = 3
                    ATTR_gltf_vs_node_id = 4
                Uniform block 'gltf_mats':
                    C struct: gltf_mats_t
                    Bind slot: SLOT_gltf_mats = 0
                Image 'NImodelViewMatrix':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_NImodelViewMatrix = 0
                Image 'NInormalMatrix':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_NInormalMatrix = 1
            Fragment shader: gltf_fs
                Uniform block 'gltf_mats':
                    C struct: gltf_mats_t
                    Bind slot: SLOT_gltf_mats = 0

        Shader program 'gltf_depth_only':
            Get shader desc: gltf_depth_only_shader_desc(sg_query_backend());
            Vertex shader: vs_depth
                Attribute slots:
                    ATTR_vs_depth_instance_id = 0
                    ATTR_vs_depth_position = 1
                    ATTR_vs_depth_node_id = 2
                Uniform block 'gltf_mats':
                    C struct: gltf_mats_t
                    Bind slot: SLOT_gltf_mats = 0
                Image 'NImodelViewMatrix':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_NImodelViewMatrix = 0
            Fragment shader: fs_depth

        Shader program 'gltf_ground':
            Get shader desc: gltf_ground_shader_desc(sg_query_backend());
            Vertex shader: vs_ground
                Attribute slots:
                    ATTR_vs_ground_x_y_radius = 0
                    ATTR_vs_ground_position = 1
                Uniform block 'gltf_ground_mats':
                    C struct: gltf_ground_mats_t
                    Bind slot: SLOT_gltf_ground_mats = 0
            Fragment shader: fs_ground

        Shader program 'ssao':
            Get shader desc: ssao_shader_desc(sg_query_backend());
            Vertex shader: blending_quad
                Attribute slots:
                    ATTR_blending_quad_pos = 0
            Fragment shader: ssao_fs
                Uniform block 'SSAOUniforms':
                    C struct: SSAOUniforms_t
                    Bind slot: SLOT_SSAOUniforms = 0
                Image 'uDepth':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_uDepth = 0
                Image 'uNormalBuffer':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_uNormalBuffer = 1


    Shader descriptor structs:

        sg_shader gltf = sg_make_shader(gltf_shader_desc(sg_query_backend()));
        sg_shader gltf_depth_only = sg_make_shader(gltf_depth_only_shader_desc(sg_query_backend()));
        sg_shader gltf_ground = sg_make_shader(gltf_ground_shader_desc(sg_query_backend()));
        sg_shader ssao = sg_make_shader(ssao_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'vs_ground':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_ground_x_y_radius] = { ... },
                    [ATTR_vs_ground_position] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'vs_depth':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_depth_instance_id] = { ... },
                    [ATTR_vs_depth_position] = { ... },
                    [ATTR_vs_depth_node_id] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'gltf_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_gltf_vs_instance_id] = { ... },
                    [ATTR_gltf_vs_position] = { ... },
                    [ATTR_gltf_vs_normal] = { ... },
                    [ATTR_gltf_vs_color0] = { ... },
                    [ATTR_gltf_vs_node_id] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'blending_quad':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_blending_quad_pos] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_NImodelViewMatrix = 0;
        SLOT_NInormalMatrix = 1;
        SLOT_uDepth = 0;
        SLOT_uNormalBuffer = 1;

    Bind slot and C-struct for uniform block 'gltf_ground_mats':

        gltf_ground_mats_t gltf_ground_mats = {
            .pv = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_gltf_ground_mats, &SG_RANGE(gltf_ground_mats));

    Bind slot and C-struct for uniform block 'gltf_mats':

        gltf_mats_t gltf_mats = {
            .projectionMatrix = ...;
            .viewMatrix = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_gltf_mats, &SG_RANGE(gltf_mats));

    Bind slot and C-struct for uniform block 'SSAOUniforms':

        SSAOUniforms_t SSAOUniforms = {
            .P = ...;
            .iP = ...;
            .iV = ...;
            .cP = ...;
            .uSampleRadius = ...;
            .uBias = ...;
            .uAttenuation = ...;
            .uDepthRange = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_SSAOUniforms, &SG_RANGE(SSAOUniforms));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_vs_ground_x_y_radius (0)
#define ATTR_vs_ground_position (1)
#define ATTR_vs_depth_instance_id (0)
#define ATTR_vs_depth_position (1)
#define ATTR_vs_depth_node_id (2)
#define ATTR_gltf_vs_instance_id (0)
#define ATTR_gltf_vs_position (1)
#define ATTR_gltf_vs_normal (2)
#define ATTR_gltf_vs_color0 (3)
#define ATTR_gltf_vs_node_id (4)
#define ATTR_blending_quad_pos (0)
#define SLOT_NImodelViewMatrix (0)
#define SLOT_NInormalMatrix (1)
#define SLOT_uDepth (0)
#define SLOT_uNormalBuffer (1)
#define SLOT_gltf_ground_mats (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct gltf_ground_mats_t {
    glm::mat4 pv;
} gltf_ground_mats_t;
#pragma pack(pop)
#define SLOT_gltf_mats (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct gltf_mats_t {
    glm::mat4 projectionMatrix;
    glm::mat4 viewMatrix;
} gltf_mats_t;
#pragma pack(pop)
#define SLOT_SSAOUniforms (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct SSAOUniforms_t {
    glm::mat4 P;
    glm::mat4 iP;
    glm::mat4 iV;
    glm::vec3 cP;
    float uSampleRadius;
    float uBias;
    uint8_t _pad_212[4];
    float uAttenuation[2];
    float uDepthRange[2];
    uint8_t _pad_232[8];
} SSAOUniforms_t;
#pragma pack(pop)
/*
    #version 300 es
    
    uniform vec4 gltf_ground_mats[4];
    layout(location = 0) in vec3 x_y_radius;
    layout(location = 1) in vec2 position;
    out vec2 vpos;
    
    void main()
    {
        gl_Position = mat4(gltf_ground_mats[0], gltf_ground_mats[1], gltf_ground_mats[2], gltf_ground_mats[3]) * vec4(position.x * x_y_radius.z + x_y_radius.x, position.y * x_y_radius.z + x_y_radius.y, 0.0, 1.0);
        vpos = position;
    }
    
*/
static const char vs_ground_source_glsl300es[395] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x6c,
    0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x34,
    0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,
    0x78,0x5f,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x70,0x6f,0x73,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,
    0x75,0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x67,0x6c,0x74,
    0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x31,0x5d,
    0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x6d,0x61,
    0x74,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,
    0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x20,0x2a,0x20,
    0x78,0x5f,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2e,0x7a,0x20,0x2b,0x20,0x78,
    0x5f,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2e,0x78,0x2c,0x20,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2e,0x79,0x20,0x2a,0x20,0x78,0x5f,0x79,0x5f,0x72,0x61,
    0x64,0x69,0x75,0x73,0x2e,0x7a,0x20,0x2b,0x20,0x78,0x5f,0x79,0x5f,0x72,0x61,0x64,
    0x69,0x75,0x73,0x2e,0x79,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x70,0x6f,0x73,0x20,0x3d,0x20,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    in highp vec2 vpos;
    layout(location = 0) out highp vec4 frag_color;
    
    void main()
    {
        frag_color = vec4(1.0, 0.949999988079071044921875, 0.89999997615814208984375, 0.20000000298023223876953125 - exp((length(vpos) - 0.800000011920928955078125) * 10.0));
    }
    
*/
static const char fs_ground_source_glsl300es[321] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x69,
    0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x70,0x6f,
    0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x39,
    0x34,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,
    0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x2c,0x20,0x30,0x2e,0x38,0x39,0x39,0x39,0x39,
    0x39,0x39,0x37,0x36,0x31,0x35,0x38,0x31,0x34,0x32,0x30,0x38,0x39,0x38,0x34,0x33,
    0x37,0x35,0x2c,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,
    0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,
    0x20,0x2d,0x20,0x65,0x78,0x70,0x28,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x76,
    0x70,0x6f,0x73,0x29,0x20,0x2d,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,
    0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,
    0x35,0x29,0x20,0x2a,0x20,0x31,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 300 es
    
    uniform vec4 gltf_mats[8];
    uniform highp sampler2D NImodelViewMatrix;
    
    layout(location = 0) in int instance_id;
    layout(location = 2) in int node_id;
    layout(location = 1) in vec3 position;
    
    void main()
    {
        int _23 = instance_id * 4;
        gl_Position = (mat4(gltf_mats[0], gltf_mats[1], gltf_mats[2], gltf_mats[3]) * mat4(texelFetch(NImodelViewMatrix, ivec2(_23, node_id), 0), texelFetch(NImodelViewMatrix, ivec2(_23 + 1, node_id), 0), texelFetch(NImodelViewMatrix, ivec2(_23 + 2, node_id), 0), texelFetch(NImodelViewMatrix, ivec2(_23 + 3, node_id), 0))) * vec4(position, 1.0);
    }
    
*/
static const char vs_depth_source_glsl300es[598] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x6c,
    0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,
    0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,
    0x69,0x6e,0x74,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x69,0x64,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,0x6e,0x6f,0x64,
    0x65,0x5f,0x69,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x20,0x3d,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,
    0x63,0x65,0x5f,0x69,0x64,0x20,0x2a,0x20,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,
    0x74,0x34,0x28,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x30,0x5d,0x2c,
    0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x67,
    0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x67,0x6c,0x74,
    0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,
    0x34,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,
    0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,
    0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x33,0x2c,0x20,0x6e,0x6f,0x64,0x65,0x5f,
    0x69,0x64,0x29,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,
    0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,
    0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x33,
    0x20,0x2b,0x20,0x31,0x2c,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x29,0x2c,0x20,
    0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,
    0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,
    0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x33,0x20,0x2b,0x20,0x32,0x2c,
    0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x29,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,
    0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,0x65,
    0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x69,0x76,0x65,
    0x63,0x32,0x28,0x5f,0x32,0x33,0x20,0x2b,0x20,0x33,0x2c,0x20,0x6e,0x6f,0x64,0x65,
    0x5f,0x69,0x64,0x29,0x2c,0x20,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    layout(location = 0) out highp float g_depth;
    
    void main()
    {
        g_depth = gl_FragDepth;
    }
    
*/
static const char fs_depth_source_glsl300es[156] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,
    0x67,0x44,0x65,0x70,0x74,0x68,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 gltf_mats[8];
    uniform highp sampler2D NImodelViewMatrix;
    uniform highp sampler2D NInormalMatrix;
    
    layout(location = 0) in int instance_id;
    layout(location = 4) in int node_id;
    layout(location = 1) in vec3 position;
    out vec3 vNormal;
    layout(location = 2) in vec3 normal;
    out vec3 vertPos;
    out vec3 vTexCoord3D;
    out vec4 color;
    layout(location = 3) in vec4 color0;
    
    void main()
    {
        int _23 = instance_id * 4;
        ivec2 _29 = ivec2(_23, node_id);
        ivec2 _38 = ivec2(_23 + 1, node_id);
        ivec2 _47 = ivec2(_23 + 2, node_id);
        mat4 _81 = mat4(texelFetch(NImodelViewMatrix, _29, 0), texelFetch(NImodelViewMatrix, _38, 0), texelFetch(NImodelViewMatrix, _47, 0), texelFetch(NImodelViewMatrix, ivec2(_23 + 3, node_id), 0));
        vec4 _136 = vec4(position, 1.0);
        vec4 _137 = _81 * _136;
        vNormal = normalize(mat3(vec3(texelFetch(NInormalMatrix, _29, 0).xyz), vec3(texelFetch(NInormalMatrix, _38, 0).xyz), vec3(texelFetch(NInormalMatrix, _47, 0).xyz)) * normal);
        vertPos = _137.xyz / vec3(_137.w);
        vTexCoord3D = (position + vec3(0.0, 1.0, 1.0)) * 0.100000001490116119384765625;
        gl_Position = (mat4(gltf_mats[0], gltf_mats[1], gltf_mats[2], gltf_mats[3]) * _81) * _136;
        color = vec4(0.60000002384185791015625, 0.60000002384185791015625, 0.60000002384185791015625, 1.0) + (color0 * 0.4000000059604644775390625);
    }
    
*/
static const char gltf_vs_source_glsl300es[1365] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x6c,
    0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,
    0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4e,
    0x49,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,0x69,0x6e,0x73,0x74,
    0x61,0x6e,0x63,0x65,0x5f,0x69,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,
    0x20,0x69,0x6e,0x74,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x50,0x6f,0x73,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x33,0x44,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x32,0x33,0x20,0x3d,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x69,
    0x64,0x20,0x2a,0x20,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,
    0x20,0x5f,0x32,0x39,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x33,
    0x2c,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,
    0x32,0x28,0x5f,0x32,0x33,0x20,0x2b,0x20,0x31,0x2c,0x20,0x6e,0x6f,0x64,0x65,0x5f,
    0x69,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x5f,
    0x34,0x37,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x33,0x20,0x2b,
    0x20,0x32,0x2c,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x38,0x31,0x20,0x3d,0x20,0x6d,0x61,0x74,
    0x34,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,
    0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,
    0x5f,0x32,0x39,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,
    0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,
    0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,0x33,0x38,0x2c,0x20,0x30,0x29,0x2c,0x20,
    0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,
    0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,0x34,
    0x37,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,
    0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,
    0x72,0x69,0x78,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x33,0x20,0x2b,
    0x20,0x33,0x2c,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x29,0x2c,0x20,0x30,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x33,0x36,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x31,0x33,0x37,0x20,0x3d,0x20,0x5f,0x38,0x31,0x20,0x2a,0x20,0x5f,0x31,
    0x33,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6d,0x61,0x74,0x33,
    0x28,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,
    0x28,0x4e,0x49,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,
    0x20,0x5f,0x32,0x39,0x2c,0x20,0x30,0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,
    0x49,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,
    0x33,0x38,0x2c,0x20,0x30,0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,0x34,0x37,
    0x2c,0x20,0x30,0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x50,0x6f,
    0x73,0x20,0x3d,0x20,0x5f,0x31,0x33,0x37,0x2e,0x78,0x79,0x7a,0x20,0x2f,0x20,0x76,
    0x65,0x63,0x33,0x28,0x5f,0x31,0x33,0x37,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x33,0x44,0x20,0x3d,0x20,0x28,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,
    0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,
    0x74,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,
    0x5b,0x31,0x5d,0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x33,0x5d,0x29,
    0x20,0x2a,0x20,0x5f,0x38,0x31,0x29,0x20,0x2a,0x20,0x5f,0x31,0x33,0x36,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x30,0x2e,0x36,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,
    0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x36,0x30,
    0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,
    0x31,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x36,0x30,0x30,0x30,0x30,0x30,0x30,
    0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x20,0x2b,0x20,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x30,
    0x20,0x2a,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,
    0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 gltf_mats[8];
    in highp vec3 vTexCoord3D;
    in highp vec4 color;
    in highp vec3 vNormal;
    in highp vec3 vertPos;
    layout(location = 0) out highp vec4 frag_color;
    layout(location = 1) out highp float g_depth;
    layout(location = 2) out highp vec4 out_normal;
    
    highp vec4 permute(highp vec4 x)
    {
        return mod(((x * 34.0) + vec4(1.0)) * x, vec4(289.0));
    }
    
    highp vec4 taylorInvSqrt(highp vec4 r)
    {
        return vec4(1.792842864990234375) - (r * 0.8537347316741943359375);
    }
    
    highp float snoise(highp vec3 v)
    {
        highp vec3 _56 = floor(v + vec3(dot(v, vec3(0.3333333432674407958984375))));
        highp vec3 _66 = (v - _56) + vec3(dot(_56, vec3(0.16666667163372039794921875)));
        highp vec3 _71 = step(_66.yzx, _66);
        highp vec3 _79 = (vec3(1.0) - _71).zxy;
        highp vec3 _80 = min(_71, _79);
        highp vec3 _85 = max(_71, _79);
        highp vec3 _90 = (_66 - _80) + vec3(0.16666667163372039794921875);
        highp vec3 _95 = (_66 - _85) + vec3(0.3333333432674407958984375);
        highp vec3 _102 = _66 + vec3(-0.5);
        highp vec3 _105 = mod(_56, vec3(289.0));
        highp vec4 param = vec4(_105.z) + vec4(0.0, _80.z, _85.z, 1.0);
        highp vec4 param_1 = (permute(param) + vec4(_105.y)) + vec4(0.0, _80.y, _85.y, 1.0);
        highp vec4 param_2 = (permute(param_1) + vec4(_105.x)) + vec4(0.0, _80.x, _85.x, 1.0);
        highp vec4 _147 = permute(param_2);
        highp vec4 _169 = _147 - (floor((_147 * 0.14285714924335479736328125) * 0.14285714924335479736328125) * 49.0);
        highp vec4 _175 = floor(_169 * 0.14285714924335479736328125);
        highp vec4 _190 = (_175 * 0.2857142984867095947265625) + vec4(-0.928571403026580810546875);
        highp vec4 _198 = (floor(_169 - (_175 * 7.0)) * 0.2857142984867095947265625) + vec4(-0.928571403026580810546875);
        highp vec4 _206 = (vec4(1.0) - abs(_190)) - abs(_198);
        highp vec4 _217 = vec4(_190.xy, _198.xy);
        highp vec4 _227 = vec4(_190.zw, _198.zw);
        highp vec4 _244 = -step(_206, vec4(0.0));
        highp vec4 _253 = ((floor(_217) * 2.0) + vec4(1.0)).xzyw * _244.xxyy + _217.xzyw;
        highp vec4 _262 = ((floor(_227) * 2.0) + vec4(1.0)).xzyw * _244.zzww + _227.xzyw;
        highp vec3 _270 = vec3(_253.xy, _206.x);
        highp vec3 p0 = _270;
        highp vec3 _278 = vec3(_253.zw, _206.y);
        highp vec3 p1 = _278;
        highp vec3 _286 = vec3(_262.xy, _206.z);
        highp vec3 p2 = _286;
        highp vec3 _295 = vec3(_262.zw, _206.w);
        highp vec3 p3 = _295;
        highp vec4 param_3 = vec4(dot(_270, _270), dot(_278, _278), dot(_286, _286), dot(_295, _295));
        highp vec4 _311 = taylorInvSqrt(param_3);
        highp vec3 _314 = p0;
        highp vec3 _315 = _314 * _311.x;
        p0 = _315;
        highp vec3 _318 = p1;
        highp vec3 _319 = _318 * _311.y;
        p1 = _319;
        highp vec3 _322 = p2;
        highp vec3 _323 = _322 * _311.z;
        p2 = _323;
        highp vec3 _326 = p3;
        highp vec3 _327 = _326 * _311.w;
        p3 = _327;
        highp vec4 _346 = max(vec4(0.60000002384185791015625) - vec4(dot(_66, _66), dot(_90, _90), dot(_95, _95), dot(_102, _102)), vec4(0.0));
        highp vec4 _349 = _346 * _346;
        return 42.0 * dot(_349 * _349, vec4(dot(_315, _66), dot(_319, _90), dot(_323, _95), dot(_327, _102)));
    }
    
    highp float heightMap(highp vec3 coord)
    {
        highp vec3 param = coord;
        highp float n = abs(snoise(param));
        highp vec3 param_1 = coord * 2.0;
        n = 0.25 * abs(snoise(param_1)) + n;
        highp vec3 param_2 = coord * 4.0;
        n = 0.25 * abs(snoise(param_2)) + n;
        highp vec3 param_3 = coord * 8.0;
        n = 0.125 * abs(snoise(param_3)) + n;
        highp vec3 param_4 = coord * 16.0;
        highp float _412 = n;
        highp float _413 = 0.0625 * abs(snoise(param_4)) + _412;
        n = _413;
        return _413;
    }
    
    void main()
    {
        highp vec3 param = vTexCoord3D;
        highp float _422 = heightMap(param);
        highp float _639 = -_422;
        highp vec3 param_1 = vTexCoord3D + vec3(0.20000000298023223876953125, 0.0, 0.0);
        highp float _457 = heightMap(param_1);
        highp vec3 param_2 = vTexCoord3D + vec3(0.0, 0.20000000298023223876953125, 0.0);
        highp float _463 = heightMap(param_2);
        highp vec3 param_3 = vTexCoord3D + vec3(0.0, 0.0, 0.20000000298023223876953125);
        highp float _469 = heightMap(param_3);
        highp vec3 _488 = normalize((-(vec3(_422 * 0.100000001490116119384765625 + (-_457), _422 * 0.100000001490116119384765625 + (-_463), _422 * 0.100000001490116119384765625 + (-_469)) * 0.004999999888241291046142578125)) * vec3(5.0) + vNormal);
        highp mat4 _501 = mat4(gltf_mats[4], gltf_mats[5], gltf_mats[6], gltf_mats[7]);
        highp vec3 _514 = normalize(normalize((_501 * vec4(0.300000011920928955078125, 0.300000011920928955078125, 1.0, 0.0)) + vec4(-3.0, 3.0, 10.0, 0.0)).xyz);
        highp vec3 vLightWeighting = vec3(0.0599999986588954925537109375) + (vec3(1.0) * clamp(dot(_488, _514) * 0.5 + 0.5, 0.0, 1.5));
        highp vec3 _555 = normalize(vertPos);
        highp float _561 = dot(_488, normalize(_514 - _555));
        highp float dirSpecularWeight = 0.0;
        if (_561 >= 0.0)
        {
            dirSpecularWeight = pow(_561, 160.0);
        }
        highp vec3 _592 = vLightWeighting;
        highp vec3 _593 = _592 + (((vec3(0.5) + vec3(_457, _463, _469)) * (dirSpecularWeight + pow(1.0 - abs(dot(_488, _555)), 15.0))) * 0.699999988079071044921875);
        vLightWeighting = _593;
        frag_color = vec4((color.xyz * vec3(_639 * 0.0300000011920928955078125 + color.x, _639 * 0.0400000028312206268310546875 + color.y, _639 * 0.080000005662441253662109375 + color.z)) * _593 + (vec3(1.0, 0.0, 1.0) * clamp((dot(_488, normalize((_501 * vec4(0.0, 0.0, -1.0, 0.0)).xyz)) * clamp(exp(-vertPos.y), 0.0, 1.0)) * 0.100000001490116119384765625, 0.0, 1.0)), 1.0);
        g_depth = gl_FragCoord.z;
        out_normal = vec4(vNormal, 1.0);
    }
    
*/
static const char gltf_fs_source_glsl300es[5733] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x38,0x5d,0x3b,0x0a,
    0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x54,
    0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x33,0x44,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x6f,0x75,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x65,0x72,0x6d,0x75,0x74,0x65,0x28,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x78,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x6f,0x64,0x28,0x28,
    0x28,0x78,0x20,0x2a,0x20,0x33,0x34,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,
    0x34,0x28,0x31,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x78,0x2c,0x20,0x76,0x65,0x63,
    0x34,0x28,0x32,0x38,0x39,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x74,0x61,0x79,0x6c,0x6f,0x72,0x49,
    0x6e,0x76,0x53,0x71,0x72,0x74,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x37,0x39,0x32,0x38,0x34,0x32,0x38,
    0x36,0x34,0x39,0x39,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x29,0x20,0x2d,0x20,0x28,
    0x72,0x20,0x2a,0x20,0x30,0x2e,0x38,0x35,0x33,0x37,0x33,0x34,0x37,0x33,0x31,0x36,
    0x37,0x34,0x31,0x39,0x34,0x33,0x33,0x35,0x39,0x33,0x37,0x35,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x6e,
    0x6f,0x69,0x73,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x35,0x36,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x6f,0x72,0x28,
    0x76,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,0x74,0x28,0x76,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x34,0x33,
    0x32,0x36,0x37,0x34,0x34,0x30,0x37,0x39,0x35,0x38,0x39,0x38,0x34,0x33,0x37,0x35,
    0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x36,0x20,0x3d,0x20,0x28,0x76,0x20,0x2d,0x20,
    0x5f,0x35,0x36,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,0x74,0x28,
    0x5f,0x35,0x36,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x31,0x36,0x36,0x36,
    0x36,0x36,0x36,0x37,0x31,0x36,0x33,0x33,0x37,0x32,0x30,0x33,0x39,0x37,0x39,0x34,
    0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x31,0x20,0x3d,0x20,
    0x73,0x74,0x65,0x70,0x28,0x5f,0x36,0x36,0x2e,0x79,0x7a,0x78,0x2c,0x20,0x5f,0x36,
    0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x37,0x39,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,
    0x2e,0x30,0x29,0x20,0x2d,0x20,0x5f,0x37,0x31,0x29,0x2e,0x7a,0x78,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x38,0x30,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x37,0x31,0x2c,0x20,0x5f,0x37,
    0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x38,0x35,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x5f,0x37,0x31,
    0x2c,0x20,0x5f,0x37,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x39,0x30,0x20,0x3d,0x20,0x28,0x5f,0x36,
    0x36,0x20,0x2d,0x20,0x5f,0x38,0x30,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x31,0x36,0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,0x33,0x33,0x37,0x32,
    0x30,0x33,0x39,0x37,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x39,
    0x35,0x20,0x3d,0x20,0x28,0x5f,0x36,0x36,0x20,0x2d,0x20,0x5f,0x38,0x35,0x29,0x20,
    0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x33,0x33,0x33,0x33,0x33,0x33,0x33,
    0x34,0x33,0x32,0x36,0x37,0x34,0x34,0x30,0x37,0x39,0x35,0x38,0x39,0x38,0x34,0x33,
    0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x32,0x20,0x3d,0x20,0x5f,0x36,0x36,0x20,0x2b,
    0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x35,
    0x20,0x3d,0x20,0x6d,0x6f,0x64,0x28,0x5f,0x35,0x36,0x2c,0x20,0x76,0x65,0x63,0x33,
    0x28,0x32,0x38,0x39,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x30,0x35,0x2e,0x7a,0x29,0x20,0x2b,0x20,
    0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x5f,0x38,0x30,0x2e,0x7a,0x2c,
    0x20,0x5f,0x38,0x35,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x28,0x70,0x65,0x72,0x6d,0x75,0x74,0x65,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,
    0x30,0x35,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,
    0x30,0x2c,0x20,0x5f,0x38,0x30,0x2e,0x79,0x2c,0x20,0x5f,0x38,0x35,0x2e,0x79,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,
    0x28,0x70,0x65,0x72,0x6d,0x75,0x74,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x30,0x35,0x2e,0x78,0x29,
    0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x5f,0x38,
    0x30,0x2e,0x78,0x2c,0x20,0x5f,0x38,0x35,0x2e,0x78,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x31,0x34,0x37,0x20,0x3d,0x20,0x70,0x65,0x72,0x6d,0x75,0x74,0x65,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x36,0x39,0x20,0x3d,0x20,
    0x5f,0x31,0x34,0x37,0x20,0x2d,0x20,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x28,0x5f,
    0x31,0x34,0x37,0x20,0x2a,0x20,0x30,0x2e,0x31,0x34,0x32,0x38,0x35,0x37,0x31,0x34,
    0x39,0x32,0x34,0x33,0x33,0x35,0x34,0x37,0x39,0x37,0x33,0x36,0x33,0x32,0x38,0x31,
    0x32,0x35,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x34,0x32,0x38,0x35,0x37,0x31,0x34,
    0x39,0x32,0x34,0x33,0x33,0x35,0x34,0x37,0x39,0x37,0x33,0x36,0x33,0x32,0x38,0x31,
    0x32,0x35,0x29,0x20,0x2a,0x20,0x34,0x39,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x37,0x35,
    0x20,0x3d,0x20,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x31,0x36,0x39,0x20,0x2a,0x20,
    0x30,0x2e,0x31,0x34,0x32,0x38,0x35,0x37,0x31,0x34,0x39,0x32,0x34,0x33,0x33,0x35,
    0x34,0x37,0x39,0x37,0x33,0x36,0x33,0x32,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,
    0x39,0x30,0x20,0x3d,0x20,0x28,0x5f,0x31,0x37,0x35,0x20,0x2a,0x20,0x30,0x2e,0x32,
    0x38,0x35,0x37,0x31,0x34,0x32,0x39,0x38,0x34,0x38,0x36,0x37,0x30,0x39,0x35,0x39,
    0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,
    0x28,0x2d,0x30,0x2e,0x39,0x32,0x38,0x35,0x37,0x31,0x34,0x30,0x33,0x30,0x32,0x36,
    0x35,0x38,0x30,0x38,0x31,0x30,0x35,0x34,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,
    0x39,0x38,0x20,0x3d,0x20,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x31,0x36,0x39,
    0x20,0x2d,0x20,0x28,0x5f,0x31,0x37,0x35,0x20,0x2a,0x20,0x37,0x2e,0x30,0x29,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x32,0x38,0x35,0x37,0x31,0x34,0x32,0x39,0x38,0x34,0x38,
    0x36,0x37,0x30,0x39,0x35,0x39,0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x29,0x20,
    0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x2d,0x30,0x2e,0x39,0x32,0x38,0x35,0x37,0x31,
    0x34,0x30,0x33,0x30,0x32,0x36,0x35,0x38,0x30,0x38,0x31,0x30,0x35,0x34,0x36,0x38,
    0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x32,0x30,0x36,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x34,
    0x28,0x31,0x2e,0x30,0x29,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x5f,0x31,0x39,0x30,
    0x29,0x29,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x5f,0x31,0x39,0x38,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x32,0x31,0x37,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x39,0x30,0x2e,
    0x78,0x79,0x2c,0x20,0x5f,0x31,0x39,0x38,0x2e,0x78,0x79,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x32,
    0x37,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x39,0x30,0x2e,0x7a,0x77,
    0x2c,0x20,0x5f,0x31,0x39,0x38,0x2e,0x7a,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,0x34,0x20,
    0x3d,0x20,0x2d,0x73,0x74,0x65,0x70,0x28,0x5f,0x32,0x30,0x36,0x2c,0x20,0x76,0x65,
    0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x35,0x33,0x20,0x3d,0x20,
    0x28,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x32,0x31,0x37,0x29,0x20,0x2a,0x20,
    0x32,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x29,
    0x29,0x2e,0x78,0x7a,0x79,0x77,0x20,0x2a,0x20,0x5f,0x32,0x34,0x34,0x2e,0x78,0x78,
    0x79,0x79,0x20,0x2b,0x20,0x5f,0x32,0x31,0x37,0x2e,0x78,0x7a,0x79,0x77,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x32,0x36,0x32,0x20,0x3d,0x20,0x28,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x32,
    0x32,0x37,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,
    0x34,0x28,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x7a,0x79,0x77,0x20,0x2a,0x20,0x5f,
    0x32,0x34,0x34,0x2e,0x7a,0x7a,0x77,0x77,0x20,0x2b,0x20,0x5f,0x32,0x32,0x37,0x2e,
    0x78,0x7a,0x79,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x37,0x30,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,
    0x28,0x5f,0x32,0x35,0x33,0x2e,0x78,0x79,0x2c,0x20,0x5f,0x32,0x30,0x36,0x2e,0x78,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x30,0x20,0x3d,0x20,0x5f,0x32,0x37,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x37,0x38,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x35,0x33,0x2e,0x7a,0x77,0x2c,
    0x20,0x5f,0x32,0x30,0x36,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x31,0x20,0x3d,0x20,0x5f,0x32,
    0x37,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x32,0x38,0x36,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,
    0x32,0x36,0x32,0x2e,0x78,0x79,0x2c,0x20,0x5f,0x32,0x30,0x36,0x2e,0x7a,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x32,0x20,0x3d,0x20,0x5f,0x32,0x38,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x39,0x35,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x36,0x32,0x2e,0x7a,0x77,0x2c,0x20,0x5f,
    0x32,0x30,0x36,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x33,0x20,0x3d,0x20,0x5f,0x32,0x39,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x64,0x6f,0x74,0x28,0x5f,0x32,0x37,0x30,0x2c,0x20,0x5f,0x32,0x37,0x30,0x29,0x2c,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x37,0x38,0x2c,0x20,0x5f,0x32,0x37,0x38,0x29,
    0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x38,0x36,0x2c,0x20,0x5f,0x32,0x38,0x36,
    0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x39,0x35,0x2c,0x20,0x5f,0x32,0x39,
    0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x33,0x31,0x31,0x20,0x3d,0x20,0x74,0x61,0x79,0x6c,0x6f,
    0x72,0x49,0x6e,0x76,0x53,0x71,0x72,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x33,0x31,0x34,0x20,0x3d,0x20,0x70,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x31,0x35,
    0x20,0x3d,0x20,0x5f,0x33,0x31,0x34,0x20,0x2a,0x20,0x5f,0x33,0x31,0x31,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x30,0x20,0x3d,0x20,0x5f,0x33,0x31,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x33,0x31,0x38,0x20,0x3d,0x20,0x70,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x31,0x39,0x20,0x3d,
    0x20,0x5f,0x33,0x31,0x38,0x20,0x2a,0x20,0x5f,0x33,0x31,0x31,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x70,0x31,0x20,0x3d,0x20,0x5f,0x33,0x31,0x39,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,
    0x32,0x32,0x20,0x3d,0x20,0x70,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x32,0x33,0x20,0x3d,0x20,0x5f,
    0x33,0x32,0x32,0x20,0x2a,0x20,0x5f,0x33,0x31,0x31,0x2e,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x70,0x32,0x20,0x3d,0x20,0x5f,0x33,0x32,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x32,0x36,
    0x20,0x3d,0x20,0x70,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x32,0x37,0x20,0x3d,0x20,0x5f,0x33,0x32,
    0x36,0x20,0x2a,0x20,0x5f,0x33,0x31,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x70,0x33,0x20,0x3d,0x20,0x5f,0x33,0x32,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x34,0x36,0x20,0x3d,
    0x20,0x6d,0x61,0x78,0x28,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x36,0x30,0x30,0x30,
    0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,
    0x36,0x32,0x35,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x34,0x28,0x64,0x6f,0x74,0x28,
    0x5f,0x36,0x36,0x2c,0x20,0x5f,0x36,0x36,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,
    0x39,0x30,0x2c,0x20,0x5f,0x39,0x30,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x39,
    0x35,0x2c,0x20,0x5f,0x39,0x35,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x30,
    0x32,0x2c,0x20,0x5f,0x31,0x30,0x32,0x29,0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,
    0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x34,0x39,0x20,0x3d,0x20,0x5f,0x33,0x34,
    0x36,0x20,0x2a,0x20,0x5f,0x33,0x34,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x34,0x32,0x2e,0x30,0x20,0x2a,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x33,0x34,0x39,0x20,0x2a,0x20,0x5f,0x33,0x34,0x39,0x2c,0x20,0x76,0x65,0x63,
    0x34,0x28,0x64,0x6f,0x74,0x28,0x5f,0x33,0x31,0x35,0x2c,0x20,0x5f,0x36,0x36,0x29,
    0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x33,0x31,0x39,0x2c,0x20,0x5f,0x39,0x30,0x29,
    0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x33,0x32,0x33,0x2c,0x20,0x5f,0x39,0x35,0x29,
    0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x33,0x32,0x37,0x2c,0x20,0x5f,0x31,0x30,0x32,
    0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x68,0x65,0x69,0x67,0x68,0x74,0x4d,0x61,0x70,0x28,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,0x6f,0x72,0x64,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x6e,0x20,0x3d,0x20,0x61,0x62,0x73,0x28,0x73,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,
    0x20,0x63,0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x32,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6e,0x20,0x3d,0x20,0x30,0x2e,0x32,0x35,0x20,0x2a,0x20,0x61,0x62,0x73,
    0x28,0x73,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,
    0x29,0x20,0x2b,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,
    0x63,0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x34,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6e,0x20,0x3d,0x20,0x30,0x2e,0x32,0x35,0x20,0x2a,0x20,0x61,0x62,0x73,0x28,
    0x73,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x29,
    0x20,0x2b,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x63,
    0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x38,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6e,0x20,0x3d,0x20,0x30,0x2e,0x31,0x32,0x35,0x20,0x2a,0x20,0x61,0x62,0x73,0x28,
    0x73,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x29,
    0x20,0x2b,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x63,
    0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x31,0x36,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x31,
    0x32,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x31,0x33,0x20,0x3d,0x20,0x30,0x2e,
    0x30,0x36,0x32,0x35,0x20,0x2a,0x20,0x61,0x62,0x73,0x28,0x73,0x6e,0x6f,0x69,0x73,
    0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x29,0x20,0x2b,0x20,0x5f,0x34,
    0x31,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6e,0x20,0x3d,0x20,0x5f,0x34,0x31,0x33,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x34,0x31,
    0x33,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x33,0x44,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x32,0x32,0x20,0x3d,0x20,0x68,
    0x65,0x69,0x67,0x68,0x74,0x4d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x36,0x33,0x39,0x20,0x3d,0x20,0x2d,0x5f,0x34,0x32,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x33,0x44,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x32,0x30,0x30,
    0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,
    0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x34,0x35,0x37,0x20,0x3d,0x20,0x68,0x65,0x69,0x67,0x68,
    0x74,0x4d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x33,0x44,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,
    0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x34,0x36,0x33,0x20,0x3d,0x20,0x68,0x65,0x69,0x67,0x68,
    0x74,0x4d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x33,0x44,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,
    0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x34,0x36,0x39,0x20,0x3d,0x20,0x68,0x65,0x69,0x67,0x68,
    0x74,0x4d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,
    0x38,0x38,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,
    0x2d,0x28,0x76,0x65,0x63,0x33,0x28,0x5f,0x34,0x32,0x32,0x20,0x2a,0x20,0x30,0x2e,
    0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,
    0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x28,0x2d,
    0x5f,0x34,0x35,0x37,0x29,0x2c,0x20,0x5f,0x34,0x32,0x32,0x20,0x2a,0x20,0x30,0x2e,
    0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,
    0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x28,0x2d,
    0x5f,0x34,0x36,0x33,0x29,0x2c,0x20,0x5f,0x34,0x32,0x32,0x20,0x2a,0x20,0x30,0x2e,
    0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,
    0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x28,0x2d,
    0x5f,0x34,0x36,0x39,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x34,0x39,0x39,
    0x39,0x39,0x39,0x39,0x38,0x38,0x38,0x32,0x34,0x31,0x32,0x39,0x31,0x30,0x34,0x36,
    0x31,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x33,0x28,0x35,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,
    0x74,0x34,0x20,0x5f,0x35,0x30,0x31,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x67,
    0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x67,0x6c,0x74,
    0x66,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,
    0x6d,0x61,0x74,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,
    0x74,0x73,0x5b,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x31,0x34,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x28,0x5f,0x35,0x30,0x31,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x30,
    0x2e,0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,
    0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x33,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x2d,0x33,0x2e,0x30,0x2c,0x20,0x33,
    0x2e,0x30,0x2c,0x20,0x31,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,
    0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x4c,0x69,0x67,0x68,0x74,0x57,0x65,0x69,0x67,0x68,
    0x74,0x69,0x6e,0x67,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x35,
    0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x36,0x35,0x38,0x38,0x39,0x35,0x34,0x39,0x32,
    0x35,0x35,0x33,0x37,0x31,0x30,0x39,0x33,0x37,0x35,0x29,0x20,0x2b,0x20,0x28,0x76,
    0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,
    0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x38,0x38,0x2c,0x20,0x5f,0x35,0x31,0x34,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x31,0x2e,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x35,0x35,0x20,0x3d,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x72,0x74,0x50,0x6f,
    0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x35,0x36,0x31,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,
    0x34,0x38,0x38,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,
    0x35,0x31,0x34,0x20,0x2d,0x20,0x5f,0x35,0x35,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x69,
    0x72,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x57,0x65,0x69,0x67,0x68,0x74,0x20,
    0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x35,0x36,0x31,0x20,0x3e,0x3d,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x72,0x53,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x57,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x70,0x6f,
    0x77,0x28,0x5f,0x35,0x36,0x31,0x2c,0x20,0x31,0x36,0x30,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x39,0x32,0x20,0x3d,0x20,0x76,0x4c,0x69,0x67,
    0x68,0x74,0x57,0x65,0x69,0x67,0x68,0x74,0x69,0x6e,0x67,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x39,0x33,
    0x20,0x3d,0x20,0x5f,0x35,0x39,0x32,0x20,0x2b,0x20,0x28,0x28,0x28,0x76,0x65,0x63,
    0x33,0x28,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x34,
    0x35,0x37,0x2c,0x20,0x5f,0x34,0x36,0x33,0x2c,0x20,0x5f,0x34,0x36,0x39,0x29,0x29,
    0x20,0x2a,0x20,0x28,0x64,0x69,0x72,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x57,
    0x65,0x69,0x67,0x68,0x74,0x20,0x2b,0x20,0x70,0x6f,0x77,0x28,0x31,0x2e,0x30,0x20,
    0x2d,0x20,0x61,0x62,0x73,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x38,0x38,0x2c,0x20,
    0x5f,0x35,0x35,0x35,0x29,0x29,0x2c,0x20,0x31,0x35,0x2e,0x30,0x29,0x29,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x36,0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,
    0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x4c,0x69,0x67,0x68,0x74,0x57,0x65,0x69,0x67,0x68,0x74,0x69,
    0x6e,0x67,0x20,0x3d,0x20,0x5f,0x35,0x39,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x33,0x28,0x5f,0x36,0x33,0x39,0x20,0x2a,0x20,0x30,0x2e,0x30,0x33,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x20,0x2b,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x2c,
    0x20,0x5f,0x36,0x33,0x39,0x20,0x2a,0x20,0x30,0x2e,0x30,0x34,0x30,0x30,0x30,0x30,
    0x30,0x30,0x32,0x38,0x33,0x31,0x32,0x32,0x30,0x36,0x32,0x36,0x38,0x33,0x31,0x30,
    0x35,0x34,0x36,0x38,0x37,0x35,0x20,0x2b,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x79,
    0x2c,0x20,0x5f,0x36,0x33,0x39,0x20,0x2a,0x20,0x30,0x2e,0x30,0x38,0x30,0x30,0x30,
    0x30,0x30,0x30,0x35,0x36,0x36,0x32,0x34,0x34,0x31,0x32,0x35,0x33,0x36,0x36,0x32,
    0x31,0x30,0x39,0x33,0x37,0x35,0x20,0x2b,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,
    0x29,0x29,0x20,0x2a,0x20,0x5f,0x35,0x39,0x33,0x20,0x2b,0x20,0x28,0x76,0x65,0x63,
    0x33,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,
    0x38,0x38,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x5f,
    0x35,0x30,0x31,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x65,
    0x78,0x70,0x28,0x2d,0x76,0x65,0x72,0x74,0x50,0x6f,0x73,0x2e,0x79,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,
    0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,
    0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,
    0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x28,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    layout(location = 0) in vec2 pos;
    
    void main()
    {
        gl_Position = vec4((pos * 2.0) - vec2(1.0), 0.5, 1.0);
    }
    
*/
static const char blending_quad_source_glsl300es[129] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,
    0x73,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x70,0x6f,0x73,0x20,0x2a,0x20,
    0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,
    0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 SSAOUniforms[15];
    uniform highp sampler2D uDepth;
    uniform highp sampler2D uNormalBuffer;
    
    layout(location = 0) out highp float occlusion;
    
    highp float perspectiveDepthToViewZ(highp float depth, highp float near, highp float far)
    {
        return (near * far) / ((far - near) * depth + (-far));
    }
    
    highp float getViewZ(highp float depth)
    {
        return perspectiveDepthToViewZ(depth, SSAOUniforms[14].x, SSAOUniforms[14].y);
    }
    
    highp vec3 getPosition(ivec2 fragCoord)
    {
        highp vec4 _69 = texelFetch(uDepth, fragCoord, 0);
        highp float _70 = _69.x;
        highp vec2 _86 = ((vec2(fragCoord) * 2.0) / vec2(textureSize(uDepth, 0))) - vec2(1.0);
        if (_70 > 0.999998986721038818359375)
        {
            highp vec4 _106 = mat4(SSAOUniforms[4], SSAOUniforms[5], SSAOUniforms[6], SSAOUniforms[7]) * vec4(_86, -1.0, 1.0);
            highp vec3 _130 = normalize((mat4(SSAOUniforms[8], SSAOUniforms[9], SSAOUniforms[10], SSAOUniforms[11]) * (_106 / vec4(_106.w))).xyz - SSAOUniforms[12].xyz);
            return SSAOUniforms[12].xyz + (_130 * ((-SSAOUniforms[12].xyz.z) / _130.z));
        }
        return (mat4(SSAOUniforms[4], SSAOUniforms[5], SSAOUniforms[6], SSAOUniforms[7]) * (vec4((vec3(_86, _70) - vec3(0.5)) * 2.0, 1.0) * (SSAOUniforms[2].w * getViewZ(_70) + SSAOUniforms[3].w))).xyz;
    }
    
    highp float getOcclusion(highp vec3 position, highp vec3 normal, ivec2 fragCoord)
    {
        ivec2 param = fragCoord;
        highp vec3 _189 = getPosition(param) - position;
        return max(dot(normal, normalize(_189)) - SSAOUniforms[13].x, 0.0) * (1.0 / (SSAOUniforms[13].w * length(_189) + SSAOUniforms[13].z));
    }
    
    void main()
    {
        ivec2 _223 = ivec2(gl_FragCoord.xy);
        ivec2 param = _223;
        highp vec3 _234 = getPosition(param);
        highp vec3 normal = texelFetch(uNormalBuffer, _223, 0).xyz;
        if (texelFetch(uDepth, _223, 0).x == 1.0)
        {
            normal = vec3(0.0, 0.0, -1.0);
        }
        highp vec2 _249 = vec2(_223);
        highp vec2 _269 = (fract(sin(vec2(dot(_249, vec2(12.98980045318603515625, 78.233001708984375)), dot(_249, vec2(39.78900146484375, 102.73400115966796875)))) * 43758.546875) * 2.0) - vec2(1.0);
        highp float _288 = SSAOUniforms[12].w * (1.0 - ((length(_234) - SSAOUniforms[14].x) / (SSAOUniforms[14].y - SSAOUniforms[14].x)));
        highp vec2 kernel[4];
        kernel[0] = vec2(0.0, 1.0);
        kernel[1] = vec2(1.0, 0.0);
        kernel[2] = vec2(0.0, -1.0);
        kernel[3] = vec2(-1.0, 0.0);
        occlusion = 0.0;
        for (int i = 0; i < 4; i++)
        {
            highp vec2 _317 = reflect(kernel[i], _269);
            highp float _320 = _317.x;
            highp float _324 = _317.y;
            highp vec2 _337 = _317 * _288;
            highp vec2 _340 = vec2(_320 * 0.707107007503509521484375 + (_324 * (-0.707107007503509521484375)), 0.707107007503509521484375 * (_320 + _324)) * _288;
            highp vec3 param_1 = _234;
            highp vec3 param_2 = normal;
            ivec2 param_3 = _223 + ivec2(_337);
            occlusion += getOcclusion(param_1, param_2, param_3);
            highp vec3 param_4 = _234;
            highp vec3 param_5 = normal;
            ivec2 param_6 = _223 + ivec2(_340 * 0.75);
            occlusion += getOcclusion(param_4, param_5, param_6);
            highp vec3 param_7 = _234;
            highp vec3 param_8 = normal;
            ivec2 param_9 = _223 + ivec2(_337 * 0.5);
            occlusion += getOcclusion(param_7, param_8, param_9);
            highp vec3 param_10 = _234;
            highp vec3 param_11 = normal;
            ivec2 param_12 = _223 + ivec2(_340 * 0.25);
            occlusion += getOcclusion(param_10, param_11, param_12);
        }
        occlusion = clamp(occlusion * 0.0625, 0.0, 1.0);
    }
    
*/
static const char ssao_fs_source_glsl300es[3641] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,
    0x35,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x44,0x65,0x70,
    0x74,0x68,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x42,0x75,0x66,0x66,0x65,0x72,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x65,0x72,0x73,0x70,0x65,0x63,
    0x74,0x69,0x76,0x65,0x44,0x65,0x70,0x74,0x68,0x54,0x6f,0x56,0x69,0x65,0x77,0x5a,
    0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x65,0x70,
    0x74,0x68,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x6e,0x65,0x61,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x66,0x61,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x28,0x6e,0x65,0x61,0x72,0x20,0x2a,0x20,0x66,0x61,0x72,0x29,
    0x20,0x2f,0x20,0x28,0x28,0x66,0x61,0x72,0x20,0x2d,0x20,0x6e,0x65,0x61,0x72,0x29,
    0x20,0x2a,0x20,0x64,0x65,0x70,0x74,0x68,0x20,0x2b,0x20,0x28,0x2d,0x66,0x61,0x72,
    0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x67,0x65,0x74,0x56,0x69,0x65,0x77,0x5a,0x28,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x65,0x70,0x74,0x68,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x65,0x72,0x73,
    0x70,0x65,0x63,0x74,0x69,0x76,0x65,0x44,0x65,0x70,0x74,0x68,0x54,0x6f,0x56,0x69,
    0x65,0x77,0x5a,0x28,0x64,0x65,0x70,0x74,0x68,0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2e,0x78,0x2c,0x20,0x53,
    0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2e,
    0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x67,0x65,0x74,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x69,0x76,
    0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x36,0x39,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,
    0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6f,
    0x72,0x64,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x30,0x20,0x3d,0x20,0x5f,0x36,
    0x39,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x32,0x20,0x5f,0x38,0x36,0x20,0x3d,0x20,0x28,0x28,0x76,0x65,0x63,0x32,
    0x28,0x66,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x29,0x20,0x2a,0x20,0x32,0x2e,
    0x30,0x29,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x53,0x69,0x7a,0x65,0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x30,0x29,
    0x29,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x37,0x30,0x20,0x3e,0x20,0x30,0x2e,
    0x39,0x39,0x39,0x39,0x39,0x38,0x39,0x38,0x36,0x37,0x32,0x31,0x30,0x33,0x38,0x38,
    0x31,0x38,0x33,0x35,0x39,0x33,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x31,0x30,0x36,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x53,
    0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,
    0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x35,0x5d,0x2c,
    0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x36,0x5d,
    0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x37,
    0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x38,0x36,0x2c,0x20,0x2d,
    0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,
    0x33,0x30,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,
    0x6d,0x61,0x74,0x34,0x28,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x73,0x5b,0x38,0x5d,0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x28,0x5f,0x31,
    0x30,0x36,0x20,0x2f,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x30,0x36,0x2e,0x77,
    0x29,0x29,0x29,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x32,0x5d,
    0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x28,0x5f,0x31,0x33,0x30,0x20,0x2a,0x20,0x28,
    0x28,0x2d,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,
    0x32,0x5d,0x2e,0x78,0x79,0x7a,0x2e,0x7a,0x29,0x20,0x2f,0x20,0x5f,0x31,0x33,0x30,
    0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x53,0x53,0x41,
    0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x53,0x53,
    0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x53,
    0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,
    0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x37,0x5d,0x29,
    0x20,0x2a,0x20,0x28,0x76,0x65,0x63,0x34,0x28,0x28,0x76,0x65,0x63,0x33,0x28,0x5f,
    0x38,0x36,0x2c,0x20,0x5f,0x37,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x35,0x29,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x20,0x2a,0x20,0x28,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x73,0x5b,0x32,0x5d,0x2e,0x77,0x20,0x2a,0x20,0x67,0x65,0x74,0x56,0x69,0x65,0x77,
    0x5a,0x28,0x5f,0x37,0x30,0x29,0x20,0x2b,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x77,0x29,0x29,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x67,0x65,0x74,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,
    0x67,0x43,0x6f,0x6f,0x72,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,
    0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x38,0x39,0x20,0x3d,0x20,0x67,0x65,0x74,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,
    0x2d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x5f,0x31,0x38,0x39,0x29,0x29,0x20,0x2d,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x2e,0x78,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x53,0x53,0x41,
    0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x2e,0x77,0x20,
    0x2a,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x31,0x38,0x39,0x29,0x20,0x2b,
    0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x33,
    0x5d,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,
    0x32,0x20,0x5f,0x32,0x32,0x33,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x67,
    0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x5f,0x32,0x32,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x33,0x34,0x20,0x3d,0x20,0x67,
    0x65,0x74,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x75,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x42,0x75,0x66,
    0x66,0x65,0x72,0x2c,0x20,0x5f,0x32,0x32,0x33,0x2c,0x20,0x30,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x5f,0x32,
    0x32,0x33,0x2c,0x20,0x30,0x29,0x2e,0x78,0x20,0x3d,0x3d,0x20,0x31,0x2e,0x30,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x5f,0x32,0x34,0x39,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,
    0x32,0x32,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x36,0x39,0x20,0x3d,0x20,0x28,0x66,0x72,0x61,
    0x63,0x74,0x28,0x73,0x69,0x6e,0x28,0x76,0x65,0x63,0x32,0x28,0x64,0x6f,0x74,0x28,
    0x5f,0x32,0x34,0x39,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x32,0x2e,0x39,0x38,
    0x39,0x38,0x30,0x30,0x34,0x35,0x33,0x31,0x38,0x36,0x30,0x33,0x35,0x31,0x35,0x36,
    0x32,0x35,0x2c,0x20,0x37,0x38,0x2e,0x32,0x33,0x33,0x30,0x30,0x31,0x37,0x30,0x38,
    0x39,0x38,0x34,0x33,0x37,0x35,0x29,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,
    0x34,0x39,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x33,0x39,0x2e,0x37,0x38,0x39,0x30,
    0x30,0x31,0x34,0x36,0x34,0x38,0x34,0x33,0x37,0x35,0x2c,0x20,0x31,0x30,0x32,0x2e,
    0x37,0x33,0x34,0x30,0x30,0x31,0x31,0x35,0x39,0x36,0x36,0x37,0x39,0x36,0x38,0x37,
    0x35,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x34,0x33,0x37,0x35,0x38,0x2e,0x35,0x34,
    0x36,0x38,0x37,0x35,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,
    0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x38,0x38,0x20,0x3d,
    0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x32,
    0x5d,0x2e,0x77,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x28,0x6c,
    0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x32,0x33,0x34,0x29,0x20,0x2d,0x20,0x53,0x53,
    0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2e,0x78,
    0x29,0x20,0x2f,0x20,0x28,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x73,0x5b,0x31,0x34,0x5d,0x2e,0x79,0x20,0x2d,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2e,0x78,0x29,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x6b,0x65,0x72,0x6e,0x65,0x6c,0x5b,0x34,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6b,
    0x65,0x72,0x6e,0x65,0x6c,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6b,
    0x65,0x72,0x6e,0x65,0x6c,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,
    0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6b,
    0x65,0x72,0x6e,0x65,0x6c,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6b,0x65,0x72,0x6e,0x65,0x6c,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,
    0x28,0x2d,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,
    0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x34,0x3b,0x20,0x69,0x2b,0x2b,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x31,0x37,0x20,
    0x3d,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x6b,0x65,0x72,0x6e,0x65,0x6c,
    0x5b,0x69,0x5d,0x2c,0x20,0x5f,0x32,0x36,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x33,0x32,0x30,0x20,0x3d,0x20,0x5f,0x33,0x31,0x37,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x33,0x32,0x34,0x20,0x3d,0x20,0x5f,0x33,0x31,0x37,0x2e,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x33,0x37,0x20,0x3d,0x20,0x5f,0x33,0x31,0x37,
    0x20,0x2a,0x20,0x5f,0x32,0x38,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x34,0x30,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x32,0x30,0x20,0x2a,0x20,0x30,
    0x2e,0x37,0x30,0x37,0x31,0x30,0x37,0x30,0x30,0x37,0x35,0x30,0x33,0x35,0x30,0x39,
    0x35,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,
    0x34,0x20,0x2a,0x20,0x28,0x2d,0x30,0x2e,0x37,0x30,0x37,0x31,0x30,0x37,0x30,0x30,
    0x37,0x35,0x30,0x33,0x35,0x30,0x39,0x35,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,
    0x29,0x29,0x2c,0x20,0x30,0x2e,0x37,0x30,0x37,0x31,0x30,0x37,0x30,0x30,0x37,0x35,
    0x30,0x33,0x35,0x30,0x39,0x35,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,0x20,0x2a,
    0x20,0x28,0x5f,0x33,0x32,0x30,0x20,0x2b,0x20,0x5f,0x33,0x32,0x34,0x29,0x29,0x20,
    0x2a,0x20,0x5f,0x32,0x38,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x20,0x3d,0x20,0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x32,0x32,0x33,0x20,0x2b,0x20,0x69,
    0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x33,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x2b,0x3d,
    0x20,0x67,0x65,0x74,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x32,0x32,0x33,0x20,0x2b,
    0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x34,0x30,0x20,0x2a,0x20,0x30,0x2e,
    0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x63,0x63,
    0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x2b,0x3d,0x20,0x67,0x65,0x74,0x4f,0x63,0x63,
    0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,
    0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,
    0x20,0x3d,0x20,0x5f,0x32,0x32,0x33,0x20,0x2b,0x20,0x69,0x76,0x65,0x63,0x32,0x28,
    0x5f,0x33,0x33,0x37,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x2b,
    0x3d,0x20,0x67,0x65,0x74,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x76,0x65,
    0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x32,0x20,0x3d,0x20,0x5f,0x32,
    0x32,0x33,0x20,0x2b,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x34,0x30,0x20,
    0x2a,0x20,0x30,0x2e,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x2b,0x3d,0x20,0x67,0x65,
    0x74,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x30,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,
    0x2a,0x20,0x30,0x2e,0x30,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before gltf.h"
#endif
static inline const sg_shader_desc* gltf_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "instance_id";
      desc.attrs[1].name = "position";
      desc.attrs[2].name = "normal";
      desc.attrs[3].name = "color0";
      desc.attrs[4].name = "node_id";
      desc.vs.source = gltf_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "gltf_mats";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.vs.images[0].name = "NImodelViewMatrix";
      desc.vs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.vs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.vs.images[1].name = "NInormalMatrix";
      desc.vs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.vs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.source = gltf_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 128;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "gltf_mats";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.label = "gltf_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* gltf_depth_only_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "instance_id";
      desc.attrs[1].name = "position";
      desc.attrs[2].name = "node_id";
      desc.vs.source = vs_depth_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "gltf_mats";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.vs.images[0].name = "NImodelViewMatrix";
      desc.vs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.vs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.source = fs_depth_source_glsl300es;
      desc.fs.entry = "main";
      desc.label = "gltf_depth_only_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* gltf_ground_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "x_y_radius";
      desc.attrs[1].name = "position";
      desc.vs.source = vs_ground_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 64;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "gltf_ground_mats";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.source = fs_ground_source_glsl300es;
      desc.fs.entry = "main";
      desc.label = "gltf_ground_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* ssao_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "pos";
      desc.vs.source = blending_quad_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = ssao_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 240;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "SSAOUniforms";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 15;
      desc.fs.images[0].name = "uDepth";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "uNormalBuffer";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "ssao_shader";
    }
    return &desc;
  }
  return 0;
}
