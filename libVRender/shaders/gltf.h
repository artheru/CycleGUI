#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input gltf.glsl --output gltf.h --slang glsl300es

    Overview:

        Shader program 'gltf':
            Get shader desc: gltf_shader_desc(sg_query_backend());
            Vertex shader: gltf_vs
                Attribute slots:
                    ATTR_gltf_vs_instance_id = 0
                    ATTR_gltf_vs_position = 1
                    ATTR_gltf_vs_normal = 2
                    ATTR_gltf_vs_color0 = 3
                    ATTR_gltf_vs_node_id = 4
                Uniform block 'gltf_mats':
                    C struct: gltf_mats_t
                    Bind slot: SLOT_gltf_mats = 0
                Image 'NImodelViewMatrix':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_NImodelViewMatrix = 0
                Image 'NInormalMatrix':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_NInormalMatrix = 1
            Fragment shader: gltf_fs
                Uniform block 'gltf_mats':
                    C struct: gltf_mats_t
                    Bind slot: SLOT_gltf_mats = 0

        Shader program 'gltf_compute_mat':
            Get shader desc: gltf_compute_mat_shader_desc(sg_query_backend());
            Vertex shader: vs_compute_mat
                Attribute slots:
                    ATTR_vs_compute_mat_instance_id = 0
                    ATTR_vs_compute_mat_position = 1
                    ATTR_vs_compute_mat_quat = 2
                    ATTR_vs_compute_mat_node_id = 3
                Uniform block 'transform_uniforms':
                    C struct: transform_uniforms_t
                    Bind slot: SLOT_transform_uniforms = 0
                Image 'node_mats_hierarchy':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_node_mats_hierarchy = 0
            Fragment shader: fs_compute_mat

        Shader program 'gltf_depth_only':
            Get shader desc: gltf_depth_only_shader_desc(sg_query_backend());
            Vertex shader: vs_depth
                Attribute slots:
                    ATTR_vs_depth_instance_id = 0
                    ATTR_vs_depth_position = 1
                    ATTR_vs_depth_node_id = 2
                Uniform block 'gltf_mats':
                    C struct: gltf_mats_t
                    Bind slot: SLOT_gltf_mats = 0
                Image 'NImodelViewMatrix':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_NImodelViewMatrix = 0
            Fragment shader: fs_depth

        Shader program 'gltf_ground':
            Get shader desc: gltf_ground_shader_desc(sg_query_backend());
            Vertex shader: vs_ground
                Attribute slots:
                    ATTR_vs_ground_x_y_radius = 0
                    ATTR_vs_ground_position = 1
                Uniform block 'gltf_ground_mats':
                    C struct: gltf_ground_mats_t
                    Bind slot: SLOT_gltf_ground_mats = 0
            Fragment shader: fs_ground

        Shader program 'ssao':
            Get shader desc: ssao_shader_desc(sg_query_backend());
            Vertex shader: blending_quad
                Attribute slots:
                    ATTR_blending_quad_pos = 0
            Fragment shader: ssao_fs
                Uniform block 'SSAOUniforms':
                    C struct: SSAOUniforms_t
                    Bind slot: SLOT_SSAOUniforms = 0
                Image 'uDepth':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_uDepth = 0
                Image 'uNormalBuffer':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_uNormalBuffer = 1


    Shader descriptor structs:

        sg_shader gltf = sg_make_shader(gltf_shader_desc(sg_query_backend()));
        sg_shader gltf_compute_mat = sg_make_shader(gltf_compute_mat_shader_desc(sg_query_backend()));
        sg_shader gltf_depth_only = sg_make_shader(gltf_depth_only_shader_desc(sg_query_backend()));
        sg_shader gltf_ground = sg_make_shader(gltf_ground_shader_desc(sg_query_backend()));
        sg_shader ssao = sg_make_shader(ssao_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'vs_compute_mat':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_compute_mat_instance_id] = { ... },
                    [ATTR_vs_compute_mat_position] = { ... },
                    [ATTR_vs_compute_mat_quat] = { ... },
                    [ATTR_vs_compute_mat_node_id] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'vs_ground':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_ground_x_y_radius] = { ... },
                    [ATTR_vs_ground_position] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'vs_depth':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_depth_instance_id] = { ... },
                    [ATTR_vs_depth_position] = { ... },
                    [ATTR_vs_depth_node_id] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'gltf_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_gltf_vs_instance_id] = { ... },
                    [ATTR_gltf_vs_position] = { ... },
                    [ATTR_gltf_vs_normal] = { ... },
                    [ATTR_gltf_vs_color0] = { ... },
                    [ATTR_gltf_vs_node_id] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'blending_quad':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_blending_quad_pos] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_node_mats_hierarchy = 0;
        SLOT_NImodelViewMatrix = 0;
        SLOT_NInormalMatrix = 1;
        SLOT_uDepth = 0;
        SLOT_uNormalBuffer = 1;

    Bind slot and C-struct for uniform block 'transform_uniforms':

        transform_uniforms_t transform_uniforms = {
            .class_id = ...;
            .max_nodes = ...;
            .max_instances = ...;
            .max_depth = ...;
            .viewMatrix = ...;
            .offset = ...;
            .imat = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_transform_uniforms, &SG_RANGE(transform_uniforms));

    Bind slot and C-struct for uniform block 'gltf_ground_mats':

        gltf_ground_mats_t gltf_ground_mats = {
            .pv = ...;
            .campos = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_gltf_ground_mats, &SG_RANGE(gltf_ground_mats));

    Bind slot and C-struct for uniform block 'gltf_mats':

        gltf_mats_t gltf_mats = {
            .projectionMatrix = ...;
            .viewMatrix = ...;
            .max_instances = ...;
            .offset = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_gltf_mats, &SG_RANGE(gltf_mats));

    Bind slot and C-struct for uniform block 'SSAOUniforms':

        SSAOUniforms_t SSAOUniforms = {
            .P = ...;
            .iP = ...;
            .iV = ...;
            .cP = ...;
            .uSampleRadius = ...;
            .uBias = ...;
            .uAttenuation = ...;
            .uDepthRange = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_SSAOUniforms, &SG_RANGE(SSAOUniforms));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_vs_compute_mat_instance_id (0)
#define ATTR_vs_compute_mat_position (1)
#define ATTR_vs_compute_mat_quat (2)
#define ATTR_vs_compute_mat_node_id (3)
#define ATTR_vs_ground_x_y_radius (0)
#define ATTR_vs_ground_position (1)
#define ATTR_vs_depth_instance_id (0)
#define ATTR_vs_depth_position (1)
#define ATTR_vs_depth_node_id (2)
#define ATTR_gltf_vs_instance_id (0)
#define ATTR_gltf_vs_position (1)
#define ATTR_gltf_vs_normal (2)
#define ATTR_gltf_vs_color0 (3)
#define ATTR_gltf_vs_node_id (4)
#define ATTR_blending_quad_pos (0)
#define SLOT_node_mats_hierarchy (0)
#define SLOT_NImodelViewMatrix (0)
#define SLOT_NInormalMatrix (1)
#define SLOT_uDepth (0)
#define SLOT_uNormalBuffer (1)
#define SLOT_transform_uniforms (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct transform_uniforms_t {
    int class_id;
    int max_nodes;
    int max_instances;
    int max_depth;
    glm::mat4 viewMatrix;
    int offset;
    uint8_t _pad_84[12];
    glm::mat4 imat;
} transform_uniforms_t;
#pragma pack(pop)
#define SLOT_gltf_ground_mats (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct gltf_ground_mats_t {
    glm::mat4 pv;
    glm::vec3 campos;
    uint8_t _pad_76[4];
} gltf_ground_mats_t;
#pragma pack(pop)
#define SLOT_gltf_mats (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct gltf_mats_t {
    glm::mat4 projectionMatrix;
    glm::mat4 viewMatrix;
    int max_instances;
    int offset;
    uint8_t _pad_136[8];
} gltf_mats_t;
#pragma pack(pop)
#define SLOT_SSAOUniforms (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct SSAOUniforms_t {
    glm::mat4 P;
    glm::mat4 iP;
    glm::mat4 iV;
    glm::vec3 cP;
    float uSampleRadius;
    float uBias;
    uint8_t _pad_212[4];
    float uAttenuation[2];
    float uDepthRange[2];
    uint8_t _pad_232[8];
} SSAOUniforms_t;
#pragma pack(pop)
/*
    #version 300 es
    
    struct transform_uniforms
    {
        int class_id;
        int max_nodes;
        int max_instances;
        int max_depth;
        mat4 viewMatrix;
        int offset;
        mat4 imat;
    };
    
    uniform transform_uniforms _249;
    
    uniform highp sampler2D node_mats_hierarchy;
    
    layout(location = 3) in int node_id;
    flat out mat4 modelView;
    layout(location = 1) in vec3 position;
    layout(location = 2) in vec4 quat;
    flat out mat4 iModelView;
    layout(location = 0) in int instance_id;
    
    mat4 getLocal(int nid)
    {
        return mat4(texelFetch(node_mats_hierarchy, ivec2(0, nid), 0), texelFetch(node_mats_hierarchy, ivec2(1, nid), 0), texelFetch(node_mats_hierarchy, ivec2(2, nid), 0), texelFetch(node_mats_hierarchy, ivec2(3, nid), 0));
    }
    
    mat4 translate(vec3 position_1)
    {
        return mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(position_1, 1.0));
    }
    
    mat4 mat4_cast(vec4 q)
    {
        float _341 = q.y * (-2.0);
        float _342 = q.z * (-2.0);
        float _143 = 2.0 * q.x;
        float _149 = (2.0 * q.z) * q.w;
        float _156 = 2.0 * q.y;
        float _158 = _156 * q.w;
        float _173 = (q.x * (-2.0)) * q.x + 1.0;
        float _186 = _143 * q.w;
        return mat4(vec4(_342 * q.z + (_341 * q.y + 1.0), _143 * q.y + _149, _143 * q.z + (-_158), 0.0), vec4(_143 * q.y + (-_149), _342 * q.z + _173, _156 * q.z + _186, 0.0), vec4(_143 * q.z + _158, _156 * q.z + (-_186), _341 * q.y + _173, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
    }
    
    void main()
    {
        int nid = node_id;
        int param = node_id;
        modelView = getLocal(param);
        nid = int(texelFetch(node_mats_hierarchy, ivec2(4, nid), 0).x);
        for (int i = 0; (i < _249.max_depth) && (nid != (-1)); i++)
        {
            int param_1 = nid;
            modelView = getLocal(param_1) * modelView;
            nid = int(texelFetch(node_mats_hierarchy, ivec2(4, nid), 0).x);
        }
        vec3 param_2 = position;
        vec4 param_3 = quat;
        modelView = (((_249.viewMatrix * translate(param_2)) * mat4_cast(param_3)) * _249.imat) * modelView;
        iModelView = inverse(modelView);
        gl_PointSize = 2.0;
        int _314 = ((_249.max_instances * node_id) + instance_id) + _249.offset;
        gl_Position = vec4((float(_314 % 2048) + 0.5) * 0.0009765625 + (-1.0), (float(_314 / 2048) + 0.5) * 0.0009765625 + (-1.0), 0.0, 1.0);
    }
    
*/
static const char vs_compute_mat_source_glsl300es[2251] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,
    0x6d,0x5f,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x63,0x6c,0x61,0x73,0x73,0x5f,0x69,0x64,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x78,0x5f,0x6e,0x6f,0x64,0x65,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x78,0x5f,0x69,0x6e,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x6d,0x61,0x78,0x5f,0x64,0x65,0x70,0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x74,0x34,0x20,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x69,0x6d,0x61,0x74,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x74,0x72,0x61,0x6e,
    0x73,0x66,0x6f,0x72,0x6d,0x5f,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x20,0x5f,
    0x32,0x34,0x39,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x6e,0x6f,
    0x64,0x65,0x5f,0x6d,0x61,0x74,0x73,0x5f,0x68,0x69,0x65,0x72,0x61,0x72,0x63,0x68,
    0x79,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,
    0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x6d,0x61,0x74,0x34,0x20,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x34,0x20,0x71,0x75,0x61,0x74,0x3b,0x0a,0x66,0x6c,0x61,0x74,
    0x20,0x6f,0x75,0x74,0x20,0x6d,0x61,0x74,0x34,0x20,0x69,0x4d,0x6f,0x64,0x65,0x6c,
    0x56,0x69,0x65,0x77,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x69,0x6e,
    0x74,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x69,0x64,0x3b,0x0a,0x0a,
    0x6d,0x61,0x74,0x34,0x20,0x67,0x65,0x74,0x4c,0x6f,0x63,0x61,0x6c,0x28,0x69,0x6e,
    0x74,0x20,0x6e,0x69,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x6d,0x61,0x74,0x34,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,
    0x74,0x63,0x68,0x28,0x6e,0x6f,0x64,0x65,0x5f,0x6d,0x61,0x74,0x73,0x5f,0x68,0x69,
    0x65,0x72,0x61,0x72,0x63,0x68,0x79,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x30,
    0x2c,0x20,0x6e,0x69,0x64,0x29,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,
    0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x6e,0x6f,0x64,0x65,0x5f,0x6d,0x61,0x74,0x73,
    0x5f,0x68,0x69,0x65,0x72,0x61,0x72,0x63,0x68,0x79,0x2c,0x20,0x69,0x76,0x65,0x63,
    0x32,0x28,0x31,0x2c,0x20,0x6e,0x69,0x64,0x29,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,
    0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x6e,0x6f,0x64,0x65,0x5f,0x6d,
    0x61,0x74,0x73,0x5f,0x68,0x69,0x65,0x72,0x61,0x72,0x63,0x68,0x79,0x2c,0x20,0x69,
    0x76,0x65,0x63,0x32,0x28,0x32,0x2c,0x20,0x6e,0x69,0x64,0x29,0x2c,0x20,0x30,0x29,
    0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x6e,0x6f,0x64,
    0x65,0x5f,0x6d,0x61,0x74,0x73,0x5f,0x68,0x69,0x65,0x72,0x61,0x72,0x63,0x68,0x79,
    0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x33,0x2c,0x20,0x6e,0x69,0x64,0x29,0x2c,
    0x20,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x6d,0x61,0x74,0x34,0x20,0x74,0x72,
    0x61,0x6e,0x73,0x6c,0x61,0x74,0x65,0x28,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x5f,0x31,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x65,0x63,0x34,0x28,
    0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,
    0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x31,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x6d,0x61,0x74,0x34,0x20,0x6d,0x61,0x74,0x34,0x5f,0x63,0x61,
    0x73,0x74,0x28,0x76,0x65,0x63,0x34,0x20,0x71,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x31,0x20,0x3d,0x20,0x71,0x2e,
    0x79,0x20,0x2a,0x20,0x28,0x2d,0x32,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x32,0x20,0x3d,0x20,0x71,0x2e,0x7a,
    0x20,0x2a,0x20,0x28,0x2d,0x32,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x33,0x20,0x3d,0x20,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x71,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x34,0x39,0x20,0x3d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,0x20,0x71,
    0x2e,0x7a,0x29,0x20,0x2a,0x20,0x71,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x35,0x36,0x20,0x3d,0x20,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x35,0x38,0x20,0x3d,0x20,0x5f,0x31,0x35,0x36,0x20,0x2a,0x20,0x71,
    0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x37,0x33,0x20,0x3d,0x20,0x28,0x71,0x2e,0x78,0x20,0x2a,0x20,0x28,0x2d,0x32,0x2e,
    0x30,0x29,0x29,0x20,0x2a,0x20,0x71,0x2e,0x78,0x20,0x2b,0x20,0x31,0x2e,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x36,0x20,
    0x3d,0x20,0x5f,0x31,0x34,0x33,0x20,0x2a,0x20,0x71,0x2e,0x77,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x65,
    0x63,0x34,0x28,0x5f,0x33,0x34,0x32,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x20,0x2b,0x20,
    0x28,0x5f,0x33,0x34,0x31,0x20,0x2a,0x20,0x71,0x2e,0x79,0x20,0x2b,0x20,0x31,0x2e,
    0x30,0x29,0x2c,0x20,0x5f,0x31,0x34,0x33,0x20,0x2a,0x20,0x71,0x2e,0x79,0x20,0x2b,
    0x20,0x5f,0x31,0x34,0x39,0x2c,0x20,0x5f,0x31,0x34,0x33,0x20,0x2a,0x20,0x71,0x2e,
    0x7a,0x20,0x2b,0x20,0x28,0x2d,0x5f,0x31,0x35,0x38,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x34,0x33,0x20,0x2a,0x20,0x71,
    0x2e,0x79,0x20,0x2b,0x20,0x28,0x2d,0x5f,0x31,0x34,0x39,0x29,0x2c,0x20,0x5f,0x33,
    0x34,0x32,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x20,0x2b,0x20,0x5f,0x31,0x37,0x33,0x2c,
    0x20,0x5f,0x31,0x35,0x36,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x20,0x2b,0x20,0x5f,0x31,
    0x38,0x36,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,
    0x31,0x34,0x33,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x20,0x2b,0x20,0x5f,0x31,0x35,0x38,
    0x2c,0x20,0x5f,0x31,0x35,0x36,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x20,0x2b,0x20,0x28,
    0x2d,0x5f,0x31,0x38,0x36,0x29,0x2c,0x20,0x5f,0x33,0x34,0x31,0x20,0x2a,0x20,0x71,
    0x2e,0x79,0x20,0x2b,0x20,0x5f,0x31,0x37,0x33,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,
    0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x6e,0x69,0x64,0x20,0x3d,0x20,0x6e,0x6f,0x64,0x65,0x5f,
    0x69,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3d,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x20,0x3d,0x20,0x67,0x65,0x74,
    0x4c,0x6f,0x63,0x61,0x6c,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6e,0x69,0x64,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x74,0x65,0x78,0x65,
    0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x6e,0x6f,0x64,0x65,0x5f,0x6d,0x61,0x74,0x73,
    0x5f,0x68,0x69,0x65,0x72,0x61,0x72,0x63,0x68,0x79,0x2c,0x20,0x69,0x76,0x65,0x63,
    0x32,0x28,0x34,0x2c,0x20,0x6e,0x69,0x64,0x29,0x2c,0x20,0x30,0x29,0x2e,0x78,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,
    0x20,0x3d,0x20,0x30,0x3b,0x20,0x28,0x69,0x20,0x3c,0x20,0x5f,0x32,0x34,0x39,0x2e,
    0x6d,0x61,0x78,0x5f,0x64,0x65,0x70,0x74,0x68,0x29,0x20,0x26,0x26,0x20,0x28,0x6e,
    0x69,0x64,0x20,0x21,0x3d,0x20,0x28,0x2d,0x31,0x29,0x29,0x3b,0x20,0x69,0x2b,0x2b,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x69,
    0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6d,0x6f,0x64,0x65,0x6c,
    0x56,0x69,0x65,0x77,0x20,0x3d,0x20,0x67,0x65,0x74,0x4c,0x6f,0x63,0x61,0x6c,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,0x2a,0x20,0x6d,0x6f,0x64,0x65,0x6c,
    0x56,0x69,0x65,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6e,0x69,
    0x64,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,
    0x63,0x68,0x28,0x6e,0x6f,0x64,0x65,0x5f,0x6d,0x61,0x74,0x73,0x5f,0x68,0x69,0x65,
    0x72,0x61,0x72,0x63,0x68,0x79,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x34,0x2c,
    0x20,0x6e,0x69,0x64,0x29,0x2c,0x20,0x30,0x29,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x20,0x3d,0x20,0x71,0x75,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x6f,
    0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x32,0x34,
    0x39,0x2e,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x74,
    0x72,0x61,0x6e,0x73,0x6c,0x61,0x74,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x29,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x5f,0x63,0x61,0x73,0x74,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x29,0x20,0x2a,0x20,0x5f,0x32,0x34,0x39,0x2e,
    0x69,0x6d,0x61,0x74,0x29,0x20,0x2a,0x20,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,
    0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x4d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,
    0x77,0x20,0x3d,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x6d,0x6f,0x64,0x65,
    0x6c,0x56,0x69,0x65,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x69,0x6e,0x74,0x53,0x69,0x7a,0x65,0x20,0x3d,0x20,0x32,0x2e,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x31,0x34,0x20,0x3d,0x20,0x28,
    0x28,0x5f,0x32,0x34,0x39,0x2e,0x6d,0x61,0x78,0x5f,0x69,0x6e,0x73,0x74,0x61,0x6e,
    0x63,0x65,0x73,0x20,0x2a,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x29,0x20,0x2b,
    0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x69,0x64,0x29,0x20,0x2b,0x20,
    0x5f,0x32,0x34,0x39,0x2e,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x33,0x31,0x34,0x20,
    0x25,0x20,0x32,0x30,0x34,0x38,0x29,0x20,0x2b,0x20,0x30,0x2e,0x35,0x29,0x20,0x2a,
    0x20,0x30,0x2e,0x30,0x30,0x30,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,
    0x28,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,
    0x33,0x31,0x34,0x20,0x2f,0x20,0x32,0x30,0x34,0x38,0x29,0x20,0x2b,0x20,0x30,0x2e,
    0x35,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x30,0x39,0x37,0x36,0x35,0x36,0x32,
    0x35,0x20,0x2b,0x20,0x28,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    layout(location = 0) out highp vec4 NImodelViewMatrix;
    flat in highp mat4 modelView;
    layout(location = 1) out highp vec4 NInormalMatrix;
    flat in highp mat4 iModelView;
    
    void main()
    {
        ivec2 _33 = ivec2(gl_FragCoord.xy - vec2(ivec2(ivec4(gl_FragCoord * vec4(0.5)).xy) * ivec2(2)));
        int _44 = (_33.x * 2) + _33.y;
        if (_44 == 0)
        {
            NImodelViewMatrix = modelView[0];
            NInormalMatrix = vec4(iModelView[0].xyz, 0.0);
        }
        else
        {
            if (_44 == 1)
            {
                NImodelViewMatrix = modelView[1];
                NInormalMatrix = vec4(iModelView[1].xyz, 0.0);
            }
            else
            {
                if (_44 == 2)
                {
                    NImodelViewMatrix = modelView[2];
                    NInormalMatrix = vec4(iModelView[2].xyz, 0.0);
                }
                else
                {
                    NImodelViewMatrix = modelView[3];
                    NInormalMatrix = vec4(0.0);
                }
            }
        }
    }
    
*/
static const char fs_compute_mat_source_glsl300es[1020] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x69,0x6e,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,0x20,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,
    0x65,0x77,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x4e,0x49,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x69,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,0x20,0x69,0x4d,0x6f,0x64,0x65,
    0x6c,0x56,0x69,0x65,0x77,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x33,0x33,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x67,0x6c,0x5f,0x46,
    0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x20,0x2d,0x20,0x76,0x65,
    0x63,0x32,0x28,0x69,0x76,0x65,0x63,0x32,0x28,0x69,0x76,0x65,0x63,0x34,0x28,0x67,
    0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x30,0x2e,0x35,0x29,0x29,0x2e,0x78,0x79,0x29,0x20,0x2a,0x20,0x69,
    0x76,0x65,0x63,0x32,0x28,0x32,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x5f,0x33,0x33,0x2e,0x78,0x20,
    0x2a,0x20,0x32,0x29,0x20,0x2b,0x20,0x5f,0x33,0x33,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x34,0x20,0x3d,0x3d,0x20,0x30,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x4e,0x49,
    0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,
    0x3d,0x20,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x5b,0x30,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x4e,0x49,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x69,0x4d,
    0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x34,0x20,0x3d,0x3d,0x20,0x31,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,
    0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3d,0x20,0x6d,0x6f,0x64,0x65,
    0x6c,0x56,0x69,0x65,0x77,0x5b,0x31,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x4e,0x49,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x69,0x4d,0x6f,0x64,
    0x65,0x6c,0x56,0x69,0x65,0x77,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x34,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x4e,0x49,
    0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,
    0x3d,0x20,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x5b,0x32,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x4e,0x49,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x69,0x4d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,
    0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x4e,0x49,0x6d,0x6f,
    0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3d,0x20,
    0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x5b,0x33,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x4e,0x49,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 gltf_ground_mats[5];
    layout(location = 0) in vec3 x_y_radius;
    layout(location = 1) in vec2 position;
    out vec2 vpos;
    out float dist;
    out float fa;
    
    void main()
    {
        gl_Position = mat4(gltf_ground_mats[0], gltf_ground_mats[1], gltf_ground_mats[2], gltf_ground_mats[3]) * vec4(position.x * x_y_radius.z + x_y_radius.x, position.y * x_y_radius.z + x_y_radius.y, 0.0, 1.0);
        vpos = position;
        dist = length(gltf_ground_mats[4].xyz - vec3(x_y_radius.xy, 0.0));
        float _76 = abs(gltf_ground_mats[4].z);
        fa = 1.0 - (_76 / (length(gltf_ground_mats[4].xyz.xy - x_y_radius.xy) + _76));
    }
    
*/
static const char vs_ground_source_glsl300es[623] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x6c,
    0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x35,
    0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,
    0x78,0x5f,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x70,0x6f,0x73,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x69,0x73,0x74,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x61,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x6d,0x61,0x74,0x34,0x28,0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,
    0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,
    0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x31,0x5d,0x2c,0x20,
    0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,
    0x5b,0x32,0x5d,0x2c,0x20,0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,
    0x5f,0x6d,0x61,0x74,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x20,0x2a,0x20,0x78,0x5f,
    0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2e,0x7a,0x20,0x2b,0x20,0x78,0x5f,0x79,
    0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2e,0x78,0x2c,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x2e,0x79,0x20,0x2a,0x20,0x78,0x5f,0x79,0x5f,0x72,0x61,0x64,0x69,
    0x75,0x73,0x2e,0x7a,0x20,0x2b,0x20,0x78,0x5f,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,
    0x73,0x2e,0x79,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x70,0x6f,0x73,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x74,0x20,0x3d,0x20,
    0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,
    0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x34,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,
    0x20,0x76,0x65,0x63,0x33,0x28,0x78,0x5f,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,
    0x2e,0x78,0x79,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x36,0x20,0x3d,0x20,0x61,0x62,0x73,0x28,
    0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,0x64,0x5f,0x6d,0x61,0x74,0x73,
    0x5b,0x34,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x61,0x20,0x3d,
    0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x5f,0x37,0x36,0x20,0x2f,0x20,0x28,0x6c,
    0x65,0x6e,0x67,0x74,0x68,0x28,0x67,0x6c,0x74,0x66,0x5f,0x67,0x72,0x6f,0x75,0x6e,
    0x64,0x5f,0x6d,0x61,0x74,0x73,0x5b,0x34,0x5d,0x2e,0x78,0x79,0x7a,0x2e,0x78,0x79,
    0x20,0x2d,0x20,0x78,0x5f,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2e,0x78,0x79,
    0x29,0x20,0x2b,0x20,0x5f,0x37,0x36,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    in highp vec2 vpos;
    in highp float dist;
    in highp float fa;
    layout(location = 0) out highp vec4 frag_color;
    
    highp float random(highp vec2 uv)
    {
        return fract(sin(dot(uv, vec2(12.98980045318603515625, 78.233001708984375))) * 43758.546875);
    }
    
    void main()
    {
        highp float _40 = clamp(2.0 / dist, 0.100000001490116119384765625, 0.4000000059604644775390625);
        highp vec2 param = gl_FragCoord.xy;
        highp vec2 param_1 = gl_FragCoord.yx;
        highp vec2 param_2 = gl_FragCoord.xx;
        frag_color = vec4(vec3(0.800000011920928955078125, 0.7599999904632568359375, 0.7200000286102294921875) + (((vec3(random(param), random(param_1), random(param_2)) * _40) * fa) * 0.699999988079071044921875), _40 - exp((length(vpos) - 0.800000011920928955078125) * 10.0));
    }
    
*/
static const char fs_ground_source_glsl300es[826] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x69,
    0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x70,0x6f,
    0x73,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x64,0x69,0x73,0x74,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x61,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x28,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x72,0x61,0x63,0x74,
    0x28,0x73,0x69,0x6e,0x28,0x64,0x6f,0x74,0x28,0x75,0x76,0x2c,0x20,0x76,0x65,0x63,
    0x32,0x28,0x31,0x32,0x2e,0x39,0x38,0x39,0x38,0x30,0x30,0x34,0x35,0x33,0x31,0x38,
    0x36,0x30,0x33,0x35,0x31,0x35,0x36,0x32,0x35,0x2c,0x20,0x37,0x38,0x2e,0x32,0x33,
    0x33,0x30,0x30,0x31,0x37,0x30,0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x29,0x29,0x29,
    0x20,0x2a,0x20,0x34,0x33,0x37,0x35,0x38,0x2e,0x35,0x34,0x36,0x38,0x37,0x35,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x34,0x30,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x32,
    0x2e,0x30,0x20,0x2f,0x20,0x64,0x69,0x73,0x74,0x2c,0x20,0x30,0x2e,0x31,0x30,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,
    0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,
    0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,
    0x39,0x30,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x67,
    0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x76,0x65,0x63,0x33,0x28,0x30,
    0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,
    0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x37,0x35,0x39,
    0x39,0x39,0x39,0x39,0x39,0x30,0x34,0x36,0x33,0x32,0x35,0x36,0x38,0x33,0x35,0x39,
    0x33,0x37,0x35,0x2c,0x20,0x30,0x2e,0x37,0x32,0x30,0x30,0x30,0x30,0x30,0x32,0x38,
    0x36,0x31,0x30,0x32,0x32,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x20,0x2b,
    0x20,0x28,0x28,0x28,0x76,0x65,0x63,0x33,0x28,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x2c,0x20,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x2c,0x20,0x72,0x61,0x6e,0x64,0x6f,0x6d,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x29,0x20,0x2a,0x20,0x5f,0x34,0x30,0x29,
    0x20,0x2a,0x20,0x66,0x61,0x29,0x20,0x2a,0x20,0x30,0x2e,0x36,0x39,0x39,0x39,0x39,
    0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x31,
    0x38,0x37,0x35,0x29,0x2c,0x20,0x5f,0x34,0x30,0x20,0x2d,0x20,0x65,0x78,0x70,0x28,
    0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x76,0x70,0x6f,0x73,0x29,0x20,0x2d,0x20,
    0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,
    0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x20,0x2a,0x20,0x31,0x30,
    0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    struct gltf_mats
    {
        mat4 projectionMatrix;
        mat4 viewMatrix;
        int max_instances;
        int offset;
    };
    
    uniform gltf_mats _16;
    
    uniform highp sampler2D NImodelViewMatrix;
    
    layout(location = 2) in int node_id;
    layout(location = 0) in int instance_id;
    layout(location = 1) in vec3 position;
    
    void main()
    {
        int _31 = ((_16.max_instances * node_id) + instance_id) + _16.offset;
        int _36 = (_31 % 2048) * 2;
        int _40 = (_31 / 2048) * 2;
        int _59 = _40 + 1;
        int _65 = _36 + 1;
        gl_Position = (_16.projectionMatrix * mat4(texelFetch(NImodelViewMatrix, ivec2(_36, _40), 0), texelFetch(NImodelViewMatrix, ivec2(_36, _59), 0), texelFetch(NImodelViewMatrix, ivec2(_65, _40), 0), texelFetch(NImodelViewMatrix, ivec2(_65, _59), 0))) * vec4(position, 1.0);
    }
    
*/
static const char vs_depth_source_glsl300es[790] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,0x72,0x6f,
    0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,
    0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x78,0x5f,
    0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x20,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,
    0x20,0x5f,0x31,0x36,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4e,
    0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,
    0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,0x6e,
    0x6f,0x64,0x65,0x5f,0x69,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,
    0x69,0x6e,0x74,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x69,0x64,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x33,0x31,0x20,0x3d,0x20,0x28,0x28,0x5f,0x31,0x36,0x2e,0x6d,0x61,0x78,0x5f,0x69,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x73,0x20,0x2a,0x20,0x6e,0x6f,0x64,0x65,0x5f,
    0x69,0x64,0x29,0x20,0x2b,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x69,
    0x64,0x29,0x20,0x2b,0x20,0x5f,0x31,0x36,0x2e,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x36,0x20,0x3d,0x20,0x28,
    0x5f,0x33,0x31,0x20,0x25,0x20,0x32,0x30,0x34,0x38,0x29,0x20,0x2a,0x20,0x32,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x34,0x30,0x20,0x3d,0x20,0x28,
    0x5f,0x33,0x31,0x20,0x2f,0x20,0x32,0x30,0x34,0x38,0x29,0x20,0x2a,0x20,0x32,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,0x5f,
    0x34,0x30,0x20,0x2b,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x36,0x35,0x20,0x3d,0x20,0x5f,0x33,0x36,0x20,0x2b,0x20,0x31,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x28,0x5f,0x31,0x36,0x2e,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,
    0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x74,0x65,
    0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,
    0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x69,0x76,0x65,0x63,
    0x32,0x28,0x5f,0x33,0x36,0x2c,0x20,0x5f,0x34,0x30,0x29,0x2c,0x20,0x30,0x29,0x2c,
    0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,
    0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x69,
    0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x36,0x2c,0x20,0x5f,0x35,0x39,0x29,0x2c,0x20,
    0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,
    0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,
    0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x36,0x35,0x2c,0x20,0x5f,0x34,0x30,
    0x29,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,
    0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,
    0x72,0x69,0x78,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x36,0x35,0x2c,0x20,
    0x5f,0x35,0x39,0x29,0x2c,0x20,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    layout(location = 0) out highp float g_depth;
    
    void main()
    {
        g_depth = gl_FragCoord.z;
    }
    
*/
static const char fs_depth_source_glsl300es[158] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    struct gltf_mats
    {
        mat4 projectionMatrix;
        mat4 viewMatrix;
        int max_instances;
        int offset;
    };
    
    uniform gltf_mats _16;
    
    uniform highp sampler2D NImodelViewMatrix;
    uniform highp sampler2D NInormalMatrix;
    
    layout(location = 4) in int node_id;
    layout(location = 0) in int instance_id;
    layout(location = 1) in vec3 position;
    out vec3 vNormal;
    layout(location = 2) in vec3 normal;
    out vec3 vertPos;
    out vec3 vTexCoord3D;
    out vec4 color;
    layout(location = 3) in vec4 color0;
    
    void main()
    {
        int _31 = ((_16.max_instances * node_id) + instance_id) + _16.offset;
        int _36 = (_31 % 2048) * 2;
        int _40 = (_31 / 2048) * 2;
        ivec2 _51 = ivec2(_36, _40);
        int _59 = _40 + 1;
        ivec2 _60 = ivec2(_36, _59);
        int _65 = _36 + 1;
        ivec2 _67 = ivec2(_65, _40);
        mat4 _100 = mat4(texelFetch(NImodelViewMatrix, _51, 0), texelFetch(NImodelViewMatrix, _60, 0), texelFetch(NImodelViewMatrix, _67, 0), texelFetch(NImodelViewMatrix, ivec2(_65, _59), 0));
        vec4 _151 = vec4(position, 1.0);
        vec4 _152 = _100 * _151;
        vNormal = normalize(mat3(vec3(texelFetch(NInormalMatrix, _51, 0).xyz), vec3(texelFetch(NInormalMatrix, _60, 0).xyz), vec3(texelFetch(NInormalMatrix, _67, 0).xyz)) * normal);
        vertPos = _152.xyz / vec3(_152.w);
        vTexCoord3D = (position + vec3(0.0, 1.0, 1.0)) * 0.100000001490116119384765625;
        gl_Position = (_16.projectionMatrix * _100) * _151;
        color = vec4(0.4000000059604644775390625, 0.4000000059604644775390625, 0.4000000059604644775390625, 1.0) + (color0 * 0.60000002384185791015625);
    }
    
*/
static const char gltf_vs_source_glsl300es[1564] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,0x72,0x6f,
    0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,
    0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x78,0x5f,
    0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x20,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,
    0x20,0x5f,0x31,0x36,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4e,
    0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,
    0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4e,0x49,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,
    0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,0x69,0x6e,0x73,0x74,
    0x61,0x6e,0x63,0x65,0x5f,0x69,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x65,0x72,0x74,0x50,0x6f,0x73,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x33,0x44,0x3b,0x0a,0x6f,
    0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x30,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x31,0x20,0x3d,
    0x20,0x28,0x28,0x5f,0x31,0x36,0x2e,0x6d,0x61,0x78,0x5f,0x69,0x6e,0x73,0x74,0x61,
    0x6e,0x63,0x65,0x73,0x20,0x2a,0x20,0x6e,0x6f,0x64,0x65,0x5f,0x69,0x64,0x29,0x20,
    0x2b,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x69,0x64,0x29,0x20,0x2b,
    0x20,0x5f,0x31,0x36,0x2e,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x36,0x20,0x3d,0x20,0x28,0x5f,0x33,0x31,0x20,
    0x25,0x20,0x32,0x30,0x34,0x38,0x29,0x20,0x2a,0x20,0x32,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x34,0x30,0x20,0x3d,0x20,0x28,0x5f,0x33,0x31,0x20,
    0x2f,0x20,0x32,0x30,0x34,0x38,0x29,0x20,0x2a,0x20,0x32,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x5f,0x35,0x31,0x20,0x3d,0x20,0x69,0x76,0x65,
    0x63,0x32,0x28,0x5f,0x33,0x36,0x2c,0x20,0x5f,0x34,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,0x5f,0x34,0x30,0x20,
    0x2b,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x5f,
    0x36,0x30,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x36,0x2c,0x20,
    0x5f,0x35,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x36,
    0x35,0x20,0x3d,0x20,0x5f,0x33,0x36,0x20,0x2b,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x5f,0x36,0x37,0x20,0x3d,0x20,0x69,0x76,0x65,
    0x63,0x32,0x28,0x5f,0x36,0x35,0x2c,0x20,0x5f,0x34,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x31,0x30,0x30,0x20,0x3d,0x20,0x6d,0x61,
    0x74,0x34,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,
    0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,
    0x20,0x5f,0x35,0x31,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,
    0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,
    0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,0x36,0x30,0x2c,0x20,0x30,0x29,0x2c,
    0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,
    0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,
    0x36,0x37,0x2c,0x20,0x30,0x29,0x2c,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,
    0x63,0x68,0x28,0x4e,0x49,0x6d,0x6f,0x64,0x65,0x6c,0x56,0x69,0x65,0x77,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x36,0x35,0x2c,
    0x20,0x5f,0x35,0x39,0x29,0x2c,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,0x31,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,0x32,0x20,0x3d,
    0x20,0x5f,0x31,0x30,0x30,0x20,0x2a,0x20,0x5f,0x31,0x35,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x6d,0x61,0x74,0x33,0x28,0x76,0x65,0x63,0x33,0x28,
    0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,0x35,0x31,0x2c,0x20,
    0x30,0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,
    0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,0x36,0x30,0x2c,0x20,0x30,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x65,
    0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x4e,0x49,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x4d,
    0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,0x36,0x37,0x2c,0x20,0x30,0x29,0x2e,0x78,
    0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x50,0x6f,0x73,0x20,0x3d,0x20,0x5f,0x31,
    0x35,0x32,0x2e,0x78,0x79,0x7a,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x31,
    0x35,0x32,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x33,0x44,0x20,0x3d,0x20,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,
    0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x5f,0x31,
    0x36,0x2e,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x4d,0x61,0x74,0x72,
    0x69,0x78,0x20,0x2a,0x20,0x5f,0x31,0x30,0x30,0x29,0x20,0x2a,0x20,0x5f,0x31,0x35,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,
    0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x2c,
    0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,
    0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,
    0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,
    0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x20,
    0x2b,0x20,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x20,0x2a,0x20,0x30,0x2e,0x36,0x30,
    0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,
    0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    struct gltf_mats
    {
        highp mat4 projectionMatrix;
        highp mat4 viewMatrix;
        int max_instances;
        int offset;
    };
    
    uniform gltf_mats _505;
    
    in highp vec3 vTexCoord3D;
    in highp vec4 color;
    in highp vec3 vNormal;
    in highp vec3 vertPos;
    layout(location = 0) out highp vec4 frag_color;
    layout(location = 1) out highp float g_depth;
    layout(location = 2) out highp vec4 out_normal;
    
    highp vec4 permute(highp vec4 x)
    {
        return mod(((x * 34.0) + vec4(1.0)) * x, vec4(289.0));
    }
    
    highp vec4 taylorInvSqrt(highp vec4 r)
    {
        return vec4(1.792842864990234375) - (r * 0.8537347316741943359375);
    }
    
    highp float snoise(highp vec3 v)
    {
        highp vec3 _56 = floor(v + vec3(dot(v, vec3(0.3333333432674407958984375))));
        highp vec3 _66 = (v - _56) + vec3(dot(_56, vec3(0.16666667163372039794921875)));
        highp vec3 _71 = step(_66.yzx, _66);
        highp vec3 _79 = (vec3(1.0) - _71).zxy;
        highp vec3 _80 = min(_71, _79);
        highp vec3 _85 = max(_71, _79);
        highp vec3 _90 = (_66 - _80) + vec3(0.16666667163372039794921875);
        highp vec3 _95 = (_66 - _85) + vec3(0.3333333432674407958984375);
        highp vec3 _102 = _66 + vec3(-0.5);
        highp vec3 _105 = mod(_56, vec3(289.0));
        highp vec4 param = vec4(_105.z) + vec4(0.0, _80.z, _85.z, 1.0);
        highp vec4 param_1 = (permute(param) + vec4(_105.y)) + vec4(0.0, _80.y, _85.y, 1.0);
        highp vec4 param_2 = (permute(param_1) + vec4(_105.x)) + vec4(0.0, _80.x, _85.x, 1.0);
        highp vec4 _147 = permute(param_2);
        highp vec4 _169 = _147 - (floor((_147 * 0.14285714924335479736328125) * 0.14285714924335479736328125) * 49.0);
        highp vec4 _175 = floor(_169 * 0.14285714924335479736328125);
        highp vec4 _190 = (_175 * 0.2857142984867095947265625) + vec4(-0.928571403026580810546875);
        highp vec4 _198 = (floor(_169 - (_175 * 7.0)) * 0.2857142984867095947265625) + vec4(-0.928571403026580810546875);
        highp vec4 _206 = (vec4(1.0) - abs(_190)) - abs(_198);
        highp vec4 _217 = vec4(_190.xy, _198.xy);
        highp vec4 _227 = vec4(_190.zw, _198.zw);
        highp vec4 _244 = -step(_206, vec4(0.0));
        highp vec4 _253 = ((floor(_217) * 2.0) + vec4(1.0)).xzyw * _244.xxyy + _217.xzyw;
        highp vec4 _262 = ((floor(_227) * 2.0) + vec4(1.0)).xzyw * _244.zzww + _227.xzyw;
        highp vec3 _270 = vec3(_253.xy, _206.x);
        highp vec3 p0 = _270;
        highp vec3 _278 = vec3(_253.zw, _206.y);
        highp vec3 p1 = _278;
        highp vec3 _286 = vec3(_262.xy, _206.z);
        highp vec3 p2 = _286;
        highp vec3 _295 = vec3(_262.zw, _206.w);
        highp vec3 p3 = _295;
        highp vec4 param_3 = vec4(dot(_270, _270), dot(_278, _278), dot(_286, _286), dot(_295, _295));
        highp vec4 _311 = taylorInvSqrt(param_3);
        highp vec3 _314 = p0;
        highp vec3 _315 = _314 * _311.x;
        p0 = _315;
        highp vec3 _318 = p1;
        highp vec3 _319 = _318 * _311.y;
        p1 = _319;
        highp vec3 _322 = p2;
        highp vec3 _323 = _322 * _311.z;
        p2 = _323;
        highp vec3 _326 = p3;
        highp vec3 _327 = _326 * _311.w;
        p3 = _327;
        highp vec4 _346 = max(vec4(0.60000002384185791015625) - vec4(dot(_66, _66), dot(_90, _90), dot(_95, _95), dot(_102, _102)), vec4(0.0));
        highp vec4 _349 = _346 * _346;
        return 42.0 * dot(_349 * _349, vec4(dot(_315, _66), dot(_319, _90), dot(_323, _95), dot(_327, _102)));
    }
    
    highp float heightMap(highp vec3 coord)
    {
        highp vec3 param = coord;
        highp float n = abs(snoise(param));
        highp vec3 param_1 = coord * 2.0;
        n = 0.25 * abs(snoise(param_1)) + n;
        highp vec3 param_2 = coord * 4.0;
        n = 0.25 * abs(snoise(param_2)) + n;
        highp vec3 param_3 = coord * 8.0;
        n = 0.125 * abs(snoise(param_3)) + n;
        highp vec3 param_4 = coord * 16.0;
        highp float _412 = n;
        highp float _413 = 0.0625 * abs(snoise(param_4)) + _412;
        n = _413;
        return _413;
    }
    
    void main()
    {
        highp vec3 param = vTexCoord3D;
        highp float _422 = heightMap(param);
        highp float _677 = -_422;
        highp vec3 param_1 = vTexCoord3D + vec3(0.20000000298023223876953125, 0.0, 0.0);
        highp float _457 = heightMap(param_1);
        highp vec3 param_2 = vTexCoord3D + vec3(0.0, 0.20000000298023223876953125, 0.0);
        highp float _463 = heightMap(param_2);
        highp vec3 param_3 = vTexCoord3D + vec3(0.0, 0.0, 0.20000000298023223876953125);
        highp float _469 = heightMap(param_3);
        highp vec3 _488 = normalize((-(vec3(_422 * 0.100000001490116119384765625 + (-_457), _422 * 0.100000001490116119384765625 + (-_463), _422 * 0.100000001490116119384765625 + (-_469)) * 0.004999999888241291046142578125)) * vec3(5.0) + vNormal);
        highp float _499 = clamp(1.5 / sqrt(abs(vertPos.z)), 0.0, 1.0);
        highp vec3 _521 = normalize(normalize((_505.viewMatrix * vec4(0.300000011920928955078125, 0.300000011920928955078125, 1.0, 0.0)) + vec4(-3.0, 3.0, 10.0, 0.0)).xyz);
        highp vec3 _533 = normalize(vec3(0.0, 0.0, 1.0));
        highp vec3 vLightWeighting = (vec3(0.25) + vec3(clamp(dot(_488, _521) * 0.5 + 0.5, 0.0, 1.5))) + vec3(clamp(dot(_488, _533) * 0.5 + 0.5, 0.0, 1.5) * _499);
        highp vec3 _573 = normalize(vertPos);
        highp float _576 = dot(_488, normalize(_521 - _573));
        highp float dirSpecularWeight_top = 0.0;
        if (_576 >= 0.0)
        {
            dirSpecularWeight_top = pow(_576, 160.0) * 0.699999988079071044921875;
        }
        highp float _597 = dot(_488, normalize(vec3(0.89442718029022216796875, -0.447213590145111083984375, 0.0) - _573));
        highp float dirSpecularWeight_keep = 0.0;
        if (_597 >= 0.0)
        {
            dirSpecularWeight_keep = pow(_597, 300.0);
        }
        highp vec3 _630 = vLightWeighting;
        highp vec3 _631 = _630 + ((((vec3(0.5) + vec3(_457, _463, _469)) * ((dirSpecularWeight_top + pow(1.0 - abs(dot(_488, _573)), 15.0)) + dirSpecularWeight_keep)) * 0.699999988079071044921875) * _499);
        vLightWeighting = _631;
        highp vec3 _638 = (color.xyz * vec3(_677 * 0.0300000011920928955078125 + color.x, _677 * 0.0400000028312206268310546875 + color.y, _677 * 0.080000005662441253662109375 + color.z)) * _631 + (vec3(1.0, 0.0, 1.0) * clamp((dot(_488, normalize((_505.viewMatrix * vec4(0.0, 0.0, -1.0, 0.0)).xyz)) * clamp(exp(-vertPos.y), 0.0, 1.0)) * 0.100000001490116119384765625, 0.0, 1.0));
        frag_color = vec4(_638, 1.0);
        g_depth = gl_FragCoord.z;
        out_normal = vec4(vNormal, 1.0);
    }
    
*/
static const char gltf_fs_source_glsl300es[6289] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,
    0x20,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,0x74,
    0x34,0x20,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x78,0x5f,0x69,0x6e,0x73,0x74,0x61,0x6e,
    0x63,0x65,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x67,0x6c,0x74,0x66,0x5f,0x6d,0x61,0x74,0x73,0x20,0x5f,0x35,0x30,0x35,0x3b,
    0x0a,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x33,0x44,0x3b,0x0a,0x69,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x50,0x6f,0x73,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x67,0x5f,0x64,0x65,0x70,0x74,0x68,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x6f,0x75,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x65,0x72,0x6d,0x75,0x74,
    0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x78,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x6f,0x64,
    0x28,0x28,0x28,0x78,0x20,0x2a,0x20,0x33,0x34,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,
    0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x78,0x2c,0x20,0x76,
    0x65,0x63,0x34,0x28,0x32,0x38,0x39,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x74,0x61,0x79,0x6c,0x6f,
    0x72,0x49,0x6e,0x76,0x53,0x71,0x72,0x74,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x37,0x39,0x32,0x38,0x34,
    0x32,0x38,0x36,0x34,0x39,0x39,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x29,0x20,0x2d,
    0x20,0x28,0x72,0x20,0x2a,0x20,0x30,0x2e,0x38,0x35,0x33,0x37,0x33,0x34,0x37,0x33,
    0x31,0x36,0x37,0x34,0x31,0x39,0x34,0x33,0x33,0x35,0x39,0x33,0x37,0x35,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x73,0x6e,0x6f,0x69,0x73,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x36,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x6f,
    0x72,0x28,0x76,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,0x74,0x28,0x76,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x33,0x33,0x33,0x33,0x33,0x33,0x33,
    0x34,0x33,0x32,0x36,0x37,0x34,0x34,0x30,0x37,0x39,0x35,0x38,0x39,0x38,0x34,0x33,
    0x37,0x35,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x36,0x20,0x3d,0x20,0x28,0x76,0x20,
    0x2d,0x20,0x5f,0x35,0x36,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,
    0x74,0x28,0x5f,0x35,0x36,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x31,0x36,
    0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,0x33,0x33,0x37,0x32,0x30,0x33,0x39,0x37,
    0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x31,0x20,
    0x3d,0x20,0x73,0x74,0x65,0x70,0x28,0x5f,0x36,0x36,0x2e,0x79,0x7a,0x78,0x2c,0x20,
    0x5f,0x36,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x39,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x33,
    0x28,0x31,0x2e,0x30,0x29,0x20,0x2d,0x20,0x5f,0x37,0x31,0x29,0x2e,0x7a,0x78,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x38,0x30,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x37,0x31,0x2c,0x20,
    0x5f,0x37,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x38,0x35,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x5f,
    0x37,0x31,0x2c,0x20,0x5f,0x37,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x39,0x30,0x20,0x3d,0x20,0x28,
    0x5f,0x36,0x36,0x20,0x2d,0x20,0x5f,0x38,0x30,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,
    0x33,0x28,0x30,0x2e,0x31,0x36,0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,0x33,0x33,
    0x37,0x32,0x30,0x33,0x39,0x37,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x39,0x35,0x20,0x3d,0x20,0x28,0x5f,0x36,0x36,0x20,0x2d,0x20,0x5f,0x38,0x35,
    0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x33,0x33,0x33,0x33,0x33,
    0x33,0x33,0x34,0x33,0x32,0x36,0x37,0x34,0x34,0x30,0x37,0x39,0x35,0x38,0x39,0x38,
    0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x32,0x20,0x3d,0x20,0x5f,0x36,0x36,
    0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,
    0x30,0x35,0x20,0x3d,0x20,0x6d,0x6f,0x64,0x28,0x5f,0x35,0x36,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x28,0x32,0x38,0x39,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x30,0x35,0x2e,0x7a,0x29,0x20,
    0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x5f,0x38,0x30,0x2e,
    0x7a,0x2c,0x20,0x5f,0x38,0x35,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x28,0x70,0x65,0x72,0x6d,0x75,0x74,
    0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,
    0x5f,0x31,0x30,0x35,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x5f,0x38,0x30,0x2e,0x79,0x2c,0x20,0x5f,0x38,0x35,0x2e,
    0x79,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x28,0x70,0x65,0x72,0x6d,0x75,0x74,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x30,0x35,0x2e,
    0x78,0x29,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,
    0x5f,0x38,0x30,0x2e,0x78,0x2c,0x20,0x5f,0x38,0x35,0x2e,0x78,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x31,0x34,0x37,0x20,0x3d,0x20,0x70,0x65,0x72,0x6d,0x75,0x74,
    0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x36,0x39,0x20,
    0x3d,0x20,0x5f,0x31,0x34,0x37,0x20,0x2d,0x20,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,
    0x28,0x5f,0x31,0x34,0x37,0x20,0x2a,0x20,0x30,0x2e,0x31,0x34,0x32,0x38,0x35,0x37,
    0x31,0x34,0x39,0x32,0x34,0x33,0x33,0x35,0x34,0x37,0x39,0x37,0x33,0x36,0x33,0x32,
    0x38,0x31,0x32,0x35,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x34,0x32,0x38,0x35,0x37,
    0x31,0x34,0x39,0x32,0x34,0x33,0x33,0x35,0x34,0x37,0x39,0x37,0x33,0x36,0x33,0x32,
    0x38,0x31,0x32,0x35,0x29,0x20,0x2a,0x20,0x34,0x39,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,
    0x37,0x35,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x31,0x36,0x39,0x20,
    0x2a,0x20,0x30,0x2e,0x31,0x34,0x32,0x38,0x35,0x37,0x31,0x34,0x39,0x32,0x34,0x33,
    0x33,0x35,0x34,0x37,0x39,0x37,0x33,0x36,0x33,0x32,0x38,0x31,0x32,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x31,0x39,0x30,0x20,0x3d,0x20,0x28,0x5f,0x31,0x37,0x35,0x20,0x2a,0x20,0x30,
    0x2e,0x32,0x38,0x35,0x37,0x31,0x34,0x32,0x39,0x38,0x34,0x38,0x36,0x37,0x30,0x39,
    0x35,0x39,0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,
    0x63,0x34,0x28,0x2d,0x30,0x2e,0x39,0x32,0x38,0x35,0x37,0x31,0x34,0x30,0x33,0x30,
    0x32,0x36,0x35,0x38,0x30,0x38,0x31,0x30,0x35,0x34,0x36,0x38,0x37,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x31,0x39,0x38,0x20,0x3d,0x20,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x31,
    0x36,0x39,0x20,0x2d,0x20,0x28,0x5f,0x31,0x37,0x35,0x20,0x2a,0x20,0x37,0x2e,0x30,
    0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x32,0x38,0x35,0x37,0x31,0x34,0x32,0x39,0x38,
    0x34,0x38,0x36,0x37,0x30,0x39,0x35,0x39,0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,
    0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x2d,0x30,0x2e,0x39,0x32,0x38,0x35,
    0x37,0x31,0x34,0x30,0x33,0x30,0x32,0x36,0x35,0x38,0x30,0x38,0x31,0x30,0x35,0x34,
    0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x30,0x36,0x20,0x3d,0x20,0x28,0x76,0x65,
    0x63,0x34,0x28,0x31,0x2e,0x30,0x29,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x5f,0x31,
    0x39,0x30,0x29,0x29,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x5f,0x31,0x39,0x38,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x32,0x31,0x37,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x39,
    0x30,0x2e,0x78,0x79,0x2c,0x20,0x5f,0x31,0x39,0x38,0x2e,0x78,0x79,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x32,0x32,0x37,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x39,0x30,0x2e,
    0x7a,0x77,0x2c,0x20,0x5f,0x31,0x39,0x38,0x2e,0x7a,0x77,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,
    0x34,0x20,0x3d,0x20,0x2d,0x73,0x74,0x65,0x70,0x28,0x5f,0x32,0x30,0x36,0x2c,0x20,
    0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x35,0x33,0x20,
    0x3d,0x20,0x28,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x32,0x31,0x37,0x29,0x20,
    0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,
    0x30,0x29,0x29,0x2e,0x78,0x7a,0x79,0x77,0x20,0x2a,0x20,0x5f,0x32,0x34,0x34,0x2e,
    0x78,0x78,0x79,0x79,0x20,0x2b,0x20,0x5f,0x32,0x31,0x37,0x2e,0x78,0x7a,0x79,0x77,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x32,0x36,0x32,0x20,0x3d,0x20,0x28,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,
    0x5f,0x32,0x32,0x37,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,
    0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x7a,0x79,0x77,0x20,0x2a,
    0x20,0x5f,0x32,0x34,0x34,0x2e,0x7a,0x7a,0x77,0x77,0x20,0x2b,0x20,0x5f,0x32,0x32,
    0x37,0x2e,0x78,0x7a,0x79,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x37,0x30,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x33,0x28,0x5f,0x32,0x35,0x33,0x2e,0x78,0x79,0x2c,0x20,0x5f,0x32,0x30,0x36,
    0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x30,0x20,0x3d,0x20,0x5f,0x32,0x37,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,
    0x37,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x35,0x33,0x2e,0x7a,
    0x77,0x2c,0x20,0x5f,0x32,0x30,0x36,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x31,0x20,0x3d,0x20,
    0x5f,0x32,0x37,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x38,0x36,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,
    0x28,0x5f,0x32,0x36,0x32,0x2e,0x78,0x79,0x2c,0x20,0x5f,0x32,0x30,0x36,0x2e,0x7a,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x32,0x20,0x3d,0x20,0x5f,0x32,0x38,0x36,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x39,0x35,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x36,0x32,0x2e,0x7a,0x77,0x2c,
    0x20,0x5f,0x32,0x30,0x36,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x33,0x20,0x3d,0x20,0x5f,0x32,
    0x39,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x28,0x64,0x6f,0x74,0x28,0x5f,0x32,0x37,0x30,0x2c,0x20,0x5f,0x32,0x37,0x30,
    0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x37,0x38,0x2c,0x20,0x5f,0x32,0x37,
    0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x38,0x36,0x2c,0x20,0x5f,0x32,
    0x38,0x36,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x39,0x35,0x2c,0x20,0x5f,
    0x32,0x39,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x31,0x31,0x20,0x3d,0x20,0x74,0x61,0x79,
    0x6c,0x6f,0x72,0x49,0x6e,0x76,0x53,0x71,0x72,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x33,0x31,0x34,0x20,0x3d,0x20,0x70,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,
    0x31,0x35,0x20,0x3d,0x20,0x5f,0x33,0x31,0x34,0x20,0x2a,0x20,0x5f,0x33,0x31,0x31,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x30,0x20,0x3d,0x20,0x5f,0x33,0x31,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x33,0x31,0x38,0x20,0x3d,0x20,0x70,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x31,0x39,
    0x20,0x3d,0x20,0x5f,0x33,0x31,0x38,0x20,0x2a,0x20,0x5f,0x33,0x31,0x31,0x2e,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x31,0x20,0x3d,0x20,0x5f,0x33,0x31,0x39,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x33,0x32,0x32,0x20,0x3d,0x20,0x70,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x32,0x33,0x20,0x3d,
    0x20,0x5f,0x33,0x32,0x32,0x20,0x2a,0x20,0x5f,0x33,0x31,0x31,0x2e,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x70,0x32,0x20,0x3d,0x20,0x5f,0x33,0x32,0x33,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,
    0x32,0x36,0x20,0x3d,0x20,0x70,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x32,0x37,0x20,0x3d,0x20,0x5f,
    0x33,0x32,0x36,0x20,0x2a,0x20,0x5f,0x33,0x31,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x70,0x33,0x20,0x3d,0x20,0x5f,0x33,0x32,0x37,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x34,0x36,
    0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x36,0x30,
    0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,
    0x31,0x35,0x36,0x32,0x35,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x34,0x28,0x64,0x6f,
    0x74,0x28,0x5f,0x36,0x36,0x2c,0x20,0x5f,0x36,0x36,0x29,0x2c,0x20,0x64,0x6f,0x74,
    0x28,0x5f,0x39,0x30,0x2c,0x20,0x5f,0x39,0x30,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x39,0x35,0x2c,0x20,0x5f,0x39,0x35,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,
    0x31,0x30,0x32,0x2c,0x20,0x5f,0x31,0x30,0x32,0x29,0x29,0x2c,0x20,0x76,0x65,0x63,
    0x34,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x34,0x39,0x20,0x3d,0x20,0x5f,
    0x33,0x34,0x36,0x20,0x2a,0x20,0x5f,0x33,0x34,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x34,0x32,0x2e,0x30,0x20,0x2a,0x20,0x64,0x6f,
    0x74,0x28,0x5f,0x33,0x34,0x39,0x20,0x2a,0x20,0x5f,0x33,0x34,0x39,0x2c,0x20,0x76,
    0x65,0x63,0x34,0x28,0x64,0x6f,0x74,0x28,0x5f,0x33,0x31,0x35,0x2c,0x20,0x5f,0x36,
    0x36,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x33,0x31,0x39,0x2c,0x20,0x5f,0x39,
    0x30,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x33,0x32,0x33,0x2c,0x20,0x5f,0x39,
    0x35,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x33,0x32,0x37,0x2c,0x20,0x5f,0x31,
    0x30,0x32,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x68,0x65,0x69,0x67,0x68,0x74,0x4d,0x61,0x70,0x28,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,0x6f,0x72,0x64,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x63,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x6e,0x20,0x3d,0x20,0x61,0x62,0x73,0x28,0x73,0x6e,0x6f,0x69,0x73,0x65,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x63,0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x32,0x2e,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6e,0x20,0x3d,0x20,0x30,0x2e,0x32,0x35,0x20,0x2a,0x20,0x61,
    0x62,0x73,0x28,0x73,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x29,0x29,0x20,0x2b,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x63,0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x34,0x2e,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6e,0x20,0x3d,0x20,0x30,0x2e,0x32,0x35,0x20,0x2a,0x20,0x61,0x62,
    0x73,0x28,0x73,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x29,0x29,0x20,0x2b,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,
    0x20,0x63,0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x38,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6e,0x20,0x3d,0x20,0x30,0x2e,0x31,0x32,0x35,0x20,0x2a,0x20,0x61,0x62,
    0x73,0x28,0x73,0x6e,0x6f,0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,
    0x29,0x29,0x20,0x2b,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,
    0x20,0x63,0x6f,0x6f,0x72,0x64,0x20,0x2a,0x20,0x31,0x36,0x2e,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x34,0x31,0x32,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x31,0x33,0x20,0x3d,0x20,
    0x30,0x2e,0x30,0x36,0x32,0x35,0x20,0x2a,0x20,0x61,0x62,0x73,0x28,0x73,0x6e,0x6f,
    0x69,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x29,0x20,0x2b,0x20,
    0x5f,0x34,0x31,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6e,0x20,0x3d,0x20,0x5f,0x34,
    0x31,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,
    0x34,0x31,0x33,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x54,0x65,
    0x78,0x43,0x6f,0x6f,0x72,0x64,0x33,0x44,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x32,0x32,0x20,0x3d,
    0x20,0x68,0x65,0x69,0x67,0x68,0x74,0x4d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x36,0x37,0x37,0x20,0x3d,0x20,0x2d,0x5f,0x34,0x32,0x32,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x33,0x44,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x32,
    0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,
    0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x35,0x37,0x20,0x3d,0x20,0x68,0x65,0x69,
    0x67,0x68,0x74,0x4d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x33,0x44,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,
    0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x36,0x33,0x20,0x3d,0x20,0x68,0x65,0x69,
    0x67,0x68,0x74,0x4d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x33,0x44,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,
    0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,
    0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x36,0x39,0x20,0x3d,0x20,0x68,0x65,0x69,
    0x67,0x68,0x74,0x4d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x34,0x38,0x38,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x28,0x2d,0x28,0x76,0x65,0x63,0x33,0x28,0x5f,0x34,0x32,0x32,0x20,0x2a,0x20,
    0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,
    0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,
    0x28,0x2d,0x5f,0x34,0x35,0x37,0x29,0x2c,0x20,0x5f,0x34,0x32,0x32,0x20,0x2a,0x20,
    0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,
    0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,
    0x28,0x2d,0x5f,0x34,0x36,0x33,0x29,0x2c,0x20,0x5f,0x34,0x32,0x32,0x20,0x2a,0x20,
    0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,
    0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,
    0x28,0x2d,0x5f,0x34,0x36,0x39,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x34,
    0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x38,0x32,0x34,0x31,0x32,0x39,0x31,0x30,
    0x34,0x36,0x31,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x29,0x29,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x33,0x28,0x35,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x39,0x39,0x20,0x3d,0x20,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x31,0x2e,0x35,0x20,0x2f,0x20,0x73,0x71,0x72,0x74,0x28,0x61,0x62,
    0x73,0x28,0x76,0x65,0x72,0x74,0x50,0x6f,0x73,0x2e,0x7a,0x29,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x32,0x31,0x20,0x3d,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x28,0x5f,0x35,0x30,0x35,0x2e,0x76,0x69,0x65,0x77,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x33,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,0x30,
    0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,
    0x32,0x35,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x20,0x2b,
    0x20,0x76,0x65,0x63,0x34,0x28,0x2d,0x33,0x2e,0x30,0x2c,0x20,0x33,0x2e,0x30,0x2c,
    0x20,0x31,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x35,0x33,0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4c,0x69,0x67,0x68,0x74,0x57,0x65,
    0x69,0x67,0x68,0x74,0x69,0x6e,0x67,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x32,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x38,0x38,0x2c,0x20,0x5f,0x35,0x32,
    0x31,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,0x35,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x35,0x29,0x29,0x29,0x20,0x2b,0x20,0x76,0x65,
    0x63,0x33,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x38,
    0x38,0x2c,0x20,0x5f,0x35,0x33,0x33,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,
    0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x35,0x29,0x20,
    0x2a,0x20,0x5f,0x34,0x39,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x37,0x33,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x72,0x74,0x50,0x6f,0x73,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x35,0x37,0x36,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x34,
    0x38,0x38,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x35,
    0x32,0x31,0x20,0x2d,0x20,0x5f,0x35,0x37,0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x69,0x72,
    0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x57,0x65,0x69,0x67,0x68,0x74,0x5f,0x74,
    0x6f,0x70,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x35,0x37,0x36,0x20,0x3e,0x3d,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x72,
    0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x57,0x65,0x69,0x67,0x68,0x74,0x5f,0x74,
    0x6f,0x70,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x5f,0x35,0x37,0x36,0x2c,0x20,0x31,
    0x36,0x30,0x2e,0x30,0x29,0x20,0x2a,0x20,0x30,0x2e,0x36,0x39,0x39,0x39,0x39,0x39,
    0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x31,0x38,
    0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x39,0x37,0x20,0x3d,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x34,0x38,0x38,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x38,0x39,0x34,0x34,
    0x32,0x37,0x31,0x38,0x30,0x32,0x39,0x30,0x32,0x32,0x32,0x31,0x36,0x37,0x39,0x36,
    0x38,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x34,0x34,0x37,0x32,0x31,0x33,0x35,0x39,
    0x30,0x31,0x34,0x35,0x31,0x31,0x31,0x30,0x38,0x33,0x39,0x38,0x34,0x33,0x37,0x35,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x20,0x2d,0x20,0x5f,0x35,0x37,0x33,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x64,0x69,0x72,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x57,0x65,0x69,0x67,
    0x68,0x74,0x5f,0x6b,0x65,0x65,0x70,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x37,0x20,0x3e,0x3d,0x20,0x30,
    0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x64,0x69,0x72,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x57,0x65,0x69,
    0x67,0x68,0x74,0x5f,0x6b,0x65,0x65,0x70,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x5f,
    0x35,0x39,0x37,0x2c,0x20,0x33,0x30,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x36,0x33,0x30,0x20,0x3d,0x20,0x76,0x4c,0x69,0x67,0x68,0x74,0x57,
    0x65,0x69,0x67,0x68,0x74,0x69,0x6e,0x67,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x33,0x31,0x20,0x3d,0x20,
    0x5f,0x36,0x33,0x30,0x20,0x2b,0x20,0x28,0x28,0x28,0x28,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x34,0x35,0x37,
    0x2c,0x20,0x5f,0x34,0x36,0x33,0x2c,0x20,0x5f,0x34,0x36,0x39,0x29,0x29,0x20,0x2a,
    0x20,0x28,0x28,0x64,0x69,0x72,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x57,0x65,
    0x69,0x67,0x68,0x74,0x5f,0x74,0x6f,0x70,0x20,0x2b,0x20,0x70,0x6f,0x77,0x28,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x38,
    0x38,0x2c,0x20,0x5f,0x35,0x37,0x33,0x29,0x29,0x2c,0x20,0x31,0x35,0x2e,0x30,0x29,
    0x29,0x20,0x2b,0x20,0x64,0x69,0x72,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x57,
    0x65,0x69,0x67,0x68,0x74,0x5f,0x6b,0x65,0x65,0x70,0x29,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x36,0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,
    0x30,0x34,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x20,0x2a,0x20,0x5f,0x34,0x39,
    0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x4c,0x69,0x67,0x68,0x74,0x57,0x65,
    0x69,0x67,0x68,0x74,0x69,0x6e,0x67,0x20,0x3d,0x20,0x5f,0x36,0x33,0x31,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x36,0x33,0x38,0x20,0x3d,0x20,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x36,0x37,0x37,0x20,0x2a,0x20,0x30,
    0x2e,0x30,0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,
    0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x20,0x2b,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x2e,0x78,0x2c,0x20,0x5f,0x36,0x37,0x37,0x20,0x2a,0x20,0x30,0x2e,0x30,
    0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x38,0x33,0x31,0x32,0x32,0x30,0x36,0x32,
    0x36,0x38,0x33,0x31,0x30,0x35,0x34,0x36,0x38,0x37,0x35,0x20,0x2b,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x2e,0x79,0x2c,0x20,0x5f,0x36,0x37,0x37,0x20,0x2a,0x20,0x30,0x2e,
    0x30,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x36,0x36,0x32,0x34,0x34,0x31,0x32,
    0x35,0x33,0x36,0x36,0x32,0x31,0x30,0x39,0x33,0x37,0x35,0x20,0x2b,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x2e,0x7a,0x29,0x29,0x20,0x2a,0x20,0x5f,0x36,0x33,0x31,0x20,0x2b,
    0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x64,
    0x6f,0x74,0x28,0x5f,0x34,0x38,0x38,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x28,0x5f,0x35,0x30,0x35,0x2e,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,
    0x72,0x69,0x78,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x65,
    0x78,0x70,0x28,0x2d,0x76,0x65,0x72,0x74,0x50,0x6f,0x73,0x2e,0x79,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,
    0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,
    0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x36,
    0x33,0x38,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x5f,
    0x64,0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,
    0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x76,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 300 es
    
    layout(location = 0) in vec2 pos;
    
    void main()
    {
        gl_Position = vec4((pos * 2.0) - vec2(1.0), 0.5, 1.0);
    }
    
*/
static const char blending_quad_source_glsl300es[129] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,
    0x73,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x70,0x6f,0x73,0x20,0x2a,0x20,
    0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,
    0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 SSAOUniforms[15];
    uniform highp sampler2D uDepth;
    uniform highp sampler2D uNormalBuffer;
    
    layout(location = 0) out highp float occlusion;
    
    highp float perspectiveDepthToViewZ(highp float depth, highp float near, highp float far)
    {
        return (near * far) / ((far - near) * depth + (-far));
    }
    
    highp float getViewZ(highp float depth)
    {
        return perspectiveDepthToViewZ(depth, SSAOUniforms[14].x, SSAOUniforms[14].y);
    }
    
    highp vec3 getPosition(ivec2 fragCoord)
    {
        highp vec4 _69 = texelFetch(uDepth, fragCoord, 0);
        highp float _70 = _69.x;
        highp vec2 _86 = ((vec2(fragCoord) * 2.0) / vec2(textureSize(uDepth, 0))) - vec2(1.0);
        if (_70 > 0.999998986721038818359375)
        {
            highp vec4 _106 = mat4(SSAOUniforms[4], SSAOUniforms[5], SSAOUniforms[6], SSAOUniforms[7]) * vec4(_86, -1.0, 1.0);
            highp vec3 _130 = normalize((mat4(SSAOUniforms[8], SSAOUniforms[9], SSAOUniforms[10], SSAOUniforms[11]) * (_106 / vec4(_106.w))).xyz - SSAOUniforms[12].xyz);
            return SSAOUniforms[12].xyz + (_130 * ((-SSAOUniforms[12].xyz.z) / _130.z));
        }
        return (mat4(SSAOUniforms[4], SSAOUniforms[5], SSAOUniforms[6], SSAOUniforms[7]) * (vec4((vec3(_86, _70) - vec3(0.5)) * 2.0, 1.0) * (SSAOUniforms[2].w * getViewZ(_70) + SSAOUniforms[3].w))).xyz;
    }
    
    highp float getOcclusion(highp vec3 position, highp vec3 normal, ivec2 fragCoord)
    {
        ivec2 param = fragCoord;
        highp vec3 _189 = getPosition(param) - position;
        return max(dot(normal, normalize(_189)) - SSAOUniforms[13].x, 0.0) * (1.0 / (SSAOUniforms[13].w * length(_189) + SSAOUniforms[13].z));
    }
    
    void main()
    {
        ivec2 _223 = ivec2(gl_FragCoord.xy);
        ivec2 param = _223;
        highp vec3 _234 = getPosition(param);
        highp vec3 normal = texelFetch(uNormalBuffer, _223, 0).xyz;
        highp float oFac = 1.0;
        if (texelFetch(uDepth, _223, 0).x == 1.0)
        {
            normal = vec3(0.0, 0.0, -1.0);
            oFac = 2.0;
        }
        highp vec2 _250 = vec2(_223);
        highp vec2 _270 = (fract(sin(vec2(dot(_250, vec2(12.98980045318603515625, 78.233001708984375)), dot(_250, vec2(39.78900146484375, 102.73400115966796875)))) * 43758.546875) * 2.0) - vec2(1.0);
        highp float _289 = SSAOUniforms[12].w * (1.0 - ((length(_234) - SSAOUniforms[14].x) / (SSAOUniforms[14].y - SSAOUniforms[14].x)));
        highp vec2 kernel[4];
        kernel[0] = vec2(0.0, 1.0);
        kernel[1] = vec2(1.0, 0.0);
        kernel[2] = vec2(0.0, -1.0);
        kernel[3] = vec2(-1.0, 0.0);
        occlusion = 0.0;
        for (int i = 0; i < 4; i++)
        {
            highp vec2 _318 = reflect(kernel[i], _270);
            highp float _321 = _318.x;
            highp float _325 = _318.y;
            highp vec2 _338 = _318 * _289;
            highp vec2 _341 = vec2(_321 * 0.707107007503509521484375 + (_325 * (-0.707107007503509521484375)), 0.707107007503509521484375 * (_321 + _325)) * _289;
            highp vec3 param_1 = _234;
            highp vec3 param_2 = normal;
            ivec2 param_3 = _223 + ivec2(_338);
            occlusion += getOcclusion(param_1, param_2, param_3);
            highp vec3 param_4 = _234;
            highp vec3 param_5 = normal;
            ivec2 param_6 = _223 + ivec2(_341 * 0.75);
            occlusion += getOcclusion(param_4, param_5, param_6);
            highp vec3 param_7 = _234;
            highp vec3 param_8 = normal;
            ivec2 param_9 = _223 + ivec2(_338 * 0.5);
            occlusion += getOcclusion(param_7, param_8, param_9);
            highp vec3 param_10 = _234;
            highp vec3 param_11 = normal;
            ivec2 param_12 = _223 + ivec2(_341 * 0.25);
            occlusion += getOcclusion(param_10, param_11, param_12);
        }
        occlusion = pow(clamp(occlusion * 0.0625, 0.0, 1.0), 1.2999999523162841796875) * oFac;
    }
    
*/
static const char ssao_fs_source_glsl300es[3727] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,
    0x35,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x44,0x65,0x70,
    0x74,0x68,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x42,0x75,0x66,0x66,0x65,0x72,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x65,0x72,0x73,0x70,0x65,0x63,
    0x74,0x69,0x76,0x65,0x44,0x65,0x70,0x74,0x68,0x54,0x6f,0x56,0x69,0x65,0x77,0x5a,
    0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x65,0x70,
    0x74,0x68,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x6e,0x65,0x61,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x66,0x61,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x28,0x6e,0x65,0x61,0x72,0x20,0x2a,0x20,0x66,0x61,0x72,0x29,
    0x20,0x2f,0x20,0x28,0x28,0x66,0x61,0x72,0x20,0x2d,0x20,0x6e,0x65,0x61,0x72,0x29,
    0x20,0x2a,0x20,0x64,0x65,0x70,0x74,0x68,0x20,0x2b,0x20,0x28,0x2d,0x66,0x61,0x72,
    0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x67,0x65,0x74,0x56,0x69,0x65,0x77,0x5a,0x28,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x65,0x70,0x74,0x68,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x65,0x72,0x73,
    0x70,0x65,0x63,0x74,0x69,0x76,0x65,0x44,0x65,0x70,0x74,0x68,0x54,0x6f,0x56,0x69,
    0x65,0x77,0x5a,0x28,0x64,0x65,0x70,0x74,0x68,0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2e,0x78,0x2c,0x20,0x53,
    0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2e,
    0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x67,0x65,0x74,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x69,0x76,
    0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x36,0x39,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,
    0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6f,
    0x72,0x64,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x30,0x20,0x3d,0x20,0x5f,0x36,
    0x39,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x32,0x20,0x5f,0x38,0x36,0x20,0x3d,0x20,0x28,0x28,0x76,0x65,0x63,0x32,
    0x28,0x66,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x29,0x20,0x2a,0x20,0x32,0x2e,
    0x30,0x29,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x53,0x69,0x7a,0x65,0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x30,0x29,
    0x29,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x37,0x30,0x20,0x3e,0x20,0x30,0x2e,
    0x39,0x39,0x39,0x39,0x39,0x38,0x39,0x38,0x36,0x37,0x32,0x31,0x30,0x33,0x38,0x38,
    0x31,0x38,0x33,0x35,0x39,0x33,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x31,0x30,0x36,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x53,
    0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,
    0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x35,0x5d,0x2c,
    0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x36,0x5d,
    0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x37,
    0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x38,0x36,0x2c,0x20,0x2d,
    0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,
    0x33,0x30,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,
    0x6d,0x61,0x74,0x34,0x28,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x73,0x5b,0x38,0x5d,0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x28,0x5f,0x31,
    0x30,0x36,0x20,0x2f,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x30,0x36,0x2e,0x77,
    0x29,0x29,0x29,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x32,0x5d,
    0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x28,0x5f,0x31,0x33,0x30,0x20,0x2a,0x20,0x28,
    0x28,0x2d,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,
    0x32,0x5d,0x2e,0x78,0x79,0x7a,0x2e,0x7a,0x29,0x20,0x2f,0x20,0x5f,0x31,0x33,0x30,
    0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x53,0x53,0x41,
    0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x53,0x53,
    0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x53,
    0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,
    0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x37,0x5d,0x29,
    0x20,0x2a,0x20,0x28,0x76,0x65,0x63,0x34,0x28,0x28,0x76,0x65,0x63,0x33,0x28,0x5f,
    0x38,0x36,0x2c,0x20,0x5f,0x37,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x35,0x29,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x20,0x2a,0x20,0x28,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x73,0x5b,0x32,0x5d,0x2e,0x77,0x20,0x2a,0x20,0x67,0x65,0x74,0x56,0x69,0x65,0x77,
    0x5a,0x28,0x5f,0x37,0x30,0x29,0x20,0x2b,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x77,0x29,0x29,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x67,0x65,0x74,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,
    0x67,0x43,0x6f,0x6f,0x72,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,
    0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,
    0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x38,0x39,0x20,0x3d,0x20,0x67,0x65,0x74,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,
    0x2d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x5f,0x31,0x38,0x39,0x29,0x29,0x20,0x2d,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x2e,0x78,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x53,0x53,0x41,
    0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x2e,0x77,0x20,
    0x2a,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x31,0x38,0x39,0x29,0x20,0x2b,
    0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x33,
    0x5d,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,
    0x32,0x20,0x5f,0x32,0x32,0x33,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x67,
    0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x5f,0x32,0x32,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x33,0x34,0x20,0x3d,0x20,0x67,
    0x65,0x74,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x75,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x42,0x75,0x66,
    0x66,0x65,0x72,0x2c,0x20,0x5f,0x32,0x32,0x33,0x2c,0x20,0x30,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x6f,0x46,0x61,0x63,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,
    0x68,0x28,0x75,0x44,0x65,0x70,0x74,0x68,0x2c,0x20,0x5f,0x32,0x32,0x33,0x2c,0x20,
    0x30,0x29,0x2e,0x78,0x20,0x3d,0x3d,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x6f,0x46,0x61,0x63,0x20,0x3d,0x20,0x32,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x5f,0x32,0x35,0x30,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,
    0x32,0x32,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x37,0x30,0x20,0x3d,0x20,0x28,0x66,0x72,0x61,
    0x63,0x74,0x28,0x73,0x69,0x6e,0x28,0x76,0x65,0x63,0x32,0x28,0x64,0x6f,0x74,0x28,
    0x5f,0x32,0x35,0x30,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x32,0x2e,0x39,0x38,
    0x39,0x38,0x30,0x30,0x34,0x35,0x33,0x31,0x38,0x36,0x30,0x33,0x35,0x31,0x35,0x36,
    0x32,0x35,0x2c,0x20,0x37,0x38,0x2e,0x32,0x33,0x33,0x30,0x30,0x31,0x37,0x30,0x38,
    0x39,0x38,0x34,0x33,0x37,0x35,0x29,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,
    0x35,0x30,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x33,0x39,0x2e,0x37,0x38,0x39,0x30,
    0x30,0x31,0x34,0x36,0x34,0x38,0x34,0x33,0x37,0x35,0x2c,0x20,0x31,0x30,0x32,0x2e,
    0x37,0x33,0x34,0x30,0x30,0x31,0x31,0x35,0x39,0x36,0x36,0x37,0x39,0x36,0x38,0x37,
    0x35,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x34,0x33,0x37,0x35,0x38,0x2e,0x35,0x34,
    0x36,0x38,0x37,0x35,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,
    0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x38,0x39,0x20,0x3d,
    0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x32,
    0x5d,0x2e,0x77,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x28,0x6c,
    0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x32,0x33,0x34,0x29,0x20,0x2d,0x20,0x53,0x53,
    0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2e,0x78,
    0x29,0x20,0x2f,0x20,0x28,0x53,0x53,0x41,0x4f,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x73,0x5b,0x31,0x34,0x5d,0x2e,0x79,0x20,0x2d,0x20,0x53,0x53,0x41,0x4f,0x55,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2e,0x78,0x29,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x6b,0x65,0x72,0x6e,0x65,0x6c,0x5b,0x34,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6b,
    0x65,0x72,0x6e,0x65,0x6c,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6b,
    0x65,0x72,0x6e,0x65,0x6c,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,
    0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6b,
    0x65,0x72,0x6e,0x65,0x6c,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6b,0x65,0x72,0x6e,0x65,0x6c,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,
    0x28,0x2d,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,
    0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x34,0x3b,0x20,0x69,0x2b,0x2b,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x31,0x38,0x20,
    0x3d,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x6b,0x65,0x72,0x6e,0x65,0x6c,
    0x5b,0x69,0x5d,0x2c,0x20,0x5f,0x32,0x37,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x33,0x32,0x31,0x20,0x3d,0x20,0x5f,0x33,0x31,0x38,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x33,0x32,0x35,0x20,0x3d,0x20,0x5f,0x33,0x31,0x38,0x2e,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x33,0x38,0x20,0x3d,0x20,0x5f,0x33,0x31,0x38,
    0x20,0x2a,0x20,0x5f,0x32,0x38,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x34,0x31,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x32,0x31,0x20,0x2a,0x20,0x30,
    0x2e,0x37,0x30,0x37,0x31,0x30,0x37,0x30,0x30,0x37,0x35,0x30,0x33,0x35,0x30,0x39,
    0x35,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,
    0x35,0x20,0x2a,0x20,0x28,0x2d,0x30,0x2e,0x37,0x30,0x37,0x31,0x30,0x37,0x30,0x30,
    0x37,0x35,0x30,0x33,0x35,0x30,0x39,0x35,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,
    0x29,0x29,0x2c,0x20,0x30,0x2e,0x37,0x30,0x37,0x31,0x30,0x37,0x30,0x30,0x37,0x35,
    0x30,0x33,0x35,0x30,0x39,0x35,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,0x20,0x2a,
    0x20,0x28,0x5f,0x33,0x32,0x31,0x20,0x2b,0x20,0x5f,0x33,0x32,0x35,0x29,0x29,0x20,
    0x2a,0x20,0x5f,0x32,0x38,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x20,0x3d,0x20,0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x32,0x32,0x33,0x20,0x2b,0x20,0x69,
    0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x33,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x2b,0x3d,
    0x20,0x67,0x65,0x74,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x32,0x32,0x33,0x20,0x2b,
    0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x34,0x31,0x20,0x2a,0x20,0x30,0x2e,
    0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x63,0x63,
    0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x2b,0x3d,0x20,0x67,0x65,0x74,0x4f,0x63,0x63,
    0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,
    0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,
    0x20,0x3d,0x20,0x5f,0x32,0x32,0x33,0x20,0x2b,0x20,0x69,0x76,0x65,0x63,0x32,0x28,
    0x5f,0x33,0x33,0x38,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x2b,
    0x3d,0x20,0x67,0x65,0x74,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x76,0x65,
    0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x32,0x20,0x3d,0x20,0x5f,0x32,
    0x32,0x33,0x20,0x2b,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x34,0x31,0x20,
    0x2a,0x20,0x30,0x2e,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x2b,0x3d,0x20,0x67,0x65,
    0x74,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x30,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x70,0x6f,0x77,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x6f,0x63,0x63,0x6c,0x75,0x73,
    0x69,0x6f,0x6e,0x20,0x2a,0x20,0x30,0x2e,0x30,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x31,0x2e,0x32,0x39,0x39,0x39,0x39,
    0x39,0x39,0x35,0x32,0x33,0x31,0x36,0x32,0x38,0x34,0x31,0x37,0x39,0x36,0x38,0x37,
    0x35,0x29,0x20,0x2a,0x20,0x6f,0x46,0x61,0x63,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before gltf.h"
#endif
static inline const sg_shader_desc* gltf_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "instance_id";
      desc.attrs[1].name = "position";
      desc.attrs[2].name = "normal";
      desc.attrs[3].name = "color0";
      desc.attrs[4].name = "node_id";
      desc.vs.source = gltf_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 144;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "_16.projectionMatrix";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_MAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[1].name = "_16.viewMatrix";
      desc.vs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_MAT4;
      desc.vs.uniform_blocks[0].uniforms[1].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[2].name = "_16.max_instances";
      desc.vs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[2].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[3].name = "_16.offset";
      desc.vs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[3].array_count = 1;
      desc.vs.images[0].name = "NImodelViewMatrix";
      desc.vs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.vs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.vs.images[1].name = "NInormalMatrix";
      desc.vs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.vs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.source = gltf_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "_505.projectionMatrix";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_MAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[1].name = "_505.viewMatrix";
      desc.fs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_MAT4;
      desc.fs.uniform_blocks[0].uniforms[1].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[2].name = "_505.max_instances";
      desc.fs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_INT;
      desc.fs.uniform_blocks[0].uniforms[2].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[3].name = "_505.offset";
      desc.fs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_INT;
      desc.fs.uniform_blocks[0].uniforms[3].array_count = 1;
      desc.label = "gltf_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* gltf_compute_mat_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "instance_id";
      desc.attrs[1].name = "position";
      desc.attrs[2].name = "quat";
      desc.attrs[3].name = "node_id";
      desc.vs.source = vs_compute_mat_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 160;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "_249.class_id";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[1].name = "_249.max_nodes";
      desc.vs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[1].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[2].name = "_249.max_instances";
      desc.vs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[2].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[3].name = "_249.max_depth";
      desc.vs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[3].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[4].name = "_249.viewMatrix";
      desc.vs.uniform_blocks[0].uniforms[4].type = SG_UNIFORMTYPE_MAT4;
      desc.vs.uniform_blocks[0].uniforms[4].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[5].name = "_249.offset";
      desc.vs.uniform_blocks[0].uniforms[5].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[5].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[6].name = "_249.imat";
      desc.vs.uniform_blocks[0].uniforms[6].type = SG_UNIFORMTYPE_MAT4;
      desc.vs.uniform_blocks[0].uniforms[6].array_count = 1;
      desc.vs.images[0].name = "node_mats_hierarchy";
      desc.vs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.vs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.source = fs_compute_mat_source_glsl300es;
      desc.fs.entry = "main";
      desc.label = "gltf_compute_mat_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* gltf_depth_only_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "instance_id";
      desc.attrs[1].name = "position";
      desc.attrs[2].name = "node_id";
      desc.vs.source = vs_depth_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 144;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "_16.projectionMatrix";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_MAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[1].name = "_16.viewMatrix";
      desc.vs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_MAT4;
      desc.vs.uniform_blocks[0].uniforms[1].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[2].name = "_16.max_instances";
      desc.vs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[2].array_count = 1;
      desc.vs.uniform_blocks[0].uniforms[3].name = "_16.offset";
      desc.vs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_INT;
      desc.vs.uniform_blocks[0].uniforms[3].array_count = 1;
      desc.vs.images[0].name = "NImodelViewMatrix";
      desc.vs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.vs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.source = fs_depth_source_glsl300es;
      desc.fs.entry = "main";
      desc.label = "gltf_depth_only_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* gltf_ground_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "x_y_radius";
      desc.attrs[1].name = "position";
      desc.vs.source = vs_ground_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 80;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "gltf_ground_mats";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 5;
      desc.fs.source = fs_ground_source_glsl300es;
      desc.fs.entry = "main";
      desc.label = "gltf_ground_shader";
    }
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* ssao_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "pos";
      desc.vs.source = blending_quad_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = ssao_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 240;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "SSAOUniforms";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 15;
      desc.fs.images[0].name = "uDepth";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "uNormalBuffer";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "ssao_shader";
    }
    return &desc;
  }
  return 0;
}
