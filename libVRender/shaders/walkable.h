#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input walkable.glsl --output walkable.h --slang glsl300es

    Overview:

        Shader program 'walkable':
            Get shader desc: walkable_shader_desc(sg_query_backend());
            Vertex shader: walkable_vs
                Attribute slots:
                    ATTR_walkable_vs_position = 0
            Fragment shader: walkable_fs
                Uniform block 'walkable_params':
                    C struct: walkable_params_t
                    Bind slot: SLOT_walkable_params = 0
                Image 'u_cache':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_u_cache = 0


    Shader descriptor structs:

        sg_shader walkable = sg_make_shader(walkable_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'walkable_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_walkable_vs_position] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_u_cache = 0;

    Bind slot and C-struct for uniform block 'walkable_params':

        walkable_params_t walkable_params = {
            .vm = ...;
            .pm = ...;
            .viewport_size = ...;
            .cam_pos_res = ...;
            .grid_origin = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_walkable_params, &SG_RANGE(walkable_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_walkable_vs_position (0)
#define SLOT_u_cache (0)
#define SLOT_walkable_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct walkable_params_t {
    glm::mat4 vm;
    glm::mat4 pm;
    glm::vec2 viewport_size;
    uint8_t _pad_136[8];
    glm::vec4 cam_pos_res;
    glm::vec4 grid_origin;
} walkable_params_t;
#pragma pack(pop)
/*
    #version 300 es
    
    out vec2 uv;
    layout(location = 0) in vec2 position;
    
    void main()
    {
        uv = (position + vec2(1.0)) * 0.5;
        gl_Position = vec4(position, 0.0, 1.0);
    }
    
*/
static const char walkable_vs_source_glsl300es[171] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x28,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,
    0x30,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    const float _50[4] = float[](3.0, 10.0, 30.0, 90.0);
    
    uniform highp vec4 walkable_params[11];
    uniform highp sampler2D u_cache;
    
    in highp vec2 uv;
    layout(location = 0) out highp vec4 frag_color;
    
    int hash_index(ivec2 q)
    {
        return ((q.x * 997) + q.y) & 2047;
    }
    
    highp vec4 test_walkable(highp vec2 world_xy)
    {
        int traversed = 0;
        highp float accum = 0.0;
        int ids[16];
        highp float _338;
        highp float _346;
        highp float _355;
        highp float _387;
        highp float _395;
        highp float _403;
        for (int tier = 0; tier < 4; tier++)
        {
            highp vec2 _74 = world_xy / vec2(_50[tier]);
            ivec2 _78 = ivec2(floor(_74));
            ivec2 _82 = ivec2(ceil(_74));
            ivec2 cells[4] = ivec2[](_78, ivec2(_82.x, _78.y), ivec2(_78.x, _82.y), _82);
            int n = 0;
            for (int s = 0; (s < 4) && (n < 16); s++)
            {
                ivec2 param = cells[s];
                highp vec4 _139 = texelFetch(u_cache, ivec2(hash_index(param), tier), 0);
                int _143 = int(_139.x);
                int _147 = int(_139.y);
                int _152 = int(_139.z);
                int _157 = int(_139.w);
                if (_143 >= 0)
                {
                    int _166 = n;
                    n = _166 + 1;
                    ids[_166] = _143;
                }
                if ((n < 16) && (_147 >= 0))
                {
                    int _178 = n;
                    n = _178 + 1;
                    ids[_178] = _147;
                }
                if ((n < 16) && (_152 >= 0))
                {
                    int _189 = n;
                    n = _189 + 1;
                    ids[_189] = _152;
                }
                if ((n < 16) && (_157 >= 0))
                {
                    int _200 = n;
                    n = _200 + 1;
                    ids[_200] = _157;
                }
            }
            if (n > 0)
            {
                for (int i = 0; i < n; i++)
                {
                    if (ids[i] < 0)
                    {
                        continue;
                    }
                    highp vec4 _242 = texelFetch(u_cache, ivec2(ids[i] % 2048, 4 + (ids[i] / 2048)), 0);
                    highp vec2 _252 = world_xy - _242.xy;
                    highp float _265 = mod(atan(_252.y, _252.x) - _242.z, 6.283185482025146484375);
                    highp float ang = _265;
                    if (_265 < 0.0)
                    {
                        ang += 6.283185482025146484375;
                    }
                    highp float _283 = ang * 20.3718318939208984375;
                    int _287 = int(floor(_283));
                    int abin_low = _287;
                    int abin_high = int(ceil(_283));
                    if (_287 < 0)
                    {
                        abin_low += 128;
                    }
                    if (abin_high >= 128)
                    {
                        abin_high -= 128;
                    }
                    int _317 = abin_low % 4;
                    int _321 = (ids[i] % 64) * 32;
                    int _327 = 12 + (ids[i] / 64);
                    highp vec4 _334 = texelFetch(u_cache, ivec2(_321 + (abin_low / 4), _327), 0);
                    if (_317 == 0)
                    {
                        _338 = _334.x;
                    }
                    else
                    {
                        if (_317 == 1)
                        {
                            _346 = _334.y;
                        }
                        else
                        {
                            if (_317 == 2)
                            {
                                _355 = _334.z;
                            }
                            else
                            {
                                _355 = _334.w;
                            }
                            _346 = _355;
                        }
                        _338 = _346;
                    }
                    int _371 = abin_high % 4;
                    highp vec4 _383 = texelFetch(u_cache, ivec2(_321 + (abin_high / 4), _327), 0);
                    if (_371 == 0)
                    {
                        _387 = _383.x;
                    }
                    else
                    {
                        if (_371 == 1)
                        {
                            _395 = _383.y;
                        }
                        else
                        {
                            if (_371 == 2)
                            {
                                _403 = _383.z;
                            }
                            else
                            {
                                _403 = _383.w;
                            }
                            _395 = _403;
                        }
                        _387 = _395;
                    }
                    highp float _417 = min(_338, _387);
                    highp float _420 = length(_252);
                    traversed++;
                    if (_420 < _417)
                    {
                        if (_417 < 9999999.0)
                        {
                            if (_420 < 20.0)
                            {
                                return vec4(0.0, 1.0, 0.0, 0.4000000059604644775390625);
                            }
                            else
                            {
                                accum = max(accum, 20.0 / _420);
                            }
                        }
                        else
                        {
                            accum = max(accum, clamp(2.0 / _420, 0.0, 1.0));
                        }
                    }
                }
                if (traversed > 10)
                {
                    return vec4(0.0, 1.0, 1.0, 0.300000011920928955078125 * accum);
                }
            }
        }
        return vec4(0.0, 1.0, 1.0, 0.300000011920928955078125 * accum);
    }
    
    void main()
    {
        highp mat4 _495 = mat4(walkable_params[4], walkable_params[5], walkable_params[6], walkable_params[7]);
        highp mat4 _499 = mat4(walkable_params[0], walkable_params[1], walkable_params[2], walkable_params[3]);
        highp vec3 _517 = normalize((inverse(_499) * vec4((inverse(_495) * vec4((uv * 2.0) - vec2(1.0), -1.0, 1.0)).xyz, 0.0)).xyz);
        highp float _525 = _517.z;
        if (_525 == 0.0)
        {
            discard;
        }
        highp float _536 = (-walkable_params[9].z) / _525;
        if (_536 < 0.0)
        {
            discard;
        }
        highp vec3 _547 = walkable_params[9].xyz + (_517 * _536);
        highp vec4 _561 = (_495 * _499) * vec4(_547, 1.0);
        highp float _572 = (_561 / vec4(_561.w)).z * 0.5 + 0.5;
        if ((_572 <= 0.0) || (_572 >= 1.0))
        {
            discard;
        }
        highp vec2 param = _547.xy;
        frag_color = test_walkable(param);
    }
    
*/
static const char walkable_fs_source_glsl300es[6401] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x30,0x5b,0x34,
    0x5d,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x5b,0x5d,0x28,0x33,0x2e,0x30,0x2c,
    0x20,0x31,0x30,0x2e,0x30,0x2c,0x20,0x33,0x30,0x2e,0x30,0x2c,0x20,0x39,0x30,0x2e,
    0x30,0x29,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,0x65,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x20,0x75,0x5f,0x63,0x61,0x63,0x68,0x65,0x3b,0x0a,0x0a,0x69,
    0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x0a,0x69,0x6e,0x74,0x20,0x68,0x61,0x73,0x68,0x5f,0x69,0x6e,0x64,0x65,0x78,
    0x28,0x69,0x76,0x65,0x63,0x32,0x20,0x71,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x71,0x2e,0x78,0x20,0x2a,0x20,0x39,
    0x39,0x37,0x29,0x20,0x2b,0x20,0x71,0x2e,0x79,0x29,0x20,0x26,0x20,0x32,0x30,0x34,
    0x37,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x74,0x65,0x73,0x74,0x5f,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,0x65,0x28,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,
    0x78,0x79,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x74,0x72,
    0x61,0x76,0x65,0x72,0x73,0x65,0x64,0x20,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x63,0x63,
    0x75,0x6d,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x69,0x64,0x73,0x5b,0x31,0x36,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,0x38,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x33,0x34,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x35,0x35,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x38,
    0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x33,0x39,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x30,0x33,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x74,0x69,0x65,0x72,
    0x20,0x3d,0x20,0x30,0x3b,0x20,0x74,0x69,0x65,0x72,0x20,0x3c,0x20,0x34,0x3b,0x20,
    0x74,0x69,0x65,0x72,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,
    0x20,0x5f,0x37,0x34,0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x78,0x79,0x20,
    0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x35,0x30,0x5b,0x74,0x69,0x65,0x72,0x5d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,
    0x20,0x5f,0x37,0x38,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x66,0x6c,0x6f,
    0x6f,0x72,0x28,0x5f,0x37,0x34,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x69,0x76,
    0x65,0x63,0x32,0x28,0x63,0x65,0x69,0x6c,0x28,0x5f,0x37,0x34,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x63,0x65,
    0x6c,0x6c,0x73,0x5b,0x34,0x5d,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x32,0x5b,0x5d,
    0x28,0x5f,0x37,0x38,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,0x38,0x32,0x2e,
    0x78,0x2c,0x20,0x5f,0x37,0x38,0x2e,0x79,0x29,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,
    0x28,0x5f,0x37,0x38,0x2e,0x78,0x2c,0x20,0x5f,0x38,0x32,0x2e,0x79,0x29,0x2c,0x20,
    0x5f,0x38,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x6e,0x20,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x73,0x20,0x3d,0x20,0x30,0x3b,
    0x20,0x28,0x73,0x20,0x3c,0x20,0x34,0x29,0x20,0x26,0x26,0x20,0x28,0x6e,0x20,0x3c,
    0x20,0x31,0x36,0x29,0x3b,0x20,0x73,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x69,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x63,
    0x65,0x6c,0x6c,0x73,0x5b,0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x31,0x33,0x39,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,
    0x68,0x28,0x75,0x5f,0x63,0x61,0x63,0x68,0x65,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,
    0x28,0x68,0x61,0x73,0x68,0x5f,0x69,0x6e,0x64,0x65,0x78,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x29,0x2c,0x20,0x74,0x69,0x65,0x72,0x29,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x31,0x34,0x33,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x5f,0x31,0x33,0x39,0x2e,0x78,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x20,0x5f,0x31,0x34,0x37,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x5f,0x31,
    0x33,0x39,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x35,0x32,0x20,0x3d,0x20,0x69,0x6e,
    0x74,0x28,0x5f,0x31,0x33,0x39,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x35,0x37,0x20,
    0x3d,0x20,0x69,0x6e,0x74,0x28,0x5f,0x31,0x33,0x39,0x2e,0x77,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x31,0x34,0x33,0x20,0x3e,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x36,0x36,
    0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x36,0x36,0x20,0x2b,
    0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x64,0x73,0x5b,0x5f,0x31,0x36,0x36,0x5d,0x20,0x3d,0x20,
    0x5f,0x31,0x34,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x28,0x6e,0x20,0x3c,0x20,0x31,0x36,0x29,0x20,0x26,0x26,0x20,
    0x28,0x5f,0x31,0x34,0x37,0x20,0x3e,0x3d,0x20,0x30,0x29,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x31,0x37,0x38,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x37,
    0x38,0x20,0x2b,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x64,0x73,0x5b,0x5f,0x31,0x37,0x38,0x5d,
    0x20,0x3d,0x20,0x5f,0x31,0x34,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x6e,0x20,0x3c,0x20,0x31,0x36,0x29,0x20,
    0x26,0x26,0x20,0x28,0x5f,0x31,0x35,0x32,0x20,0x3e,0x3d,0x20,0x30,0x29,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x5f,0x31,0x38,0x39,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6e,0x20,0x3d,0x20,
    0x5f,0x31,0x38,0x39,0x20,0x2b,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x64,0x73,0x5b,0x5f,0x31,
    0x38,0x39,0x5d,0x20,0x3d,0x20,0x5f,0x31,0x35,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x6e,0x20,0x3c,0x20,0x31,
    0x36,0x29,0x20,0x26,0x26,0x20,0x28,0x5f,0x31,0x35,0x37,0x20,0x3e,0x3d,0x20,0x30,
    0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,0x30,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6e,
    0x20,0x3d,0x20,0x5f,0x32,0x30,0x30,0x20,0x2b,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x64,0x73,
    0x5b,0x5f,0x32,0x30,0x30,0x5d,0x20,0x3d,0x20,0x5f,0x31,0x35,0x37,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x6e,0x20,0x3e,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,
    0x69,0x20,0x3c,0x20,0x6e,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x69,0x64,
    0x73,0x5b,0x69,0x5d,0x20,0x3c,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6e,0x74,0x69,0x6e,0x75,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,0x32,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,0x75,0x5f,0x63,0x61,0x63,0x68,0x65,
    0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x69,0x64,0x73,0x5b,0x69,0x5d,0x20,0x25,
    0x20,0x32,0x30,0x34,0x38,0x2c,0x20,0x34,0x20,0x2b,0x20,0x28,0x69,0x64,0x73,0x5b,
    0x69,0x5d,0x20,0x2f,0x20,0x32,0x30,0x34,0x38,0x29,0x29,0x2c,0x20,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x35,0x32,
    0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x78,0x79,0x20,0x2d,0x20,0x5f,0x32,
    0x34,0x32,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x32,0x36,0x35,0x20,0x3d,0x20,0x6d,0x6f,0x64,0x28,0x61,0x74,
    0x61,0x6e,0x28,0x5f,0x32,0x35,0x32,0x2e,0x79,0x2c,0x20,0x5f,0x32,0x35,0x32,0x2e,
    0x78,0x29,0x20,0x2d,0x20,0x5f,0x32,0x34,0x32,0x2e,0x7a,0x2c,0x20,0x36,0x2e,0x32,
    0x38,0x33,0x31,0x38,0x35,0x34,0x38,0x32,0x30,0x32,0x35,0x31,0x34,0x36,0x34,0x38,
    0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x61,0x6e,0x67,0x20,0x3d,0x20,0x5f,0x32,0x36,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x32,0x36,0x35,0x20,0x3c,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x61,0x6e,0x67,0x20,0x2b,0x3d,0x20,0x36,0x2e,0x32,0x38,
    0x33,0x31,0x38,0x35,0x34,0x38,0x32,0x30,0x32,0x35,0x31,0x34,0x36,0x34,0x38,0x34,
    0x33,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x32,0x38,0x33,0x20,0x3d,0x20,0x61,0x6e,0x67,0x20,0x2a,0x20,
    0x32,0x30,0x2e,0x33,0x37,0x31,0x38,0x33,0x31,0x38,0x39,0x33,0x39,0x32,0x30,0x38,
    0x39,0x38,0x34,0x33,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x38,0x37,
    0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x32,0x38,
    0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x61,0x62,0x69,0x6e,0x5f,0x6c,0x6f,
    0x77,0x20,0x3d,0x20,0x5f,0x32,0x38,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x61,0x62,
    0x69,0x6e,0x5f,0x68,0x69,0x67,0x68,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x63,0x65,
    0x69,0x6c,0x28,0x5f,0x32,0x38,0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x32,0x38,0x37,0x20,0x3c,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,
    0x62,0x69,0x6e,0x5f,0x6c,0x6f,0x77,0x20,0x2b,0x3d,0x20,0x31,0x32,0x38,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x61,0x62,0x69,0x6e,0x5f,0x68,0x69,0x67,0x68,0x20,
    0x3e,0x3d,0x20,0x31,0x32,0x38,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,
    0x69,0x6e,0x5f,0x68,0x69,0x67,0x68,0x20,0x2d,0x3d,0x20,0x31,0x32,0x38,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x31,0x37,0x20,0x3d,0x20,0x61,0x62,0x69,
    0x6e,0x5f,0x6c,0x6f,0x77,0x20,0x25,0x20,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x33,0x32,0x31,0x20,0x3d,0x20,0x28,0x69,0x64,0x73,0x5b,0x69,0x5d,0x20,0x25,0x20,
    0x36,0x34,0x29,0x20,0x2a,0x20,0x33,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,
    0x32,0x37,0x20,0x3d,0x20,0x31,0x32,0x20,0x2b,0x20,0x28,0x69,0x64,0x73,0x5b,0x69,
    0x5d,0x20,0x2f,0x20,0x36,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x33,0x33,0x34,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,
    0x46,0x65,0x74,0x63,0x68,0x28,0x75,0x5f,0x63,0x61,0x63,0x68,0x65,0x2c,0x20,0x69,
    0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x32,0x31,0x20,0x2b,0x20,0x28,0x61,0x62,0x69,
    0x6e,0x5f,0x6c,0x6f,0x77,0x20,0x2f,0x20,0x34,0x29,0x2c,0x20,0x5f,0x33,0x32,0x37,
    0x29,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x31,0x37,0x20,
    0x3d,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x33,0x38,
    0x20,0x3d,0x20,0x5f,0x33,0x33,0x34,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,
    0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x31,0x37,
    0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x34,0x36,0x20,0x3d,0x20,0x5f,0x33,0x33,0x34,
    0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,
    0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x31,0x37,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x35,0x35,0x20,0x3d,0x20,0x5f,0x33,0x33,
    0x34,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x33,0x35,0x35,0x20,0x3d,0x20,0x5f,0x33,0x33,0x34,0x2e,0x77,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x5f,0x33,0x34,0x36,0x20,0x3d,0x20,0x5f,0x33,0x35,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x33,0x38,0x20,0x3d,
    0x20,0x5f,0x33,0x34,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x37,
    0x31,0x20,0x3d,0x20,0x61,0x62,0x69,0x6e,0x5f,0x68,0x69,0x67,0x68,0x20,0x25,0x20,
    0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,
    0x38,0x33,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,0x63,0x68,0x28,
    0x75,0x5f,0x63,0x61,0x63,0x68,0x65,0x2c,0x20,0x69,0x76,0x65,0x63,0x32,0x28,0x5f,
    0x33,0x32,0x31,0x20,0x2b,0x20,0x28,0x61,0x62,0x69,0x6e,0x5f,0x68,0x69,0x67,0x68,
    0x20,0x2f,0x20,0x34,0x29,0x2c,0x20,0x5f,0x33,0x32,0x37,0x29,0x2c,0x20,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x37,0x31,0x20,0x3d,0x3d,0x20,0x30,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x38,0x37,0x20,0x3d,0x20,0x5f,0x33,
    0x38,0x33,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x37,0x31,0x20,0x3d,0x3d,0x20,0x31,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x33,0x39,0x35,0x20,0x3d,0x20,0x5f,0x33,0x38,0x33,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x33,0x37,0x31,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x34,0x30,0x33,0x20,0x3d,0x20,0x5f,0x33,0x38,0x33,0x2e,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x34,0x30,
    0x33,0x20,0x3d,0x20,0x5f,0x33,0x38,0x33,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,
    0x39,0x35,0x20,0x3d,0x20,0x5f,0x34,0x30,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x38,0x37,0x20,0x3d,0x20,0x5f,0x33,0x39,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x34,0x31,0x37,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x33,0x33,0x38,0x2c,
    0x20,0x5f,0x33,0x38,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x34,0x32,0x30,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,
    0x68,0x28,0x5f,0x32,0x35,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x72,0x61,0x76,0x65,0x72,0x73,
    0x65,0x64,0x2b,0x2b,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x32,0x30,0x20,0x3c,
    0x20,0x5f,0x34,0x31,0x37,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x34,0x31,0x37,0x20,0x3c,0x20,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x2e,
    0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x32,0x30,0x20,0x3c,0x20,0x32,0x30,0x2e,0x30,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,
    0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x63,
    0x63,0x75,0x6d,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x61,0x63,0x63,0x75,0x6d,0x2c,
    0x20,0x32,0x30,0x2e,0x30,0x20,0x2f,0x20,0x5f,0x34,0x32,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x63,0x63,0x75,0x6d,0x20,0x3d,0x20,0x6d,0x61,
    0x78,0x28,0x61,0x63,0x63,0x75,0x6d,0x2c,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x32,
    0x2e,0x30,0x20,0x2f,0x20,0x5f,0x34,0x32,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x72,0x61,
    0x76,0x65,0x72,0x73,0x65,0x64,0x20,0x3e,0x20,0x31,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,
    0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,
    0x20,0x2a,0x20,0x61,0x63,0x63,0x75,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,
    0x30,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,0x30,
    0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,
    0x32,0x35,0x20,0x2a,0x20,0x61,0x63,0x63,0x75,0x6d,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x34,0x39,
    0x35,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,
    0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x77,0x61,0x6c,
    0x6b,0x61,0x62,0x6c,0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,
    0x20,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x36,0x5d,0x2c,0x20,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,0x65,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x34,0x39,0x39,0x20,0x3d,0x20,
    0x6d,0x61,0x74,0x34,0x28,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,0x65,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,
    0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x77,0x61,0x6c,
    0x6b,0x61,0x62,0x6c,0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,
    0x20,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x31,0x37,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,
    0x34,0x39,0x39,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x69,0x6e,0x76,
    0x65,0x72,0x73,0x65,0x28,0x5f,0x34,0x39,0x35,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x28,0x75,0x76,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,
    0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x32,0x35,0x20,0x3d,0x20,0x5f,0x35,
    0x31,0x37,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,
    0x32,0x35,0x20,0x3d,0x3d,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x33,0x36,0x20,0x3d,0x20,0x28,
    0x2d,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x39,0x5d,0x2e,0x7a,0x29,0x20,0x2f,0x20,0x5f,0x35,0x32,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x33,0x36,0x20,0x3c,0x20,0x30,0x2e,
    0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x35,0x34,0x37,0x20,0x3d,0x20,0x77,0x61,0x6c,0x6b,0x61,0x62,0x6c,0x65,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x28,
    0x5f,0x35,0x31,0x37,0x20,0x2a,0x20,0x5f,0x35,0x33,0x36,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x35,0x36,
    0x31,0x20,0x3d,0x20,0x28,0x5f,0x34,0x39,0x35,0x20,0x2a,0x20,0x5f,0x34,0x39,0x39,
    0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x35,0x34,0x37,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x37,0x32,0x20,0x3d,0x20,0x28,0x5f,0x35,0x36,
    0x31,0x20,0x2f,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x35,0x36,0x31,0x2e,0x77,0x29,
    0x29,0x2e,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x20,0x2b,0x20,0x30,0x2e,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x35,0x37,0x32,0x20,0x3c,
    0x3d,0x20,0x30,0x2e,0x30,0x29,0x20,0x7c,0x7c,0x20,0x28,0x5f,0x35,0x37,0x32,0x20,
    0x3e,0x3d,0x20,0x31,0x2e,0x30,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x35,0x34,
    0x37,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,0x73,0x74,0x5f,0x77,0x61,0x6c,0x6b,
    0x61,0x62,0x6c,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before walkable.h"
#endif
static inline const sg_shader_desc* walkable_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.vs.source = walkable_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.fs.source = walkable_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 176;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "walkable_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 11;
      desc.fs.images[0].name = "u_cache";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "walkable_shader";
    }
    return &desc;
  }
  return 0;
}
